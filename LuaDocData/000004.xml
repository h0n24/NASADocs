<Documentation Id="1">
    <CommonTables Id="9">
        <Table Name="WorldLocTable" Id="2039"/>
    </CommonTables>
    <Global Id="10">
        <Event Name="InvokeOptionsDialog" Id="12" Deprecated="true" InternalNotes="This keybinding does not seem to exist anymore."/>
        <Event Name="ToggleQuestLog" Id="13" Desc="Fires whenever the UI calls the Event_ToggleQuestLog() function or the player presses the key bound to the quest log.  This is only sent to the player that fired it."/>
        <Event Name="ShowQuestLog" Id="14" Desc="Fires when the UI calls the Event_ShowQuestLoc() function.">
            <Param Name="idQuest" Type="Integer" Id="15" Desc="The id number of the quest that the quest log should open to."/>
        </Event>
        <Event Name="HideQuestLog" Id="16" Desc="Fires in response to the Event_HideQuestLog() function that can be called from Lua.  "/>
        <Event Name="ToggleAchievementWindow" Id="17" Desc="Fires whenever the player presses the keybinding tied to the achievements window or the Event_ToggleAchievementWindow() function is called from the UI..  This is only fired for the player who clicked the keybinding."/>
        <Event Name="InvokeEscapeMenu" Id="18" Deprecated="true" InternalNotes="This doesn&apos;t seem to be called anymore."/>
        <Event Name="CombatFloaters_Configure" Id="19" Deprecated="true" InternalNotes="We aren&apos;t using this anywhere in Lua.  Do we still want to keep it?" Desc="Fires when the player uses the /cfconfig command in chat"/>
        <Event Name="Dialog_ShowState" Desc="Updates and displays the Dialog&apos;s contents and responses based on the provided Ids." Id="20">
            <Param Name="nStateId" Type="Integer" Desc="The id of the state, such as DialogState_TopicChoice or DialogState_QuestAccept or DialogState_QuestComplete or more." Id="21"/>
            <Param Name="queDialog" Type="Quest" Desc="The quest associated with the dialog tree." Id="22"/>
        </Event>
        <Event Name="Dialog_Close" Id="23" Desc="Fires whenever the player picks a dialog option that should close the dialog window."/>
        <Event Name="Dialog_ResponseText" Id="24" Desc="Fires whenever the player selects an option in the dialog text.">
            <Param Name="strText" Type="String" Id="25" Desc="The option that the player selected in the dialog tree."/>
        </Event>
        <Event Name="EpisodeStateChanged" Id="26" InternalNotes="Episode.EpisodeState needs to be converted to an enum." NotStandard="true" Desc="Fires whenever the episode becomes active or is completed.">
            <Param Name="idEpisode" Type="Integer" Id="27" Desc="The id number for the episode whose state changed."/>
            <Param Name="eOldState" Type="Integer" Id="28" Desc="The episode&apos;s previous state.  This lines up with the Episode.EpisodeState set of int constants."/>
            <Param Name="eNewState" Type="Integer" Id="29" Desc="The episode&apos;s new state.  This lines up with the Episode.EpisodeState set of int constants."/>
        </Event>
        <Event Name="DebugPrerequisite" Id="37" Deprecated="true" InternalNotes="Not player facing." Desc="Fires when certain dev commands are used.  Displays the debug string for prereqs." NotTested="true"/>
        <Event Name="AchievementUpdated" Id="39" Desc="Fires when an progress is made towards an achievement&apos;s objective." Example="function Achievements:OnAchievementUpdated(achUpdated)
	if not self.wndMain then
		return
	end

	if self.wndMain:FindChild(&quot;RightSummaryScreen&quot;):IsShown() then
		self:LoadSummaryScreen()
	else
		local wndRightScroll = self.wndMain:FindChild(&quot;RightScroll&quot;)
		local nVScrollPos = wndRightScroll:GetVScrollPos()
		self:BuildRightPanel()
		wndRightScroll:SetVScrollPos(nVScrollPos)
	end
	self.wndMain:FindChild(&quot;BGLeft:HeaderPointsNumber&quot;):SetText(AchievementsLib.GetAchievementPoints())
	self.wndMain:FindChild(&quot;BGLeft:HeaderPoints&quot;):SetText(String_GetWeaselString(Apollo.GetString(&quot;Achievement_OverallPoints&quot;)))
end">
            <Param Name="achUpdated" Type="Achievement" Id="40" Desc="The achievement that has been updated."/>
        </Event>
        <Event Name="PreviousActionBar" Id="42" Deprecated="true" InternalNotes="Unable to find any references to this event in code."/>
        <Event Name="ShowActionBarShortcut" Id="43" Desc="Fires whenever an action bar shortcut is supposed to be shown or hidden." Example="Examples of action bar shortcuts:
Stances for engineer bots
Housing buttons
Warplots commands
Some path missions
">
            <Param Name="nBarIdx" Type="Integer" Id="44" Desc="The bar whose visiblity state has updated."/>
            <Param Name="bShow" Type="Boolean" Id="45" Desc="Whether the bar is supposed to be shown or not."/>
            <Param Name="nShortcuts" Desc="The number of buttons to show from the bar." Type="Integer" Id="14522"/>
        </Event>
        <Event Name="AddSpellShortcut" Id="46" Desc="Fires whenever a spell is granted to the player as part of a quest, challenge, public event, or path mission." NotStandard="true" InternalNotes="ESpellShortcutReason needs to be exposed to Lua for eReason.">
            <Param Name="splDisplayed" Type="Spell" Id="47" Desc="The spell that is granted to the player."/>
            <Param Name="eReason" Type="Integer" Id="48" Desc="The reason the spell was granted to the player."/>
            <Param Name="idSource" Type="Integer" Id="49" Desc="The id of the quest, quest objective, challenge, public event, public event objective, or path mission that granted the spell to the player."/>
        </Event>
        <Event Name="RemoveSpellShortcut" Id="50" InternalNotes="ESpellShortcutReason needs to be exposed to Lua for eReason." Desc="Fires whenever a spell that is part of a quest, challenge, public event, or path mission is removed from the character." NotStandard="true">
            <Param Name="spellData" Type="Spell" Id="51" Desc="The spell that was removed from the character."/>
            <Param Name="eReason" Type="Integer" Id="52" Desc="The reason the player had the spell."/>
            <Param Name="idSource" Type="Integer" Id="53" Desc="The id number of the quest, quest objective, challenge, public event, public event objective, or path mission that the spell is tied to."/>
        </Event>
        <Event Name="ToggleZoneMap" Id="54" Desc="Fires whenever the player presses the key bound to the Map.  This event only fires for the player that pressed the key."/>
        <Event Name="ToggleInventory" Id="55" Desc="Fires whenever the player presses the key bound to the Inventory.  This is only received by the player who pressed the key."/>
        <Event Name="RefreshInventoryBags" Id="56" Desc="Fires whenever the player right clicks to use an item or equip an item, or attempts to send a piece of decor to the crate.  This only fires if the item is in the player&apos;s inventory."/>
        <Event Name="ShowInventory" Desc="Fires in response to the ShowInventory() function." Id="57">
            <Param Name="bShow" Type="Boolean" Desc="Whether the inventory should be shown or not." Id="58"/>
        </Event>
        <Event Name="ToggleTradeSkillsInventory" Id="59" Desc="Fires whenever the ToggleTradeSkillsInventory() function is called from the UI.  This is only sent to the player whose UI called the function."/>
        <Event Name="ToggleCharacterWindow" Id="60" Desc="Fires whenever the player presses the keybinding tied to the character window.  This is only received by the player who pressed the button"/>
        <Event Name="ToggleAbilitiesWindow" Id="61" Desc="Fires whenever the player presses the key bound to toggle the Limited Action Set Builder.  This is only fired for the player who pressed the keybind.">
            <Param Name="bShow" Desc="Whether the Limited Action Set Builder should be shown or not." Type="Boolean" Id="14605"/>
        </Event>
        <Event Name="InvokeVendorWindow" Desc="Fires whenever the player interacts with a vendor NPC." Id="62">
            <Param Name="unitVendor" Type="Unit" Desc="The vendor that the player interacted with." Id="63"/>
        </Event>
        <Event Name="CloseVendorWindow" Id="64" Desc="Fired when the player interacts with another unit while the Vendor UI is up, moves out of range of a vendor while the Vendor UI is open, or the Event_CloseVendorWindow() function is explicitly called in Lua."/>
        <Event Name="VendorItemsUpdated" Id="65" Desc="Fires whenever the player opens the Vendor UI, any player purchases a limited supply item while the player is interacting with the vendor, or the vendor restocks a limited supply item while the player is interacting with it."/>
        <Event Name="BuybackItemsUpdated" Id="66" Desc="Fires when there is a change in the list of Buyback items at a vendor."/>
        <Event Name="RepairItemCompleted" Id="67" Deprecated="true" InternalNotes="Does not seem to be fired."/>
        <Event Name="PlayerCurrencyChanged" Id="68" Desc="Fires whenever the player earns or spends any form of currency."/>
        <Event Name="GroupBag_Changed" Id="69" Deprecated="true" InternalNotes="GroupBag is no longer a thing.  There is one reference in code that needs to be cleaned up, but it is not firing the event." NotStandard="true"/>
        <Event Name="GroupBag_ItemDistributed" Id="70" Deprecated="true" NotStandard="true" InternalNotes="GroupBag is no longer a thing.  There is one reference in code that needs to be cleaned up, but this event is not fired."/>
        <Event Name="ToggleGroupsWindow" Id="73" Deprecated="true" InternalNotes="This doesn&apos;t appear to be called from anywhere in code."/>
        <Event Name="ToggleGroupSharedBag" Id="74" Deprecated="true" InternalNotes="Group Shared Bag is depricated."/>
        <Event Name="PartyBagItemAdded" Id="75" Deprecated="true" InternalNotes="Still listed in LuaGameEvents, but party bag no longer exists."/>
        <Event Name="PartyBagItemRemoved" Id="77" Deprecated="true" InternalNotes="Listed in LuaGameEvents, but never fired."/>
        <Event Name="PartyBagItemUpdated" Id="79" Deprecated="true" InternalNotes="Listed in LuaGameEvents, but never fired."/>
        <Event Name="PartyBagItemAwarded" Id="81" Deprecated="true" InternalNotes="Still listed in LuaGameDEvents, but event no longer exists."/>
        <Event Name="PartyBagItemTimerStarted" Id="83" InternalNotes="Listed in LuaGameEvents, but never called."/>
        <Event Name="PartyBagItemTimerTick" Id="85" Deprecated="true" InternalNotes="Listed in LuaGameEvents, but never fired."/>
        <Event Name="PartyBagItemTimerStopped" Id="87" Deprecated="true" InternalNotes="Listed in LuaGameEvents, but never called."/>
        <Event Name="PartyBagSharedItemsChanged" Id="89" Deprecated="true" InternalNotes="Listed in LuaGameEvents, but never fired."/>
        <Event Name="MessageFinished" Id="90" NotStandard="true" InternalNotes="This seems to be firing 3 times for each floating text.  Two are when the message is created and one when it is destroyed.  All of the floaters passed out have different memory addresses, so maybe we have invisible floaters?
The value we&apos;re passing out is not recognized by apollo, so why are we passing it out?" Desc="Fires whenever a floating text message is destroyed.">
            <Param Name="uMessage" Type="Userdata" Id="91" Desc="The floating text object that was destroyed."/>
        </Event>
        <Event Name="ToggleErrorDialog" Id="92" Desc="Fires whenever a Lua error occurs.  This is only received by the client that the error occurred on."/>
        <Event Name="TogglePlayerTicketWindow" Id="95" Desc="Fires whenever the player types the slash command to open the Player Ticket Window.  It is only handled by the player who used the command."/>
        <Event Name="PersonaUpdateCharacterStats" Id="98" Desc="Fires whenever the player moves an item from one inventory slot to another, the player gains a new item, or the player&apos;s stats change (via a buff, debuff, or new equipment)."/>
        <Event Name="UI_XPChanged" Id="99" Desc="Fires whenever the player&apos;s XP, Elder Points, or rested bonus changes.">
            <Param Name="nXP" Type="Integer" Id="100" Desc="The player&apos;s current XP.  Note, this will not list the player&apos;s current EP once they have hit level 50."/>
            <Param Name="nMinXPForLevel" Type="Integer" Id="101" Desc="The amount of XP the player had to earn before becoming their current level."/>
            <Param Name="nXPToLevel" Type="Integer" Id="102" Desc="The amount of XP the player needs to reach the next level.  This is -1 if the player is at the maximum level."/>
            <Param Name="nRestedBonus" Type="Integer" Id="103" Desc="The amount of XP or EP the player can get from their rested bonus."/>
        </Event>
        <Event Name="UI_HealthChanged" Id="104" Desc="Fires whenever the player&apos;s HP changes">
            <Param Name="nHP" Type="Integer" Id="105" Desc="The player&apos;s current HP."/>
            <Param Name="nMaxHP" Type="Integer" Id="106" Desc="The character&apos;s maximum HP."/>
        </Event>
        <Event Name="UI_EnergyChanged" Id="107" Desc="Fires whenever the amount of energy that the player has for sprinting changes.">
            <Param Name="nCurrentEnergy" Type="Integer" Id="108" Desc="The amount of energy the player currently has."/>
            <Param Name="nMaxEnergy" Type="Integer" Id="109" Desc="The maximum amount of energy the player can have."/>
        </Event>
        <Event Name="UI_LevelChanged" Id="110" InternalNotes="Isn&apos;t this covered by PlayerLevelChange?" Desc="Fires whenever the player&apos;s level changes.">
            <Param Name="nLevel" Type="Integer" Id="111" Desc="The player&apos;s current level."/>
        </Event>
        <Event Name="BreathChanged" Id="112" Desc="Fires whenever the player&apos;s breath meter should change value.">
            <Param Name="nCurrentBreath" Type="Integer" Id="113" Desc="The player&apos;s current breath."/>
            <Param Name="nMaxBreath" Type="Integer" Id="114" Desc="The maximum amount of breath the character can have."/>
        </Event>
        <Event Name="Breath_FlashEvent" Id="115" Desc="Fires when the player has run out of breath and starts taking damage." Example="function Hazards:OnDocumentReady()
                Apollo.RegisterEventHandler(&quot;Breath_FlashEvent&quot;, &quot;OnFlash&quot;, self)
end

function Hazards:OnFlash( nHealthPercentage )
	self.wndSuffocatingProgress:SetSprite(&quot;sprNp_WhiteBarFlash&quot;)
end">
            <Param Name="fHealthPercentRemaining" Type="Float" Id="116" Desc="The percentage of remaining health the player has."/>
        </Event>
        <Event Name="UI_XPBonusAwarded" Desc="Queues an XP award bonus to various RewardQueues and updates the RewardBar&apos;s progress." Id="117" Deprecated="true" InternalNotes="This does not appear to be called from code."/>
        <Event Name="UI_XPBonusUpdated" Id="120" InternalNotes="This does not appear to be called from code." Deprecated="true"/>
        <Event Name="UpdatePathXp" Id="124" Desc="Fires whenever the player gains Path XP.">
            <Param Name="nXPDelta" Desc="The amount of Path XP the player gained." Type="Integer" Id="14637"/>
            <Param Name="strFloaterMessage" Desc="The message that should be displayed on a combat floater when this event is fired." Type="String" Id="14638"/>
            <Param Name="xp" Type="Integer" Id="125" Deleted="true"/>
            <Param Name="str" Type="String" Id="126" Deleted="true"/>
        </Event>
        <Event Name="PathLevelUp" Id="127" Desc="Fires whenever the player gains a path level.">
            <Param Name="nLevel" Type="Integer" Id="128" Desc="The player&apos;s new path level."/>
            <Param Name="strMessage" Type="String" Id="129" Desc="The message that is shown in chat when the event is fired."/>
        </Event>
        <Event Name="Interaction" Incomplete="true" Id="130" Deprecated="true" InternalNotes="Appears to be depricated.  Unable to get it to fire."/>
        <Event Name="ProgressClickWindowDisplay" Id="137" Desc="Fires whenever a CSI should be drawn or hidden.">
            <Param Name="bIsActive" Type="Boolean" Id="138" Desc="Whether or not the CSI should be shown."/>
        </Event>
        <Event Name="SetProgressClickTimes" Id="143" Desc="Fires whenever the player starts a Press and Hold, Rapid Tap, Precision, or Metronome CSI.  Informs the UI of the areas the player is supposed to hit during the CSI.">
            <Param Name="nWidth" Type="Integer" Id="144" Desc="The width of the target area.  If this is 0, the target area is hidden."/>
            <Param Name="nLocation1Start" Type="Integer" Id="145" Desc="The starting location of the first target area."/>
            <Param Name="nLocation2Start" Type="Integer" Id="146" Desc="The starting area of the second target area."/>
            <Param Name="nPasses" Desc="The number of times the progress meter is supposed to move back and forth over the CSI.  This value is nil for Press and Hold and Rapid Tap CSIs, 1 for Precision CSIs, and a number larger than 1 for Metronome CSIs." Type="Integer" Id="14512"/>
        </Event>
        <Event Name="ProgressClickHighlightTime" Id="147" NotStandard="true" InternalNotes="Does this really need to be fired so often?" Desc="Fires twice per frame while the Precision and Metronome CSIs are active.  This informs the UI of whether or not the target areas have been successfully hit by the player.">
            <Param Name="nTargetIdx" Type="Integer" Id="148" Desc="The target area being referenced.  0 is the first target, and 1 is the second.  If there is only one target, then events will still be fired for both, but only events with nTargetIdx of 0 will matter for that CSI."/>
            <Param Name="nPercentageHighlight" Type="Integer" Id="149" Desc="Informs the UI of how much the color for the target area should be changed.  0 is the default color."/>
        </Event>
        <Event Name="ProgressClickWindowCompletionLevel" Id="150" Desc="Fires once per frame while the Click and Hold, Rapid Tap, Precision Tap, and Metronome CSIs are active.  For Click and Hold and Rapid Tap CSIs, this tells the UI the CSI&apos;s progress.">
            <Param Name="nProgress" Type="Integer" Id="151" Desc="The CSI&apos;s progress on the meter, with 0 being the beginning and 100 being the end."/>
            <Param Name="bIsReversed" Desc="Whether or not the CSI&apos;s progress is reversed.  This is primarily used in Metronome CSIs." Type="Boolean" Id="14398"/>
        </Event>
        <Event Name="StoryPanelDialog_Hide" Id="158" Desc="Fires whenever the UI is supposed to stop showing the currently displayed Story Panel.  This event is fired to individual players." Remarks="Story Panels are windows used for messaging information to the player.  They are not an actual window type, but they are grouped together so they can be controlled easily via addons.  Only one Story Panel " Example="This is usually shown immediately before StoryPanelDialog_Show to ensure that only one Story Panel is shown at a time."/>
        <Event Name="StoryPanelDialog_Show" Id="159" Desc="Fires whenever the UI is supposed to show a Story Panel window." Remarks="Story Panels are windows used for messaging information to the player.  They are not an actual window type, but they are grouped together so they can be controlled easily via addons.  Only one Story Panel ">
            <Param Name="ePanel" Type="GameLib.CodeEnumStoryPanel" Id="160" Desc="The type of story panel that should be shown."/>
            <Param Name="arMessageLines" Type="String" Id="161" Desc="An array of text to show in the story panel." Array="true"/>
            <Param Name="fDisplayTime" Type="Float" Id="162" Desc="The amount of time before the Story Panel stould stop being shown."/>
            <Param Name="eStyle" Desc="The style flag for the story panel window." Type="GameLib.CodeEnumStoryPanelStyle" Id="14592"/>
        </Event>
        <Event Name="ResolutionChanged" Id="163" Desc="Fires whenever the player logs into the game, reloads the UI, or changes their resolution.">
            <Param Name="nWidth" Type="Integer" Id="164" Desc="The resolution&apos;s width value."/>
            <Param Name="nHeight" Type="Integer" Id="165" Desc="The resolution&apos;s height value."/>
        </Event>
        <Event Name="DuelStateChanged" Id="166" Desc="Fires whenever the player&apos;s duel state changes.">
            <Param Name="unitDueling" Type="Unit" Id="167" Desc="The player&apos;s duel opponent."/>
            <Param Name="eDuelState" Desc="The duel state that the player has entered." Type="GameLib.CodeEnumDuelState" Id="13864"/>
        </Event>
        <Event Name="StalkerWoundsUpdate" Id="168" Deprecated="true" NotStandard="true" InternalNotes="This does not appear to be fired and should be removed."/>
        <Event Name="PlayerLevelChange" Id="175" InternalNotes="nAttribute points is 0 from lvl 1 - 50.  If we aren&apos;t using this, we shouldn&apos;t pass it out.  If we are, the data should be valid." Desc="Fires whenever the player gains a level.  This is not effected by changes in effective level caused by mentoring or rallying." NotStandard="true">
            <Param Name="nLevel" Type="Integer" Id="176" Desc="The player&apos;s new level."/>
            <Param Name="nAttributePoints" Desc="The number of attribute points that the player has available at the new level.  This should always be 0." Type="Integer" Id="14373"/>
            <Param Name="nAbilityPoints" Desc="The number of ability points granted to the character at the new level." Type="Integer" Id="14374"/>
        </Event>
        <Event Name="SubZoneChanged" Id="177" Desc="Fires whenever the player moves into a new subzone.">
            <Param Name="idZone" Type="Integer" Id="178" Desc="The id number for subzone."/>
            <Param Name="strSubZoneName" Type="String" Id="179" Desc="The name of the subzone."/>
        </Event>
        <Event Name="PlayerTitleChange" Id="180" Desc="Fires whenever the player changes their title.  This only fires to the current player. Other players should handle the UnitTitleChange event.">
            <Param Name="uId" Type="Integer" Id="181" Deleted="true"/>
            <Param Name="title" Type="String" Id="182" Deleted="true"/>
        </Event>
        <Event Name="PlayerTitleUpdate" Id="183" Desc="Fires whenever the player gains a new title."/>
        <Event Name="AbilityBookChange" Id="184" Desc="Fires when a change is made to the Action Set Builder."/>
        <Event Name="SetPlayerPath" Id="211" Desc="Fires whenever the player&apos;s path changes.  This should only be fired when the character is initially created."/>
        <Event Name="PlayerPortraitMessage" Id="213" Deprecated="true" InternalNotes="Does not appear to be called anywhere in code."/>
        <Event Name="TradeSkills_Show" Id="216" Deprecated="true" InternalNotes="Does not seem to be called in code."/>
        <Event Name="TradeSkills_UpdateQuantities" Id="218" Deprecated="true" InternalNotes="Does not seem to be called in code."/>
        <Event Name="TradeSkills_Crafting" Id="219" InternalNotes="Does not seem to be called anywhere in code" Deprecated="true"/>
        <Event Name="TradeSkillsBreakdown_Show" Id="222" InternalNotes="Does not appear to be called in code."/>
        <Event Name="TradeSkillsItemBreakdown_BreakCompleted" Id="224" Deprecated="true" InternalNotes="This does not appear to be called in code."/>
        <Event Name="GroupLeaderPhaseChanged" Id="227" NotTested="true" InternalNotes="Too much unknown here.  There&apos;s no instance of us using this in Lua, so...?" Desc="Fires whenever the group leader moves in another phase." NeedProofread="true" NotStandard="true">
            <Param Name="bJoinAllowed" Type="Boolean" Id="228" Desc="Whether or not the player is allowed to join the group leader&apos;s phase."/>
        </Event>
        <Event Name="CinematicsNotify" Id="236" Desc="Notifies the player that a cinematic is starting" Deprecated="true" InternalNotes="Event doesn&apos;t seem to be fired.">
            <Param Name="strMessage" Type="String" Id="237" Desc="The notification message that should be displayed."/>
            <Param Name="idParam" Type="Integer" Id="238" Desc="The message&apos;s id."/>
        </Event>
        <Event Name="CinematicsCancel" Id="239" Deprecated="true" InternalNotes="This event doesn&apos;t seem to be called anywhere in C++"/>
        <Event Name="ToggleMailWindow" Id="244" Desc="Fires whenever the player presses the key bound to Mail.  This event is only handled by the player who pressed the key."/>
        <Event Name="CanVacuumChange" Id="245" Desc="Fires when the player&apos;s ability to vacuum nearby loot has changed due to loot dropping, being vacuumed, or being removed from the world." Example="function HUDAlerts:OnCanVacuumChanged(bCanVacuum)
	
local strKeybind = GameLib.GetKeyBinding(&quot;VacuumLoot&quot;)
	
self.wndLootAlert:FindChild(&quot;AlertItemKeybindText&quot;):SetText(strKeybind)
	
self.wndLootAlert:FindChild(&quot;AlertItemKeybind&quot;):Show(strKeybind ~= Apollo.GetString(&quot;HUDAlert_Unbound&quot;))

	
if not self.wndLootAlert:IsShown() and bCanVacuum then
		
self.wndLootAlert:Show(bCanVacuum, true)
		
self.wndLootAlert:FindChild(&quot;AlertItemTransition&quot;):SetSprite(&quot;sprAlert_SectionGlowRingFlash&quot;)
	
else
		
self.wndLootAlert:Show(bCanVacuum)

	
end

	
self:OnUpdateInventory() -- Check Full Bag Indicator

	
self.wndAlertContainer:ArrangeChildrenHorz(0)

end">
            <Param Name="bCanVacuum" Type="Boolean" Id="246" Desc="Whether or not the ability to vacuum is active."/>
        </Event>
        <Event Name="GenericError" Id="247" Desc="Fires whenever the player causes a generic error that is flashed on the screen.">
            <Param Name="eError" Type="GameLib.CodeEnumGenericError" Id="248" Desc="The error that was fired."/>
            <Param Name="strMessage" Type="String" Id="249" Desc="The string that should be shown when the error is thrown."/>
        </Event>
        <Event Name="WrangleCreature" Id="250" Deprecated="true" InternalNotes="Wrangling is no longer in the game."/>
        <Event Name="ShowResurrectDialog" Desc="Fires when the player shows up as a ghost after death and when the player&apos;s resurrect options update." Id="259">
            <Param Name="bPlayerIsDead" Type="Boolean" Desc="Whether the player is dead or not." Id="260"/>
            <Param Name="bWakeHere" Desc="Whether the player has the option to resurrect at their current location or not." Type="Boolean" Id="14553"/>
            <Param Name="bRezHolocrypt" Desc="Whether the player has the option to resurrect at the nearest holocrypt or not." Type="Boolean" Id="14554"/>
            <Param Name="bExitInstance" Desc="Whether the player has the option to exit the instance to resurrect or not.  This option is only available during dungeons, adventures, and shiphand missions." Type="Boolean" Id="14555"/>
            <Param Name="bRezAtCaster" Desc="Whether the player has the option to resurrect at the same location as a player who revived them or not." Type="Boolean" Id="14556"/>
            <Param Name="bHasRezFromPlayer" Desc="Whether another player has attempted to revive the player or not." Type="Boolean" Id="14557"/>
            <Param Name="nTimeBeforeRez" Desc="How long the player must wait before they are able to select any resurrect options, in milliseconds." Type="Integer" Id="14558"/>
            <Param Name="nTimeBeforeWakeHere" Desc="The amount of time before the player is able to use the &quot;Wake Here&quot; option, in milliseconds." Type="Integer" Id="14559"/>
            <Param Name="nForceRezTimer" Desc="The amount of time before the player is forced to resurrect at the nearest holocrypt." Type="Integer" Id="14560"/>
            <Param Name="bIsInstancedPvp" Type="Boolean" Desc="If the player is participating in instanced PvP or not. If so, winResurrect may be handled differently." Id="261" Deleted="true"/>
            <Param Name="bEnableRezHere" Type="Boolean" Desc="If the player can resurrect at the specified location." Id="262" Deleted="true"/>
            <Param Name="nRezCost" Type="Integer" Desc="The cost to resurrect a player." Id="263" Deleted="true"/>
            <Param Name="nTimeBeforeRezableInSeconds" Type="Integer" Desc="The time in seconds before a player can be resurrected." Id="264" Deleted="true"/>
        </Event>
        <Event Name="CasterResurrectedPlayer" Id="265" Desc="Fires when the current player is revived by another player.">
            <Param Name="strCasterName" Type="String" Id="266" Desc="The name of the player that resurrected the player."/>
        </Event>
        <Event Name="Dialog_ViewIntro" Id="11" Deprecated="true" InternalNotes="This does not appear to be called in code."/>
        <Event Name="ChatMessage" Id="231" NotStandard="true" Desc="Fires when a message is sent on a chat channel">
            <Param Name="channelSource" Desc="The channel where the message should be displayed." Type="ChatChannel" Id="13456"/>
            <Param Type="Table" Name="tMessageInfo" Desc=" " Id="13457">
                <Item Name="bAutoResponse" Desc="Whether or not the message is an auto response (from messaging an afk player for example)" Type="Boolean" Id="13458"/>
                <Item Name="bGM" Desc="Whether the message was sent by a GM or not." Type="Boolean" Id="13459"/>
                <Item Name="bSelf" Desc="Whether the message was sent by the player or not." Type="Boolean" Id="13460"/>
                <Item Name="strSender" Desc="The name of the source of the message." Type="String" Id="13461"/>
                <Item Name="strRealmName" Desc="The name of the sender&apos;s home realm." Type="String" Id="13462"/>
                <Item Name="nPresenceState" Desc="The sender&apos;s status.  This value lines up with the FriendshipLib.AccountPresenceState set of constants.  Returns FriendshipLib.AccountPresenceStateAvailable if it is not a player." Type="Integer" Id="13463"/>
                <Item Type="Table" Name="arMessageSegments" Desc="This is currently using the incorrect prefix.  It is a table with different types in it." Id="13464">
                    <Item Name="bAlien" Desc="Whether or not the text is flagged to show alien font." Type="Boolean" Id="13465"/>
                    <Item Name="bProfanity" Desc="Whether or not the text contains profanity." Type="Boolean" Id="13466"/>
                    <Item Name="bRoleplay" Desc="Whether or not the text is flagged as Role Play text." Type="Boolean" Id="13467"/>
                    <Item Name="strText" Desc="The text that is displayed." Type="String" Id="13468"/>
                </Item>
                <Item Name="unitSource" Desc="The unit that sent the message.  This variable does not exist for messages not sent by a unit, such as system messages." Type="Unit" Id="13469"/>
                <Item Name="bShowChatBubble" Desc="Whether or not a chat bubble should be shown above the character." Type="Boolean" Id="13470"/>
                <Item Name="bCrossFaction" Desc="Whether or not the message came from a character of the other faction." Type="Boolean" Id="13471"/>
                <Item Name="nReportId" Desc="The id that corresponds with the message.  This value is used for chat reporting purposes." Type="Integer" Id="13472"/>
            </Param>
            <Param Name="nFlagsRef" Type="Lua Table" Id="232" Deleted="true"/>
            <Param Name="nChannelRef" Type="Lua Table" Id="233" Deleted="true"/>
            <Param Name="strSender" Type="String" Id="234" Deleted="true"/>
            <Param Name="strChatMessage" Type="String" Id="235" Deleted="true"/>
        </Event>
        <Event Name="CSIKeyPressed" Desc="When the client side interaction input key is pressed or released" Id="3092"/>
        <Event Name="HousingBuildStarted" Id="6663" Desc="Fires whenever the player starts to build a plug on a housing plot.">
            <Param Name="nSocket" Desc="The socket number where the plug is being built." Type="Integer" Id="14256"/>
        </Event>
        <Event Name="HousingBuildComplete" Id="6664" InternalNotes="Event name seems different than when it fires." Desc="Fires whenever a housing plug starts building.">
            <Param Name="nSocketUpdated" Desc="The socket that was updated." Type="Integer" Id="14255"/>
        </Event>
        <Event Name="ChangeWorld" Id="6665" Desc="Fires when the player is moved to a different zone or instance."/>
        <Event Name="ShowInstanceGameModeDialog" Id="6666" Desc="Fires whenever a player should be shown the instance difficulty window.  This is primarily used when a player attempts to enter an adventure or dungeon via the entrance instead of via the group finder UI.">
            <Param Type="Table" Name="tInfo" Id="14523">
                <Item Name="bDifficultyNormal" Desc="Whether or not the Normal difficulty is available for the group." Type="Boolean" Id="14524"/>
                <Item Name="bDifficultyVeteran" Desc="Whether the group meets the criteria for the veteran version of the dungeon or not." Type="Boolean" Id="14525"/>
                <Item Name="bFlagsScaling" Desc="Whether the group is allowed to choose whether they scale their level to the dungeon&apos;s difficulty or not." Type="Boolean" Id="14526"/>
                <Item Name="eExistingDifficulty" Desc="If the difficulty has already been chosen, this variable will be set to the appropriate value." Type="GroupLib.Difficulty" Id="14527"/>
                <Item Name="bExistingScaling" Desc="Whether the scaling flag is turned on or off for the dungeon or adventure." Type="Boolean" Id="14528"/>
            </Param>
        </Event>
        <Event Name="ShowInstanceWaitingDialog" Id="6667" Deprecated="true" NotTested="true" InternalNotes="Unsure of what fires this."/>
        <Event Name="HideInstanceGameModeDialog" Id="6668" Desc="Fires whenever the the player moves away from an instance portal or teleporter after receiving a ShowInstanceGameModeDialog event.">
            <Param Name="bNeedToNotifyServer" Desc="Whether or not the server needs to be notified of the window closing.  This should be passed into GameLib.OnClosedInstanceSettings()." Type="Boolean" Id="14253"/>
        </Event>
        <Event Name="ForceResurrect" Id="6669" InternalNotes="There may be more cases." Desc="Fires when the player&apos;s automatic release timer runs out while they are dead."/>
        <Event Name="ToggleCodex" Id="6670" Desc="Fires whenever the player presses the keybind tied to the Codex menu or called Event_ToggleCodex() from the UI.  This event is only fired for the player who pressed the keybinding."/>
        <Event Name="ToggleGroupFinder" Id="6671" Desc="Fires whenever the player presses the key bound to the GroupFinder UI.  This event is only received by the player who pressed the keybinding."/>
        <Event Name="QuestCalloutToggle" Id="6672" Desc="Fires in response to the GameLib.ToggleQuestUnitCallouts() function.  This event tells the UI that the gear / path interact icons on objects in the world were toggled on or off."/>
        <Event Name="QuestStateChanged" Id="6673" Desc="Fires whenever the quest&apos;s state is updated." NotStandard="true" InternalNotes="Quest.QuestState needs to be made an enum.">
            <Param Name="queUpdated" Desc="The quest whose state was changed." Type="Quest" Id="14487"/>
            <Param Name="eState" Desc="The quest&apos;s new state.  This value lines up with the Quest.QuestState set of int constants." Type="Integer" Id="14488"/>
        </Event>
        <Event Name="QuestObjectiveUpdated" Id="6674" NotStandard="true" InternalNotes="Are &quot;Path Quests&quot; actually a thing?" Desc="Fires whenever the player makes progress on a quest objective.">
            <Param Name="queUpdated" Desc="The quest that the objective belongs to." Type="Quest" Id="14484"/>
            <Param Name="idObjective" Desc="The id of the quest objective that was updated." Type="Integer" Id="14485"/>
            <Param Name="bIsPathQuest" Desc="Whether or not the quest objective belongs to a path quest." Type="Boolean" Id="14486"/>
        </Event>
        <Event Name="QuestInit" Id="6675" Desc="Fires when the quest system is initialized."/>
        <Event Name="QuestGetCurrentQuestId" Id="6676" Deprecated="true" InternalNotes="This exists in code, but does not seem to be called anywhere."/>
        <Event Name="Dialog_QuestShare" Id="6677" Desc="Fires whenever a group member attempts to share a quest that the player does not have yet.">
            <Param Name="queShared" Desc="The quest that the player is attempting to share." Type="Quest" Id="13856"/>
            <Param Name="unitSharingPlayer" Desc="The unit that shared the quest." Type="Unit" Id="13857"/>
        </Event>
        <Event Name="PrereqFailureMessage" Incomplete="true" Id="6678" Deprecated="true" InternalNotes="Unable to get this to fire."/>
        <Event Name="AchievementGranted" Id="6679" Desc="Fires when an achievement is completed.">
            <Param Name="achComplete" Desc="The achievement that was completed." Type="Achievement" Id="9443"/>
        </Event>
        <Event Name="DatacubeUpdated" Id="6680" Desc="Fires when the player unlocks with a new datacube, journal entry, or Tales From Beyond the Fringe." InternalNotes="Also fires when all datacube info is forgotten.">
            <Param Name="idEntry" Desc="The id number for the entry." Type="Integer" Id="13851"/>
            <Param Name="bIsVolume" Desc="Whether or not the entry was unlocked by entering a trigger volume." Type="Boolean" Id="13854"/>
        </Event>
        <Event Name="ChallengeFailTime" Id="6681" Desc="Fires when the player fails a challenge due to time running out before any tiers were reached.">
            <Param Name="chalFailed" Desc="The challenge that was failed." Type="Challenge" Id="13419"/>
            <Param Name="strHeader" Desc="The header for the &quot;Fail&quot; notification." Type="String" Id="13420"/>
            <Param Name="strDescription" Desc="The body of the &quot;Fail&quot; notification." Type="String" Id="13421"/>
            <Param Name="nDuration" Desc="How long the &quot;Fail&quot; notification should be displayed (in milliseconds)." Type="Integer" Id="13422"/>
        </Event>
        <Event Name="ChallengeFailArea" Id="6682" Desc="Fires when a challenge fails because the player left the area.">
            <Param Name="chalFailed" Desc="The challenge that was failed." Type="Challenge" Id="13406"/>
            <Param Name="strHeader" Desc="The header for the &quot;Fail&quot; notification." Type="String" Id="13407"/>
            <Param Name="strDescription" Desc="The body of the &quot;Fail&quot; notification." Type="String" Id="13408"/>
            <Param Name="nDuration" Desc="How long the &quot;Fail&quot; notification should be shown (in milliseconds)." Type="Integer" Id="13409"/>
        </Event>
        <Event Name="ChallengeFailGeneric" Id="6683" Desc="Fires if a player fails a challenge for reasons other than time or leaving the area.">
            <Param Name="chalFailed" Desc="The challenge that the player failed." Type="Challenge" Id="13410"/>
            <Param Name="strHeader" Desc="The header for the &quot;Fail&quot; notification." Type="String" Id="13411"/>
            <Param Name="strDescription" Desc="The body of the &quot;Fail&quot; notification." Type="String" Id="13412"/>
            <Param Name="nDuration" Desc="How long the &quot;Fail&quot; notification should be shown (in milliseconds)." Type="Integer" Id="13413"/>
        </Event>
        <Event Name="ChallengeCooldownActive" Id="6684" NotTested="true" InternalNotes="Possibly depricated?  It&apos;s hard to tell since I think we block the case where we&apos;d receive this event in Lua" Desc="Fires when the player attempts to start a challenge that is on cooldown.">
            <Param Name="idChallenge" Desc="The id number of the challenge." Type="Integer" Id="13394"/>
            <Param Name="strHeader" Desc="The challenge&apos;s title." Type="String" Id="13395"/>
            <Param Name="strErrorMsg" Desc="The error message that should be shown for this event." Type="String" Id="13396"/>
            <Param Name="nDuration" Desc="The duration that the error message should be shown for (in milliseconds)." Type="Integer" Id="13397"/>
        </Event>
        <Event Name="ChallengeAreaRestriction" Id="6685" Desc="Fires when the player attempts to start/retry a challenge while they are outside of the challenge&apos;s starting area.">
            <Param Name="idChallenge" Desc="The ID number for the challenge." Type="Integer" Id="13381"/>
            <Param Name="strHeader" Desc="The challenge&apos;s title." Type="String" Id="13382"/>
            <Param Name="strDescription" Desc="The message that should be displayed so the player knows they are outside of the challenge area." Type="String" Id="13383"/>
            <Param Name="fDuration" Desc="The length of time (in seconds) that the message is displayed." Type="Float" Id="13384"/>
        </Event>
        <Event Name="ChallengeRewardReady" Id="6686" Desc="Fires when the challenge&apos;s reward has been determined." Remarks="This is used in the stock UI to show where the roulette wheel lands after completing a challenge.">
            <Param Name="idChallenge" Desc="The id number of the challenge that was completed." Type="Challenge" Id="13425"/>
            <Param Name="nReward" Desc="The reward number that the player received from the challenge." Type="Integer" Id="13426"/>
        </Event>
        <Event Name="ChallengeRewardListReady" Id="6687" NotStandard="true" InternalNotes="We could really use an enum for reward tiers" Desc="Fires when we have the information we need to populate the challenge&apos;s rewards.">
            <Param Name="idChallenge" Desc="The challenge that was completed." Type="Integer" Id="13423"/>
            <Param Name="nRewardTier" Desc="The challenge tier that the player completed.  1 is Bronze, 2 is Silver, 3 is Gold." Type="Integer" Id="13424"/>
        </Event>
        <Event Name="ChallengeTierAchieved" Id="6688" Desc="Fires whenever the player completes a challenge tier." NotStandard="true" InternalNotes="We could really use an enum for the tiers">
            <Param Name="idChallenge" Desc="The id number of the challenge." Type="Integer" Id="13434"/>
            <Param Name="nTierCompleted" Desc="The challenge tier that was completed.  1 = Bronze, 2 = Silver, 3 = Gold." Type="Integer" Id="13435"/>
        </Event>
        <Event Name="ChallengeCompletedSound" Id="6689" Desc="Fires whenever we should play the sound for a completed challenge.">
            <Param Name="idChallenge" Desc="The id number of the challenge that was completed." Type="Integer" Id="13389"/>
        </Event>
        <Event Name="ChallengeFailSound" Id="6690" Desc="Fires when the &quot;Fail&quot; sound should be played for a challenge.">
            <Param Name="idChallenge" Desc="The id number for the challenge that the sound is played for." Type="Integer" Id="13414"/>
        </Event>
        <Event Name="ChallengeUpdated" Id="6691" Desc="Fires whenever progress is made on a challenge, when the player leaves and re-enters a challenge area, and whenever the player selects a challenge reward to receive their tier roll bonus.">
            <Param Name="idChallenge" Desc="The id number of the challenge that was updated." Type="Integer" Id="13438"/>
        </Event>
        <Event Name="HazardEnabled" Id="6692" Desc="Fires whenever a hazard is activated for the player.  This can be triggered by entering a hazard area or by a quest/event starting a hazard for the player.">
            <Param Name="idHazard" Desc="The hazard&apos;s id number." Type="Integer" Id="14242"/>
            <Param Name="strDisplayText" Desc="The string associated with the hazard.  This is displayed next to the hazard bar in the base UI." Type="String" Id="14243"/>
        </Event>
        <Event Name="HazardRemoved" Id="6693" Desc="Fires whenever a the conditions for a hazard are removed from the player.">
            <Param Name="idHazard" Desc="The hazard&apos;s id number." Type="Integer" Id="14244"/>
        </Event>
        <Event Name="HazardUpdated" Id="6694" Desc="Fires whenever information about the hazard has been updated."/>
        <Event Name="HazardShowMinimapUnit" Id="6695" Desc="Fires whenever a hazard should be displayed on the minimap.">
            <Param Name="idHazard" Desc="The hazard&apos;s id number." Type="Integer" Id="14247"/>
            <Param Name="unitMarker" Desc="The unit used to mark the hazard on the minimap." Type="Unit" Id="14248"/>
            <Param Name="bBeneficial" Desc="Whether or not the hazard is helpful to the player." Type="Boolean" Id="14249"/>
        </Event>
        <Event Name="HazardRemoveMinimapUnit" Id="6696" Desc="Fires whenever a hazard that is currently shown on the Minimap should be removed.">
            <Param Name="idHazard" Desc="The id number for the hazard that should be removed." Type="Integer" Id="14245"/>
            <Param Name="unitRemoved" Desc="The unit used to represent the hazard on the minimap." Type="Unit" Id="14246"/>
        </Event>
        <Event Name="DatacubePlaybackEnded" Id="6697" Desc="Fires when a datacube&apos;s VO ends or is forced to end."/>
        <Event Name="ActionBarDescriptionSpell" Id="6698" InternalNotes="This is being fired to Lua all the time.  Why?

Make the Spell4CastResult table available since tReasons uses it?" NotStandard="true" Desc="Displays information for a spell on the actionbar.">
            <Param Name="splDisplayed" Desc="The spell currently being displayed." Type="Spell" Id="9444"/>
            <Param Name="tEffects" Desc="A table containing information about the spell." Type="Table" Id="9445">
                <Item Name="sprite" Desc="The name of the sprite for the spell" Type="String" Id="13320"/>
                <Item Name="textString" Desc="The spell&apos;s description" Type="String" Id="13321"/>
                <Item Name="countString" Desc="The number of charges for the spell" Type="String" Id="13322"/>
                <Item Name="globalCooldown" Desc="Whether or not the spell is affected by the Global Cooldown" Type="Boolean" Id="13323"/>
                <Item Name="cooldownPercent" Type="Float" Id="13324"/>
                <Item Name="cooldownTime" Desc="The number of milliseconds in the spell&apos;s cooldown" Type="Integer" Id="13325"/>
                <Item Name="casting" Desc="Whether or not the spell is being cast" Type="Boolean" Id="13326"/>
                <Item Name="radarSweep" Type="Boolean" Id="13327"/>
                <Item Name="popIcon" Type="Boolean" Id="13328"/>
                <Item Name="readyBlingSprite" Type="Boolean" Id="13329"/>
                <Item Name="blur" Type="Boolean" Id="13330"/>
                <Item Name="shake" Type="Boolean" Id="13331"/>
                <Item Name="shatterSprite" Type="Boolean" Id="13332"/>
                <Item Name="itemUnavailable" Type="Boolean" Id="13333"/>
                <Item Name="textColor" Desc="The color of the description text" Type="CColor" Id="13334"/>
                <Item Name="diffuse" Desc="The spell&apos;s diffuse color" Type="CColor" Id="13335"/>
                <Item Name="saturation" Type="Float" Id="13336"/>
                <Item Name="lightOverlay" Type="Boolean" Id="13337"/>
                <Item Name="diffused" Type="Boolean" Id="13338"/>
                <Item Name="indicatorSprite" Type="Boolean" Id="13339"/>
            </Param>
            <Param Name="tReasons" Desc="A list of flags that may be referenced by Lua." Type="Table" Id="9446"/>
        </Event>
        <Event Name="StartSpellThreshold" Id="6699" Desc="Fires whenever the player uses a spell that can be used multiple times within the same cooldown, such as the Warrior&apos;s Rampage or Esper&apos;s Telekinetic Strike.">
            <Param Name="idSpell" Desc="The id number of the spell that triggered this event." Type="Integer" Id="14589"/>
            <Param Name="nMaxThresholds" Desc="The maximum number of thresholds the spell has" Type="Integer" Id="14590"/>
            <Param Name="eCastMethod" Desc="The method the player used to activate the spell." Type="Spell.CodeEnumCastMethod" Id="14591"/>
        </Event>
        <Event Name="ClearSpellThreshold" Id="6700" Desc="Fires when the &quot;Window of Opportunity&quot; for spells with multiple uses (ex. Stalker&apos;s Nano Field, Esper&apos;s Psychic Frenzy) should close.  This can happen either because the timer ran out, the player used another ability, or the player activated the max number of times.">
            <Param Name="idSpell" Desc="The id number of the spell whose threshold needs to close." Type="Integer" Id="13505"/>
        </Event>
        <Event Name="UpdateSpellThreshold" Id="6701" Desc="Fires whenever the player uses a spell with a threshold timer, while the timer is running.">
            <Param Name="idSpell" Desc="The spell&apos;s id number." Type="Integer" Id="14639"/>
            <Param Name="nCurrentThreshold" Desc="The number of times the player has used the ability since the threshold timer was started." Type="Integer" Id="14640"/>
        </Event>
        <Event Name="ApplyCCState" Id="6702" Desc="Fires when a CC state is applied to a unit.">
            <Param Name="eState" Desc="A number representing the CC applied to the player." Type="Unit.CodeEnumCCState" Id="13377"/>
            <Param Name="unitTarget" Desc="The unit that is affected by the CC state." Type="Unit" Id="13378"/>
        </Event>
        <Event Name="RemoveCCState" Id="6703" Desc="Fires whenever a CC state is removed from a unit.">
            <Param Name="eState" Desc="The CC state that was removed from the unit." Type="Unit.CodeEnumCCState" Id="14499"/>
            <Param Name="unitSource" Desc="The unit that the CC state was removed from." Type="Unit" Id="14500"/>
        </Event>
        <Event Name="ActivateCCStateStun" Id="6704" Desc="Fires when the player is stunned." Example="function CrowdControlGameplay:OnActivateCCStateStun(eChosenDirection)
	self.wndProgress = Apollo.LoadForm(self.xmlDoc, &quot;ButtonHit_Progress&quot;, nil, self)
	self.wndProgress:Show(true) -- to get the animation
	self.wndProgress:FindChild(&quot;TimeRemainingContainer&quot;):Show(false)

	local bLeft 	= eChosenDirection == Unit.CodeEnumCCStateStunVictimGameplay.Left
	local bUp 		= eChosenDirection == Unit.CodeEnumCCStateStunVictimGameplay.Forward
	local bRight 	= eChosenDirection == Unit.CodeEnumCCStateStunVictimGameplay.Right
	local bDown 	= eChosenDirection == Unit.CodeEnumCCStateStunVictimGameplay.Backward

	-- TODO: Swap to Stun Breakout Keys when they exist
	self.wndProgress:FindChild(&quot;ProgressButtonArtLeft&quot;):SetText(GameLib.GetKeyBinding(&quot;StunBreakoutLeft&quot;))
	self.wndProgress:FindChild(&quot;ProgressButtonArtUp&quot;):SetText(GameLib.GetKeyBinding(&quot;StunBreakoutUp&quot;))
	self.wndProgress:FindChild(&quot;ProgressButtonArtRight&quot;):SetText(GameLib.GetKeyBinding(&quot;StunBreakoutRight&quot;))
	self.wndProgress:FindChild(&quot;ProgressButtonArtDown&quot;):SetText(GameLib.GetKeyBinding(&quot;StunBreakoutDown&quot;))

	-- Disabled is invisible text, which will hide the button text
	self.wndProgress:FindChild(&quot;ProgressButtonArtLeft&quot;):Enable(bLeft)
	self.wndProgress:FindChild(&quot;ProgressButtonArtUp&quot;):Enable(bUp)
	self.wndProgress:FindChild(&quot;ProgressButtonArtRight&quot;):Enable(bRight)
	self.wndProgress:FindChild(&quot;ProgressButtonArtDown&quot;):Enable(bDown)

	if not bLeft and not bUp and not bRight and not bDown then -- Error Case
		self:OnRemoveCCStateStun()
		return
	end

	self:OnCalculateTimeRemaining()
end">
            <Param Name="eChosenDirection" Desc="The direction the player needs to press to get out of the CC State." Type="Unit.CodeEnumCCStateStunVictimGameplay" Id="13356"/>
        </Event>
        <Event Name="UpdateCCStateStun" Id="6705" Desc="Fires every 0.2 seconds while the player is stunned.  This event informs the UI how much progress the player has made towards breaking out of the stun.">
            <Param Name="fProgress" Desc="The progress the player has made towards breaking out of the stun.  This value is percentage based, with the player breaking out on 100 or higher. " Type="Float" Id="14634"/>
        </Event>
        <Event Name="RemoveCCStateStun" Id="6706" Desc="Fires whenever the player leaves the Stun CC state." Remarks="This is a more focused event than RemoveCCState, in that it only fires for the player that the state was removed from and it only applies if the CC State that was removed was Stun."/>
        <Event Name="MapHexesRevealed" Id="6707" Deprecated="true" InternalNotes="This appears to be depricated, as it isn&apos;t being called anywhere in code."/>
        <Event Name="ShowLocOnWorldMap" Id="6708" Desc="Fires whenever a player clicks a location that was linked in an galactic archive article or quest.">
            <Param Type="Table" Name="tLocationInfo" Id="14530">
                <Item Type="Table" Name="zoneMap" Id="14531">
                    <Item Name="strFolder" Desc="The folder name where the map is found." Type="String" Id="14532"/>
                    <Item Name="strName" Desc="The zone&apos;s name." Type="String" Id="14533"/>
                    <Item Name="id" Desc="The zone&apos;s ID." Type="Integer" Id="14534"/>
                    <Item Name="fNorth" Desc="The northern most coordinate on the map." Type="Float" Id="14535"/>
                    <Item Name="fSouth" Desc="The southern most coordinate on the map." Type="Float" Id="14536"/>
                    <Item Name="fEast" Desc="The eastern most coordinate on the map." Type="Float" Id="14537"/>
                    <Item Name="fWest" Desc="The western most coordinate on the map." Type="Float" Id="14538"/>
                    <Item Name="continentId" Desc="The continent&apos;s ID." Type="Integer" Id="14539"/>
                    <Item Name="parentZoneId" Desc="The ID of the zone&apos;s parent." Type="Integer" Id="14540"/>
                </Item>
                <Item Type="Table" Name="worldLoc" Id="14541">
                    <Item Name="x" Desc="The coordinate&apos;s X position." Type="Float" Id="14542"/>
                    <Item Name="y" Desc="The coordinate&apos;s Y position." Type="Float" Id="14543"/>
                    <Item Name="z" Desc="The coordinate&apos;s Z position." Type="Float" Id="14544"/>
                </Item>
            </Param>
        </Event>
        <Event Name="ZoneMapPing" Id="6709" InternalNotes="idUnit should be changed to a Unit" Desc="Fires whenever the player or a group member clicks the minimap.">
            <Param Name="idUnit" Desc="The id number of the unit that pinged the map." Type="Integer" Id="14662"/>
            <Param Type="Vector3" Name="tPos" Desc="The coordinates that were pinged." Id="14663"/>
        </Event>
        <Event Name="ZoneMapUpdateHexGroup" Id="6710" Desc="Fires when a hex group is added or removed from the zone map.">
            <Param Name="hexUpdated" Desc="The hex group that was shown or hidden." Type="HexGroups" Id="14665"/>
        </Event>
        <Event Name="AbilitiesWindowClose" Id="6711" Desc="Fires when the Limited Action Set Builder window closes.">
            <Param Name="bAtTrainer" Desc="Returns whether or not the player is at a training station when the window was closed." Type="Boolean" Id="9441"/>
        </Event>
        <Event Name="MannequinWindowOpen" Id="6712" Deprecated="true" InternalNotes="Depricated.  This has been replaced by HousingMannequinOpen"/>
        <Event Name="MannequinWindowClose" Id="6713" Deprecated="true" InternalNotes="Depricated.  This has been replaced by HousingMannequinClose"/>
        <Event Name="ShowBank" Id="6714" Desc="Fires whenever the player interacts with a bank NPC."/>
        <Event Name="HideBank" Id="6715" Desc="Fires whenever the player is interacting with a Bank NPC and either interacts with another unit or moves too far from the NPC."/>
        <Event Name="ShowDye" Id="6716" Desc="Fires whenever the player interacts with a stylist NPC."/>
        <Event Name="HideDye" Id="6717" Desc="Fires whenever the player is interacting with a Stylist NPC and either interacts with another unit or moves too far from the NPC."/>
        <Event Name="UpdateGearScore" Id="6718" Desc="Fires whenever an item is added or removed from the player that changes their Gear Score."/>
        <Event Name="ResourceConversionOpen" Id="6719" Desc="Fires whenever the player interacts with a Resource Conversion NPC.">
            <Param Name="unitTarget" Desc="The resource conversion NPC that the player interacted with." Type="Unit" Id="14510"/>
        </Event>
        <Event Name="ResourceConversionClose" Id="6720" Desc="Fires whenever the UI calls Event_CancelConverting(), the player interacts with another NPC while interacting with a Resource Conversion NPC, or when the player moves far enough away from the resource conversion NPC."/>
        <Event Name="InvokeTradeskillTrainerWindow" Id="6721" Desc="Fires whenever the player interacts with a tradeskill trainer.">
            <Param Name="unitTrainer" Desc="The tradeskill trainer NPC that the player interacted with." Type="Unit" Id="14272"/>
        </Event>
        <Event Name="CloseTradeskillTrainerWindow" Id="6722" Desc="Fired if the player interacts with another unit while interacting with a tradeskill trainer.  It&apos;s also fired when the Event_CloseTradeskillTrainerWindow() function is called in Lua."/>
        <Event Name="InvokeCraftingWindow" Id="6723" Desc="Fires whenever the player interacts with a crafting station."/>
        <Event Name="CloseCraftingWindow" Id="6724" Desc="Fired when the UI explicity calls the Event_CloseCraftingWindow() function."/>
        <Event Name="FlightPathUpdate" Id="6725" Desc="Fires whenever the player learns a new flight path, a settler builds a flight path improvement, or a settler built flight path expires."/>
        <Event Name="InvokeTaxiWindow" Id="6726" Desc="Fires whenever the player interacts with a taxi vendor.">
            <Param Name="unitTaxi" Desc="The taxi station that the player interacted with." Type="Unit" Id="14270"/>
            <Param Name="bIsSettlerTaxi" Desc="Whether or not this taxi station was created as a settler improvement." Type="Boolean" Id="14271"/>
        </Event>
        <Event Name="TaxiWindowClose" Id="6727" Desc="Fires whenever the player interacts with another NPC, calls the Event_CancelTaxiVendor() function, or moves too far from a taxi NPC while interacting with it.  This is only sent to the person that triggered the event."/>
        <Event Name="InvokeShuttlePrompt" Id="6728" InternalNotes="Unable to get this to fire.  May need to do some research in case this is still a thing." Deprecated="true"/>
        <Event Name="ShuttlePromptClose" Id="6729" Desc="Fires whenever the player interacts with another unit or moves too far from a shuttle NPC while interacting with it."/>
        <Event Name="ReputationChanged" Id="6730" Desc="Fires whenever the player gains or loses reputation with a faction.">
            <Param Name="strFactionname" Desc="The name of the faction that the player gained or lost reputation with." Type="String" Id="14505"/>
            <Param Name="nReputation" Desc="The amount of reputation the player has with the faction." Type="Integer" Id="14506"/>
            <Param Name="fReputationDelta" Desc="The amount that the player&apos;s reputation was changed by." Type="Float" Id="14507"/>
        </Event>
        <Event Name="Group_Join" Id="6731" Desc="Fires whenever the current player first joins a group."/>
        <Event Name="Group_Add" Id="6732" Desc="Fires whenever another player is added to a group that the current player is already part of.">
            <Param Name="strName" Desc="The name of the player that was added to the group." Type="String" Id="13945"/>
        </Event>
        <Event Name="Group_Remove" Id="6733" Desc="Fired whenever a player is removed from the group">
            <Param Name="strMemberName" Desc="The name of the player that was removed from the group." Type="String" Id="14085"/>
            <Param Name="eReason" Desc="The method used to remove the player from the group." Type="GroupLib.RemoveReason" Id="14086"/>
        </Event>
        <Event Name="Group_Left" Id="6734" Desc="Fires whenever the player is no longer in the group.  This only fires for the current player.">
            <Param Name="eReason" Desc="The method used to remove the player from the group." Type="GroupLib.RemoveReason" Id="13949"/>
        </Event>
        <Event Name="Group_MemberFlagsChanged" Id="6735" InternalNotes="Need to figure out what some of the flags are for.
Need to figure out why some flags always return true when changed." NeedProofread="true" NotTested="true" NotStandard="true">
            <Param Name="nMemberIdx" Desc="The member index of the character whose permissions changed." Type="Integer" Id="13958"/>
            <Param Name="bIsFromPromotion" Desc="Whether or not the change in permissions is due to the character being promoted." Type="boolean" Id="13959"/>
            <Param Type="Table" Name="tFlags" Id="13960">
                <Item Name="bCanInvite" Desc="Whether or not the player can send invites to other players." Type="Boolean" Id="13961"/>
                <Item Name="bCanKick" Desc="Whether or not the player can kick members from the group." Type="Boolean" Id="13962"/>
                <Item Name="bDisconnected" Desc="Whether or not the character has disconnected from the game." Type="Boolean" Id="13963"/>
                <Item Name="bPending" Type="Boolean" Id="13964"/>
                <Item Name="bTank" Desc="Whether or not the player has been marked as a tank." Type="Boolean" Id="13965"/>
                <Item Name="bHealer" Desc="Whether or not the player has been marked as a Healer." Type="Boolean" Id="13966"/>
                <Item Name="bDPS" Desc="Whether or not the player has been marked as DPS." Type="Boolean" Id="13967"/>
                <Item Name="bMainTank" Desc="Whether or not the player is marked as a raid&apos;s Main Tank." Type="Boolean" Id="13968"/>
                <Item Name="bMainAssist" Desc="Whether or not the player is flagged as one of the raid&apos;s Main Assists." Type="Boolean" Id="13969"/>
                <Item Name="bRaidAssistant" Desc="Whether or not the group member is flagged as a Raid Assistant." Type="Boolean" Id="13970"/>
                <Item Name="bReady" Desc="Whether or not the player has responded positively to a ready check." Type="Boolean" Id="13971"/>
                <Item Name="bRoleLock" Desc="Whether or not the Role Lock has been turned on." Type="Boolean" Id="13972"/>
                <Item Name="bCanMark" Desc="Whether or not the player can place target markers on units." Type="Boolean" Id="13973"/>
                <Item Name="bHasSetReady" Type="Boolean" Id="13974"/>
            </Param>
        </Event>
        <Event Name="Group_MemberPromoted" Id="6736" Desc="Fires whenever a group member is promoted to group leader">
            <Param Name="strName" Desc="The name of the player who was promoted to leader." Type="String" Id="13977"/>
            <Param Name="bSelf" Desc="Whether the current player was promoted." Type="Boolean" Id="13978"/>
        </Event>
        <Event Name="Group_Operation_Result" Id="6737" Desc="Fires whenever an error occurs when attempting a group related action.">
            <Param Name="strName" Desc="The name of the player that the operation was attempted on." Type="String" Id="14079"/>
            <Param Name="eResult" Desc="The reason why the operation failed." Type="GroupLib.ActionResult" Id="14080"/>
        </Event>
        <Event Name="Group_Updated" Id="6738" InternalNotes="Need more reasons why this fires.  It seems to fire every second." Desc="Fires whenever the the number of players in a group change, the instance difficulty is changed, " NeedProofread="true" NotStandard="true" Incomplete="true"/>
        <Event Name="Group_UpdatePosition" Id="6739" NotStandard="true" InternalNotes="There&apos;s some information being passed here that idk we want to expose, such as folders.
" Desc="Fires at regular, 1 second intervals with updates to the player&apos;s positions in the world.">
            <Param Type="Table" Name="arMemberPosInfo" Array="true" Id="14116">
                <Item Name="nIndex" Desc="The member index of the player that this position information belongs to." Type="Integer" Id="14117"/>
                <Item Name="idWorld" Desc="The id of the world that the player is on." Type="Integer" Id="14118"/>
                <Item Name="bInCombatPvp" Desc="Whether or not the player is in combat with another player." Type="Boolean" Id="14119"/>
                <Item Name="bInCombatPve" Desc="Whether or not the player is in combat with an NPC." Type="Boolean" Id="14120"/>
                <Item Name="bInCombat" Desc="Whether or not the player is in combat." Type="Boolean" Id="14121"/>
                <Item Type="Table" Name="tZoneMap" Id="14122">
                    <Item Name="strFolder" Desc="The folder that the zone is found in.  This is usually the zone name, without any spaces or punctuation." Type="string" Id="14123"/>
                    <Item Name="strName" Desc="The name of the zone that the player is in." Type="String" Id="14124"/>
                    <Item Name="id" Desc="The id number of the zone that the player is in." Type="Integer" Id="14125"/>
                    <Item Name="fNorth" Desc="The northern coordinate boundry of the zone." Type="Float" Id="14126"/>
                    <Item Name="fSouth" Desc="The southern coordinate boundry of the zone." Type="Float" Id="14127"/>
                    <Item Name="fEast" Desc="The eastern coordinate boundry of the zone." Type="Float" Id="14128"/>
                    <Item Name="fWest" Desc="The western coordinate boundry of the zone." Type="Float" Id="14129"/>
                    <Item Name="continentId" Desc="The id number for the continent that the zone is on." Type="Integer" Id="14130"/>
                    <Item Name="parentZoneId" Desc="The id number for the parent zone of the current zone.  If the zone has no parent, this will be 0." Type="Integer" Id="14131"/>
                </Item>
                <Item Type="Table" Name="tWorldLoc" Desc="The player&apos;s coordinates in the world." Id="14132">
                    <Item Name="x" Type="Float" Id="14133"/>
                    <Item Name="y" Type="Float" Id="14134"/>
                    <Item Name="z" Type="Float" Id="14135"/>
                </Item>
            </Param>
        </Event>
        <Event Name="Group_ReadyCheck" Id="6740" Desc="Fires whenever a ready check is started.">
            <Param Name="nMemberIdx" Desc="The group index of the player who started the ready check." Type="Integer" Id="14081"/>
            <Param Name="strMessage" Desc="The message sent out with the ready check." Type="String" Id="14082"/>
        </Event>
        <Event Name="Group_Mentor" Id="6741" NotStandard="true" InternalNotes="PlayerPathLib.PlayerPathType needs to be made into an enum.
Need to find out how certain flags are toggled." Desc="Fired whenever the player should be given the option to mentor another character and whenever they stop mentoring someone.">
            <Param Type="Table" Name="arMentorTargets" Id="14026">
                <Item Name="unitMentee" Desc="The unit that can be mentored." Type="Unit" Id="14027"/>
                <Item Type="Table" Name="tMemberInfo" Id="14028">
                    <Item Name="nMemberIdx" Desc="The member&apos;s index in the group." Type="Integer" Id="14029"/>
                    <Item Name="nOrder" Type="Integer" Id="14030"/>
                    <Item Name="eRaceId" Desc="The player&apos;s race." Type="GameLib.CodeEnumRace" Id="14031"/>
                    <Item Name="eClassId" Desc="The player&apos;s class." Type="GameLib.CodeEnumClass" Id="14032"/>
                    <Item Name="strCharacterName" Desc="The player&apos;s name." Type="String" Id="14033"/>
                    <Item Name="strRaceName" Desc="The name of the player&apos;s race." Type="String" Id="14034"/>
                    <Item Name="strClassName" Desc="The name of the player&apos;s class." Type="String" Id="14035"/>
                    <Item Name="ePathType" Desc="The player&apos;s path.  This lines up with the PlayerPathLib.PlayerPathType set of constants." Type="Integer" Id="14036"/>
                    <Item Name="bIsLeader" Desc="Whether or not the player is the group leader." Type="Boolean" Id="14037"/>
                    <Item Name="bIsOnline" Desc="Whether or not the player is online." Type="Boolean" Id="14038"/>
                    <Item Name="nLevel" Desc="The player&apos;s level." Type="Integer" Id="14039"/>
                    <Item Name="nEffectiveLevel" Desc="The player&apos;s effective level, after mentoring or rallying modifications." Type="Integer" Id="14040"/>
                    <Item Name="nHealth" Desc="The player&apos;s current health." Type="Integer" Id="14041"/>
                    <Item Name="nHealthMax" Desc="The player&apos;s maximum health." Type="Integer" Id="14042"/>
                    <Item Name="nShield" Desc="The amount of shield strength the player currently has." Type="Integer" Id="14043"/>
                    <Item Name="nShieldMax" Desc="The maximum amount of shield the player can have." Type="Integer" Id="14044"/>
                    <Item Name="nInterruptArmor" Desc="The player&apos;s current Interrupt Armor." Type="Integer" Id="14045"/>
                    <Item Name="nInterruptArmorMax" Desc="The maximum amount of interrupt armor a player can have." Type="Integer" Id="14046"/>
                    <Item Name="nAbsorption" Desc="The amount of absorption shield the player currently has." Type="Integer" Id="14047"/>
                    <Item Name="nAbsorptionMax" Desc="The maximum amount of absorption shield the player can have." Type="Integer" Id="14048"/>
                    <Item Name="nMana" Desc="The amount of focus the player currently has." Type="Integer" Id="14049"/>
                    <Item Name="nManaMax" Desc="The maximum amount of focus the player can have." Type="Integer" Id="14050"/>
                    <Item Name="nMarkerId" Desc="The target marker assigned to the player." Type="Integer" Id="14051"/>
                    <Item Name="nMenteeIdx" Desc="The index of the player in the list of potential units to mentor." Type="Integer" Id="14052"/>
                    <Item Name="bIsMentoring" Desc="Whether or not the player is currently mentoring another player." Type="Boolean" Id="14053"/>
                    <Item Name="bIsMentored" Desc="Whether or not another player is already being mentored by another player." Type="Boolean" Id="14054"/>
                    <Item Name="tMentoredBy" Desc="The indices of players within the group that are mentoring the player." Type="Integer" Array="true" Id="14055"/>
                    <Item Type="Table" Name="tFlags" Id="14056">
                        <Item Name="bCanInvite" Desc="Whether or not the player can invite other players to the group." Type="Boolean" Id="14057"/>
                        <Item Name="bCanKick" Desc="Whether or not the player can kick other members from the group." Type="Boolean" Id="14058"/>
                        <Item Name="bDisconnected" Desc="Whether or not the player is currently disconnected from the game." Type="Boolean" Id="14059"/>
                        <Item Name="bPending" Type="Boolean" Id="14060"/>
                        <Item Name="bTank" Desc="Whether or not this player has been marked as a tank." Type="Boolean" Id="14061"/>
                        <Item Name="bHealer" Desc="Whether or not this player has been marked as a healer." Type="Boolean" Id="14062"/>
                        <Item Name="bDPS" Desc="Whether or not this player has been flagged as DPS." Type="Boolean" Id="14063"/>
                        <Item Name="bMainTank" Desc="Whether or not the player has been marked as a raid&apos;s Main Tank." Type="Boolean" Id="14064"/>
                        <Item Name="bMainAssist" Desc="Whether or not the player has been marked as a raid&apos;s Main Assist." Type="Boolean" Id="14065"/>
                        <Item Name="bRaidAssistant" Desc="Whether or not the player has been marked as a raid&apos;s Raid Assistant." Type="Boolean" Id="14066"/>
                        <Item Name="bReady" Desc="Whether or not the player has responded positively to a ready check." Type="Boolean" Id="14067"/>
                        <Item Name="bRoleLocked" Desc="Whether or not the raid&apos;s roles are locked." Type="Boolean" Id="14068"/>
                        <Item Name="bCanMark" Desc="Whether or not the player can place target markers on units." Type="Boolean" Id="14069"/>
                        <Item Name="bHasSetReady" Type="Boolean" Id="14070"/>
                    </Item>
                </Item>
            </Param>
        </Event>
        <Event Name="Group_SetMark" Id="6742" Desc="Fires whenever a group member sets a target marker on a unit.">
            <Param Name="idMarker" Desc="The id number of the target marker that was placed on the unit." Type="Integer" Id="14093"/>
            <Param Name="unitTarget" Desc="The unit the marker was placed on." Type="Unit" Id="14094"/>
        </Event>
        <Event Name="GuildResult" Id="6743" NotStandard="true" InternalNotes="GuildLib.GuildResult needs to be an enum." Desc="Fires the result of various guild operations.  These can be error messages, operation types, or success messages">
            <Param Name="guildSource" Desc="The guild that the operation was performed on." Type="Guild" Id="14219"/>
            <Param Name="strTarget" Desc="The name of the target of the operation.  This can be a character name or rank name." Type="String" Id="14220"/>
            <Param Name="nRank" Desc="If the operation was a rank update, then this value is the index of the rank that was updated.  Otherwise, this can be 1 or 0." Type="Integer" Id="14221"/>
            <Param Name="eResult" Desc="The result of the operation.  This value is pulled from the GuildLib.GuildResult set of constants." Type="Integer" Id="14222"/>
        </Event>
        <Event Name="GuildInvite" Id="6744" NotStandard="true" InternalNotes="GuildLib.GuildType needs to be made an enum" Desc="Fired whenever the player receives an invitation to a guild.">
            <Param Name="strGuildName" Desc="The name of the guild that the player is invited to join." Type="String" Id="14193"/>
            <Param Name="strInvitorName" Desc="The player who sent the invite." Type="String" Id="14194"/>
            <Param Name="eGuildType" Desc="An integer representing the type of guild that the player is invited to join.  This lines up with the GuildLib.GuildType set of constants." Type="Integer" Id="14195"/>
            <Param Type="Table" Name="tFlags" Id="14196">
                <Item Name="bTax" Desc="Whether or not guild taxes are enabled for the guild that sent the invite." Type="Boolean" Id="14197"/>
                <Item Name="bRecruiting" Desc="Whether or not the guild has flagged itself as &quot;Recruiting&quot;" Type="Boolean" Id="14198"/>
            </Param>
        </Event>
        <Event Name="GuildRoster" Id="6745" Desc="Fires in response to Guild:RequestMembers().  This returns a list of the guild&apos;s members.">
            <Param Type="Table" Name="arMembers" Array="true" Id="14223">
                <Item Name="strName" Desc="The name of the guild member." Type="String" Id="14224"/>
                <Item Name="nRank" Desc="The member&apos;s guild rank." Type="Integer" Id="14225"/>
                <Item Name="strClass" Desc="The member&apos;s class, in string form." Type="String" Id="14226"/>
                <Item Name="eClass" Desc="The member&apos;s class, as an enum." Type="GameLib.CodeEnumClass" Id="14227"/>
                <Item Name="ePathType" Desc="The member&apos;s path type.  This lines up with the PlayerPathLib.PlayerPathType set of constants." Type="Integer" Id="14228"/>
                <Item Name="nLevel" Desc="The member&apos;s level." Type="Integer" Id="14229"/>
                <Item Name="fLastOnline" Desc="The amount of time since the player was last online, in days." Type="Float" Id="14230"/>
                <Item Name="nPvPWins" Desc="The number of PvP wins that the player has participated in with the guild.  This value is only relevant for Arena Teams and Warparties." Type="Integer" Id="14231"/>
                <Item Name="nPvPLosses" Desc="The number of PvP losses that the player participated in with the guild. This only applies for Arena Teams and Warparties." Type="Integer" Id="14232"/>
                <Item Name="nPvPDraws" Desc="The number of PvP draws the player was involved in with the guild. This only applies for Arena Teams and Warparties." Type="Integer" Id="14233"/>
                <Item Name="strNote" Desc="The note set by the player." Type="String" Id="14234"/>
            </Param>
            <Param Name="guildSource" Desc="The guild that is returning its member roster." Type="Guild" Id="14235"/>
        </Event>
        <Event Name="GuildMemberChange" Id="6746" InternalNotes="Would it be better to mention which guild member changed?" Desc="Fires whenever information about a guild member has changed.  This includes coming online, going offline, leveling up, having their guild rank changed, joining or leaving the guild, or changing their guild note.">
            <Param Name="guildUpdated" Desc="The guild whose member&apos;s info changed." Type="Guild" Id="14199"/>
        </Event>
        <Event Name="GuildEmblem" Id="6747" Deprecated="true" InternalNotes="No references to this in code so far as I can tell."/>
        <Event Name="GuildStandard" Id="6748" Desc="Fires whenever the guild&apos;s holomark is updated.">
            <Param Name="guildOwner" Desc="The guild that owns the holomark." Type="Guild" Id="14236"/>
        </Event>
        <Event Name="GuildInfluenceAndMoney" Id="6749" Desc="Fires whenever a guild&apos;s credits or influence are gained, withdrawn, or spent.">
            <Param Name="guildUpdated" Desc="The guild whose influence or credits were updated." Type="Guild" Id="14182"/>
            <Param Name="nInfluence" Desc="The amount of influence the guild has after the update." Type="Integer" Id="14183"/>
            <Param Name="monUpdated" Desc="The amount of money the guild has after the update." Type="Money" Id="14184"/>
            <Param Name="nBonusInfluenceRemaining" Desc="The amount of bonus influence remaining after the update." Type="Integer" Id="14185"/>
        </Event>
        <Event Name="GuildWarCoinsChanged" Id="6750" Desc="Fires whenever the Warparty gains or spends warcoins.">
            <Param Name="guildUpdated" Desc="The Warparty whose warcoins were updated." Type="Guild" Id="14237"/>
            <Param Name="nWarcoinsDelta" Desc="The change in the number of warcoins that the guild has." Type="Integer" Id="14238"/>
        </Event>
        <Event Name="GuildChange" Id="6751" Desc="Fired whenever the player is added to or removed from a guild, circle, arena team, or warparty."/>
        <Event Name="GuildNameplateChange" Id="6752" Desc="Fires whenever a player changes the guild name on their nameplate.  This event only fires for the character that changed the nameplate.">
            <Param Name="guildShown" Desc="The guild that the player selected to show on their nameplate." Type="Guild" Id="14205"/>
        </Event>
        <Event Name="GuildRegistrarOpen" Id="6753" Desc="Fires whenever the player interacts with a Guild Registrar NPC."/>
        <Event Name="GuildRegistrarClose" Id="6754" Desc="Fires whenever the player was interacting with a Guild Registrar and either interacts with another NPC or moves too far from the Registrar"/>
        <Event Name="WarPartyRegistrarOpen" Id="6755" InternalNotes="Depricated since this only happened when Warparty Registrars were NPCs" Deprecated="true" NotStandard="true"/>
        <Event Name="WarPartyRegistrarClose" Id="6756" Deprecated="true" InternalNotes="Depricated since this only happened when Warparty Registrars were NPCs"/>
        <Event Name="GuildBankerOpen" Id="6757" Desc="Fires whenever the player interacts with a guild bank.">
            <Param Name="unitBank" Desc="The unit that the player interacted with to open the guild bank." Type="Unit" Id="14137"/>
        </Event>
        <Event Name="GuildBankerClose" Id="6758" Desc="Fires whenever the player interacts with another target or moves away from a guild bank while interacting with it."/>
        <Event Name="WarPartyBankerOpen" Id="6759" Desc="Fires whenever the player interacts with the Warparty Bank."/>
        <Event Name="WarPartyBankerClose" Id="6760" Desc="Fires whenever the player interacts with another NPC or moves too far away while interacting with the warparty bank, or whenever the UI calls Event_CancelWarpartyBank().."/>
        <Event Name="GuildBankTab" Id="6761" Desc="Fires in response to Guild:OpenBankTab(), verifying that the tab was successfully opened.">
            <Param Name="guildOwner" Desc="The guild who owns the bank that the player is interacting with." Type="Guild" Id="14166"/>
            <Param Name="nTab" Desc="The index of the tab that was opened." Type="Integer" Id="14167"/>
        </Event>
        <Event Name="WarPartyBattleOpen" Id="6762" Desc="Fires whenever the player presses the Warparty Crate button in the Warplot UI.">
            <Param Name="guildWarparty" Desc="The warparty that the plot belongs to." Type="Guild" Id="14642"/>
        </Event>
        <Event Name="WarPartyBattleClose" Id="6763" Desc="Fires whenever the player&apos;s UI reloads and they are not on a warplot or in a warplot match."/>
        <Event Name="WarPartyBossTokensUpdated" Id="6764" Desc="Fires whenever a player uses a boss token during a Warplot match or the player adds a boss token to the Warparty Bank.">
            <Param Name="guildWarparty" Desc="The warparty whose boss tokens were updated." Type="Guild" Id="14643"/>
        </Event>
        <Event Name="GuildBankItem" Id="6765" Desc="Fires whenever an item is added or removed from the guild bank, or moved to a different slot within the bank.">
            <Param Name="guildOwner" Desc="The guild that owns the bank." Type="Guild" Id="14138"/>
            <Param Name="eGuildType" Desc="The type of guild that owns the bank.  This should always be GuildLib.GuildType_Guild." Type="Integer" Id="14139"/>
            <Param Name="nSlotIndex" Desc="The bank slot where the item is placed." Type="Integer" Id="14140"/>
            <Param Name="bRemoved" Desc="Whether the item was removed from the bank or not." Type="Boolean" Id="14141"/>
        </Event>
        <Event Name="GuildBankTabCount" Id="6766" Desc="Fires whenever a Bank Tab perk is purchased for the guild.">
            <Param Name="guildOwner" Desc="The guild who owns the bank that the tab was added to." Type="Guild" Id="14168"/>
        </Event>
        <Event Name="GuildBankTabRename" Id="6767" Desc="Fires whenever the player successfully renames a guild bank tab.  To actually get the new tab names, Guild:GetBankTabName() will have to be called for each tab.">
            <Param Name="guildOwner" Desc="The guild who owns the bank that contains the renamed tab." Type="Guild" Id="14171"/>
        </Event>
        <Event Name="GuildName" Id="6768" NotTested="true" InternalNotes="No clue how to force this.  Probably needs testing." Desc="Fires whenever the guild&apos;s name is changed.  This is only done when a player or GM sets up a new guild name after a forced name change.">
            <Param Name="guildUpdated" Desc="The guild whose name was updated." Type="Guild" Id="14204"/>
        </Event>
        <Event Name="GuildFlags" Id="6769" Desc="Fires whenever the guild turns taxes or recruitment on or off.">
            <Param Name="guildUpdated" Desc="The guild whose flags have been updated." Type="Guild" Id="14174"/>
        </Event>
        <Event Name="GuildRankChange" Id="6770" Desc="Fires whenever a guild, circle, or warparty adds a rank, removes a rank, renames a rank, or changes a rank&apos;s permissions.">
            <Param Name="guildUpdated" Desc="The guild whose rank was updated." Type="Guild" Id="14218"/>
        </Event>
        <Event Name="GuildBankWithdraw" Id="6771" Desc="Fires whenever a player successfully withdraws money or items from the guild bank.  This only fires for the player who performed the withdraw action.">
            <Param Name="guildOwner" Desc="The guild who owns the bank that the player withdrew from." Type="Guild" Id="14172"/>
        </Event>
        <Event Name="GuildPvp" Id="6772" Desc="Fires whenever an Arena Team&apos;s or Warparty&apos;s win/loss record or rating has updated.">
            <Param Name="guildUpdated" Type="Guild" Id="14211"/>
        </Event>
        <Event Name="GuildPerkActivated" Id="6774" Desc="Fires whenever a limited duration guild perk has been activated.">
            <Param Name="guildActivated" Desc="The guild that the perk was activated for." Type="Guild" Id="14206"/>
            <Param Name="idGuildPerk" Desc="The id number of the guild perk that was activated." Type="Integer" Id="14207"/>
        </Event>
        <Event Name="GuildPerkDeactivated" Id="6775" Desc="Fires whenever a guild perk is turned off or runs out of time.">
            <Param Name="guildUpdated" Desc="The guild whose perk was turned off." Type="Guild" Id="14209"/>
        </Event>
        <Event Name="GuildMessageOfTheDay" Id="6776" Desc="Fires whenever the guild&apos;s Message of the Day has been updated and when the player logs in on a character." Remarks="There is currently a bug where the GuildMessageOfTheDay event fires long before the chat log is loaded, so players are not seeing the message of the day.">
            <Param Name="guildOwner" Desc="The guild that the Message of the Day belongs to." Type="Guild" Id="14201"/>
        </Event>
        <Event Name="FriendshipResult" Id="6777" InternalNotes="FriendshipLib.FriendshipResult constants need to be changed to enums." Desc="Fires whenever an error is encountered when working with FriendsLib functionality." NotStandard="true">
            <Param Name="strName" Desc="This value is always 0." Type="String" Id="13924"/>
            <Param Name="eResult" Desc="The type of error that was fired.  This lines up with the values in FriendshipLib.FriendshipResult." Type="Integer" Id="13925"/>
        </Event>
        <Event Name="FriendshipLoaded" Id="6778" Desc="Fires when the FriendshipLib has loaded.  This only occurrs when a character is logged in, not when reloading the UI."/>
        <Event Name="FriendshipAdd" Id="6779" Desc="Fires whenever a new friend is added to the friends list.">
            <Param Name="idFriend" Desc="The friend id for the new friend." Type="Integer" Id="13907"/>
        </Event>
        <Event Name="FriendshipUpdate" Id="6780" Desc="Fired whenever a friend&apos;s character gets updated, such as when their level changes.">
            <Param Name="idFriend" Desc="The friend id of the player who was updated." Type="Integer" Id="13933"/>
        </Event>
        <Event Name="FriendshipUpdateOnline" Id="6781" Desc="Fired whenever the player comes online or goes offline.">
            <Param Name="idFriend" Desc="The friend id of the player whose online/offline state changed." Type="Integer" Id="13934"/>
        </Event>
        <Event Name="FriendshipRemove" Id="6782" Desc="Fired whenever a friend is removed from the player&apos;s friends list.">
            <Param Name="idFriend" Desc="The friend id of the player that was removed from the friends list." Type="Integer" Id="13921"/>
        </Event>
        <Event Name="FriendshipLocation" Id="6783" Desc="Fired in response to FriendshipLib.GetLocations(). Returns all the necessary data to see the name of the zone that the player is in.">
            <Param Type="Table" Name="arLocationInfo" Array="true" Id="13918">
                <Item Name="nId" Desc="The friend id associated with this location." Type="Integer" Id="13919"/>
                <Item Name="strWorldZone" Desc="The name of the zone where the player is." Type="String" Id="13920"/>
            </Param>
        </Event>
        <Event Name="FriendshipRequest" Id="6784" Deprecated="true" NotImplemented="true" InternalNotes="No implementation in code."/>
        <Event Name="FriendshipSuggestedAdd" Id="6786" Desc="Fired whenever a suggested player is added to the friends list." NotTested="true">
            <Param Name="idFriend" Desc="The friend id that was added to the friends list from the suggested list." Type="Integer" Id="13928"/>
        </Event>
        <Event Name="FriendshipSuggestedUpdate" Id="6787" Desc="Fires whenever a suggested friend&apos;s information updates. This is usually due to level changes.">
            <Param Name="idFriend" Desc="The id number of the suggested friend that was updated." Type="Integer" Id="13932"/>
        </Event>
        <Event Name="FriendshipSuggestedRemove" Id="6788" Desc="Fires whenever a player is removed from the Suggested Friends list.  This includes when players on the Suggested list are removed due to going over the maximum number of friends on that list.">
            <Param Name="idFriend" Desc="The friend id of the player that was removed from the friends list." Type="Integer" Id="13931"/>
        </Event>
        <Event Name="UpdateInventory" Id="6789" Desc="Fires whenever an item is added to, removed from, or moved within the player&apos;s inventory."/>
        <Event Name="ItemModified" Id="6790" Desc="Fires whenever the player makes a change to an item.  These changes include adding runes, removing runes, and unlocking additional rune slots.">
            <Param Name="itemModified" Desc="The item that the player modified." Type="Item" Id="14300"/>
        </Event>
        <Event Name="ItemDurabilityUpdate" Id="6791" Desc="Fires whenever one of the player&apos;s items loses some durability or gets repaired.">
            <Param Name="itemUpdated" Desc="The item whose durability changed." Type="Item" Id="14297"/>
            <Param Name="nPreviousDurability" Desc="The item&apos;s durability before the update." Type="Integer" Id="14298"/>
        </Event>
        <Event Name="LootRollSelected" Id="6792" Desc="Fires whenever a player selects Need or Greed under the Need vs. Greed loot system.

">
            <Param Name="itemRolling" Desc="The item that the player chose to roll for." Type="Item" Id="14322"/>
            <Param Name="strPlayerName" Desc="The name of the player that chose to roll." Type="String" Id="14323"/>
            <Param Name="bNeed" Desc="Whether or not the player chose to roll Need on the item." Type="Boolean" Id="14324"/>
        </Event>
        <Event Name="LootRollPassed" Id="6793" Desc="Fires whenever a player passes on an item or does not select an option within the time limit under the Need vs. Greed system.">
            <Param Name="itemPassed" Desc="The item that the player passed on." Type="Item" Id="14320"/>
            <Param Name="strPlayerName" Desc="The name of the player that passed on the item." Type="String" Id="14321"/>
        </Event>
        <Event Name="LootRoll" Id="6794" Desc="Fires whenever a playerrolls on an item in the Need vs. Greed looting system.  This only fires after every member has selected need, greed, or pass on the item and is sent to every member in the group.">
            <Param Name="itemLoot" Desc="The item that the players are rolling for." Type="Item" Id="14314"/>
            <Param Name="strPlayerName" Desc="The player that rolled for the item." Type="String" Id="14315"/>
            <Param Name="bNeed" Desc="Whether or not the player chose &quot;Need&quot; for the item." Type="Boolean" Id="14316"/>
        </Event>
        <Event Name="LootRollWon" Id="6795" Desc="Fires whenever a player wins a piece of loot under the Need vs. Greed system.">
            <Param Name="itemWon" Desc="The item that the player won." Type="Item" Id="14325"/>
            <Param Name="strWinnerName" Desc="The name of the player who won the roll." Type="String" Id="14326"/>
            <Param Name="bNeed" Desc="Whether or not the player chose &quot;Need&quot; on the item." Type="Boolean" Id="14327"/>
        </Event>
        <Event Name="LootRollAllPassed" Id="6796" Desc="Fires when everyone in the group passes on an item under the Need vs. Greed system.">
            <Param Name="itemPassed" Desc="The item that all of the players passed on." Type="Item" Id="14317"/>
        </Event>
        <Event Name="ItemAdded" Id="6797" Desc="Fires whenever an item is placed in a player&apos;s inventory by a method other than looting." Remarks="Examples of actions that would trigger this event include salvaging items, taking an item from the account inventory, crafting an item, and purchasing an item from a vendor.">
            <Param Name="itemBase" Type="Item" Desc="The base version of the item that was added, before random stats, glyphs, or microchips are factored in." Id="14279"/>
            <Param Name="nCount" Type="Integer" Desc="How many stacks of the item were added to the player&apos;s inventory." Id="14280"/>
            <Param Name="eUpdateReason" Desc="A value that represents the method that was used to obtain the item." Type="Item.CodeEnumItemUpdateReason" Id="14281"/>
            <Param Name="itemInstance" Desc="The specific instance of the item.  This is the version of the item that the player sees in their inventory." Type="Item" Id="14282"/>
        </Event>
        <Event Name="ItemRemoved" Id="6798" Desc="Fires whenever an item is removed from the player&apos;s inventory.  This can be caused by destroying the item, turning in a quest that auto-removes the item, salvaging the item, or selling the item at a vendor. ">
            <Param Name="itemRemoved" Desc="The item that was removed from the player&apos;s inventory." Type="Item" Id="14301"/>
            <Param Name="nCount" Desc="The stack size of the item that was deleted." Type="Integer" Id="14302"/>
            <Param Name="eReason" Desc="The reason the item was updated." Type="Item.CodeEnumItemUpdateReason" Id="14303"/>
        </Event>
        <Event Name="ItemSentToCrate" Id="6799" Desc="Fires whenever the player sends a decor item from their inventory to the crate.">
            <Param Name="itemMoved" Desc="The decor item that the player placed in their crate." Type="Item" Id="14304"/>
            <Param Name="nCount" Desc="The stack size of the item that was sent to the crate." Type="Integer" Id="14305"/>
            <Param Name="eReason" Desc="The method the player used to send the item to the crate." Type="Item.CodeEnumItemUpdateReason" Id="14306"/>
        </Event>
        <Event Name="SplitItemStack" Id="6800" Desc="Fires whenever the player attempts to split a stack of items in their inventory.  The default keybind for this is Shift + Left Click on the item.  This event is only fired for the player who tried to split the stack.">
            <Param Name="itemSplitting" Desc="The item stack that the player is trying to split." Type="Item" Id="14585"/>
        </Event>
        <Event Name="DashCastFail" Id="6801" Desc="Fires when the player attempts to dash while they have no dash charges."/>
        <Event Name="CombatLogAbsorption" Id="6802" InternalNotes="Is it anyone within AoI or just the player/target?" Desc="Fires whenever a unit is granted an absorb shield." NeedProofread="true">
            <Param Type="Table" Name="tCombatLogInfo" Id="13516">
                <Item Name="unitCaster" Desc="The unit who used the ability." Type="Unit" Id="13517"/>
                <Item Name="unitCasterOwner" Desc="The unit who controls the caster.  This variable only exists if the caster is a pet." Type="Unit" Id="13518"/>
                <Item Name="unitTarget" Desc="The unit affected by the ability." Type="Unit" Id="13519"/>
                <Item Name="unitTargetOwner" Desc="The unit who controls the target.  This only exists if the target is a pet." Type="Unit" Id="13520"/>
                <Item Name="eCombatResult" Desc="The effect of the abiility on the target.  This will most likely be Hit in this case." Type="GameLib.CodeEnumCombatResult" Id="13521"/>
                <Item Name="splCallingSpell" Desc="The spell that was used." Type="Spell" Id="13522"/>
                <Item Name="nAmount" Desc="The amount of damage that the absorb shield will mitigate." Type="Integer" Id="13523"/>
            </Param>
        </Event>
        <Event Name="CombatLogCCState" Id="6803" NotStandard="true" InternalNotes="Why does bHideFloater usually return nil instead of false?" Desc="Fires whenever a player enters a crowd control state.">
            <Param Type="Table" Name="tLogInfo" Id="13527">
                <Item Name="unitCaster" Desc="The unit that cast the ability that applied the CC state." Type="Unit" Id="13528"/>
                <Item Name="unitCasterOwner" Desc="The unit that owns the unitCaster.  This variable will only exist if the unit that applied the state is a pet." Type="Unit" Id="13529"/>
                <Item Name="unitTarget" Desc="The unit that the CC state was applied to." Type="Unit" Id="13530"/>
                <Item Name="unitTargetOwner" Desc="The unit that owns the target of the ability.  This variable only exists if the target was a pet." Type="Unit" Id="13531"/>
                <Item Name="eCombatResult" Desc="A number that represents the effect of the ability on the player.  This will most likely be either Hit or Avoid." Type="GameLib.CodeEnumCombatResult" Id="13532"/>
                <Item Name="splCallingSpell" Desc="The spell that was used to apply the CC state on the player." Type="Spell" Id="13533"/>
                <Item Name="eState" Desc="The type of CC that the spell should cause." Type="Unit.CodeEnumCCState" Id="13534"/>
                <Item Name="bRemoved" Desc="If this is true, then the crowd control state is removed from the player.  If not, then it is added to the player." Type="Boolean" Id="13535"/>
                <Item Name="strState" Desc="The name of the CC state." Type="String" Id="13536"/>
                <Item Name="strTriggerCapCategory" Desc="The name of the CC category this effect falls under.

Results can be:
Stun
Root
Pacify
Blind
Taunt
Knockdown
Tether
Disorient
Subdue
Pull
Knockback
Snare
Position Switch
Pushback

Not every CC State has a dimminishing returns category." Type="String" Id="13537"/>
                <Item Name="bHideFloater" Desc="Determines whether the floater for the state should be hidden.  This variable will only be set to true or nil." Type="Boolean" Id="13538"/>
                <Item Name="nInterruptArmorHit" Desc="The amount of interrupt armor removed by the spell." Type="Integer" Id="13600"/>
                <Item Name="eResult" Desc="The result of trying to apply the CC state to the unit." Type="CombatFloaterLib.CodeEnumCCStateApplyRulesResult" Id="13601"/>
            </Param>
        </Event>
        <Event Name="CombatLogCCStateBreak" Id="6804" Desc="Fires when the player breaks out of a CC state.">
            <Param Type="Table" Name="tLogInfo" Id="13539">
                <Item Name="unitCaster" Desc="The unit that broke out of their CC state.  This should always be the current player." Type="Unit" Id="13540"/>
                <Item Name="unitCasterOwner" Desc="The unit that controls the unit that broke their CC state.  This should only be returned if a pet broke out of its crowd control state." Type="Unit" Id="13541"/>
                <Item Name="eState" Desc="The type of CC that the unitCaster broke out of." Type="Unit.CodeEnumCCState" Id="13542"/>
                <Item Name="strState" Desc="The name of the CC state that the unit broke out of." Type="String" Id="13543"/>
            </Param>
        </Event>
        <Event Name="CombatLogDamage" Id="6805" NotStandard="true" InternalNotes="ESpellEffectType needs to be exposed to Apollo.  Need to find out wtf nRawDamage is." Desc="Fires when a unit takes damage.">
            <Param Type="Table" Name="tLogInfo" Id="13547">
                <Item Name="unitCaster" Desc="The unit who used the spell that caused the damage." Type="Unit" Id="13548"/>
                <Item Name="unitCasterOwner" Desc="The player that owns the unit who dealt the damage.  This only applies if the  unitCaster is a pet." Type="Unit" Id="13549"/>
                <Item Name="unitTarget" Desc="The target of the ability." Type="Unit" Id="13550"/>
                <Item Name="unitTargetOwner" Desc="The unit that owns the unitTarget.  This only exists if unitTarget is a pet." Type="Unit" Id="13551"/>
                <Item Name="eCombatResult" Desc="The effect of the ability on its target." Type="GameLib.CodeEnumCombatResult" Id="13552"/>
                <Item Name="splCallingSpell" Desc="The spell that caused the damage." Type="Spell" Id="13553"/>
                <Item Name="nDamageAmount" Desc="The amount of damage done by the spell." Type="Integer" Id="13554"/>
                <Item Name="nRawDamage" Desc="Damage amount that is directly related to ???" Type="Integer" Id="13555"/>
                <Item Name="eDamageType" Desc="The type of damage that was done." Type="GameLib.CodeEnumDamageType" Id="13556"/>
                <Item Name="nShield" Desc="The amount of damage done to the unit&apos;s shield." Type="Integer" Id="13557"/>
                <Item Name="nAbsorbtion" Desc="The amount of damage done to the player&apos;s absorption shield." Type="Integer" Id="13558"/>
                <Item Name="nOverkill" Desc="The amount of damage done to the unit over their remaining HP." Type="Integer" Id="13559"/>
                <Item Name="bTargetVulnerable" Desc="Whether or not the target is in the vulnerable state." Type="Boolean" Id="13560"/>
                <Item Name="bTargetKilled" Desc="Whether or not the unitTarget was killed by the attack." Type="Boolean" Id="13561"/>
                <Item Name="bPeriodic" Desc="Whether the damage was caused by an ability that does periodic damage." Type="Boolean" Id="13562"/>
                <Item Name="eEffectType" Desc="The spell&apos;s effect type.  The values for this enum are not currently exposed in the Apollo API." Type="Integer" Id="13563"/>
            </Param>
        </Event>
        <Event Name="CombatLogDelayDeath" Incomplete="true" Id="6806" Desc="Fires when death missed his bus?"/>
        <Event Name="CombatLogDispel" Id="6807" Desc="Fires when a buff or debuff is dispelled." NotStandard="true" InternalNotes="Is this used anymore?
Why have bRemoveSingleInstance if we&apos;re listing the number removed?" Deprecated="true">
            <Param Name="unitCaster" Desc="The unit that used the spell that triggered the event." Type="Unit" Id="13604"/>
            <Param Name="unitCasterOwner" Desc="The unit who owns unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13605"/>
            <Param Name="unitTarget" Desc="The unit that the buff/debuff was dispelled from." Type="Unit" Id="13606"/>
            <Param Name="unitTargetOwner" Desc="The unit that owns unitTarget.  This only applies if unitTarget is a pet." Type="Unit" Id="13607"/>
            <Param Name="bRemoveSingleInstance" Desc="Whether or not a single stack of the buff is removed." Type="Boolean" Id="13608"/>
            <Param Name="nInstancesRemoved" Desc="The number of stacks of the buff that are removed from the unit." Type="Integer" Id="13609"/>
            <Param Name="splRemovedSpell" Desc="The spell that was removed from the unit." Type="Spell" Id="13610"/>
        </Event>
        <Event Name="CombatLogHeal" Id="6808" Desc="Fires whenever a unit gets healed.">
            <Param Name="unitCaster" Desc="The unit who used the spell that caused the heal." Type="Unit" Id="13635"/>
            <Param Name="unitCasterOwner" Desc="The owner of unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13636"/>
            <Param Name="unitTarget" Desc="The unit that received the heal." Type="Unit" Id="13637"/>
            <Param Name="unitTargetOwner" Desc="The unit that owns unitTarget.  This only applies if unitTarget is a pet." Type="Unit" Id="13638"/>
            <Param Name="nHealAmount" Desc="The amount missing health that was healed for the target.  This value does not include overheals." Type="Integer" Id="13639"/>
            <Param Name="nOverheal" Desc="The amount of overhealing done by the spell." Type="Integer" Id="13640"/>
            <Param Name="eCombatResult" Desc="A number representing any special things that went on with the spell, such as a critical hit." Type="GameLib.CodeEnumCombatResult" Id="13641"/>
            <Param Name="splCallingSpell" Desc="The spell that was used for the heal." Type="Spell" Id="13642"/>
            <Param Name="eEffectType" Desc="The effect the spell has on the target.  " Type="Spell.CodeEnumSpellEffectType" Id="13643"/>
        </Event>
        <Event Name="CombatLogModifyInterruptArmor" Id="6809" Desc="Fires whenever a player gains or loses interrupt armor.">
            <Param Name="unitCaster" Desc="The unit who caused a player&apos;s interrupt armor to change" Type="Unit" Id="13683"/>
            <Param Name="unitCasterOwner" Desc="The owner of unitCaster.  This is nil if unitCaster is not a pet." Type="Unit" Id="13684"/>
            <Param Name="unitTarget" Desc="The unit whose interrupt armor was changed." Type="Unit" Id="13685"/>
            <Param Name="unitTargetOwner" Desc="The player who owns unitTarget.  This is nil if unitTarget is not a pet." Type="Unit" Id="13686"/>
            <Param Name="nAmount" Desc="The change in the unit&apos;s interrupt armor." Type="Integer" Id="13687"/>
        </Event>
        <Event Name="CombatLogTransference" Id="6810" Desc="Fires whenever a spell does damage and heals the user at the same time." Remarks="A good example of a spell that fires this event is the Stalker ability &quot;Nano Field&quot;.  It is different from Lifesteal in that it is build into the spell, whereas lifesteal is a stat that is granted to all of the player&apos;s spells.">
            <Param Name="unitCaster" Desc="The unit who used the spell that triggered the event." Type="Unit" Id="13707"/>
            <Param Name="unitCasterOwner" Desc="The player that owns unitCaster.  This only applies if unitCaster was a pet." Type="Unit" Id="13708"/>
            <Param Name="unitTarget" Desc="The unit that was affected by the spell that triggered this event." Type="Unit" Id="13709"/>
            <Param Name="unitTargetOwner" Desc="The unit who owns unitTarget.  This only applies if unitTarget is a pet." Type="Unit" Id="13710"/>
            <Param Name="eCombatResult" Desc="The effect of the spell that triggered the event." Type="GameLib.CodeEnumCombatResult" Id="13711"/>
            <Param Name="splCallingSpell" Desc="The spell that triggered the event." Type="Spell" Id="13712"/>
            <Param Name="nDamageAmount" Desc="The amount of damage done to unitTarget." Type="Integer" Id="13713"/>
            <Param Name="eDamageType" Desc="The type of damage done by the spell." Type="GameLib.CodeEnumDamageType" Id="13714"/>
            <Param Name="nShield" Desc="The amount of damage done to the target&apos;s shields." Type="Integer" Id="13715"/>
            <Param Name="nAbsorption" Desc="The amount of damage done to the target&apos;s absorption shield." Type="Integer" Id="13716"/>
            <Param Name="nOverkill" Desc="The amount of damage done over the target&apos;s max health." Type="Integer" Id="13717"/>
            <Param Name="bTargetVulnerable" Desc="Whether or not the target is in a &quot;Moment of Opportunity&quot; state." Type="Boolean" Id="13718"/>
            <Param Name="tHealData" Type="Table" Array="true" Id="13719">
                <Item Name="nHealAmount" Desc="The amount that the caster is healed for." Type="Integer" Id="13720"/>
                <Item Name="eVitalType" Desc="The stat that is increased after the spell is cast." Type="GameLib.CodeEnumVital" Id="13721"/>
                <Item Name="nOverheal" Desc="The amount of healing the caster received while they were at their maximum health." Type="Integer" Id="13722"/>
            </Param>
        </Event>
        <Event Name="CombatLogVitalModifier" Id="6811" Deprecated="true" NotStandard="true" InternalNotes="Unsure what fires this." NotTested="true">
            <Param Name="unitCaster" Desc="The unit that used the spell that caused the event to fire." Type="Unit" Id="13732"/>
            <Param Name="unitCasterOwner" Desc="The unit that owns unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13733"/>
            <Param Name="unitTarget" Desc="The unit that was the target of the spell." Type="Unit" Id="13734"/>
            <Param Name="unitTargetOwner" Desc="The unit that owns unitTarget.  This only applies if unitTarget is a pet." Type="Unit" Id="13735"/>
            <Param Name="eCombatResult" Desc="The spell&apos;s effect on the target." Type="GameLib.CodeEnumCombatResult" Id="13736"/>
            <Param Name="splCallingSpell" Desc="The spell that caused the event to fire." Type="Spell" Id="13737"/>
            <Param Name="nAmount" Desc="How much the specified vital is modified by." Type="Integer" Id="13738"/>
            <Param Name="eVitalType" Desc="The vital that is modified." Type="GameLib.CodeEnumVital" Id="13739"/>
            <Param Name="bShowCombatLog" Desc="Whether or not this event should appear in the combat log." Type="Boolean" Id="13740"/>
        </Event>
        <Event Name="CombatLogDeflect" Id="6812" Desc="Fires when a unit deflects an attack.">
            <Param Type="Table" Name="tLogInfo" Id="13589">
                <Item Name="unitCaster" Desc="The unit that used the spell." Type="Unit" Id="13590"/>
                <Item Name="unitCasterOwner" Desc="The unit that owns unitCaster.  This variable only exists if unitCaster is a pet." Type="Unit" Id="13591"/>
                <Item Name="unitTarget" Desc="The unit that deflected the spell." Type="Unit" Id="13592"/>
                <Item Name="unitTargetOwner" Desc="The unit that owns unitTarget.  This only exists if unitTarget is a pet." Type="Unit" Id="13593"/>
                <Item Name="eCombatResult" Desc="The result of the attack.  This should always be GameLib.CodeEnumCombatResult.Avoid" Type="GameLib.CodeEnumCombatResult" Id="13594"/>
                <Item Name="splCallingSpell" Desc="The ability that was used in the attack." Type="Spell" Id="13595"/>
            </Param>
        </Event>
        <Event Name="CombatLogImmunity" Incomplete="true" Id="6813" InternalNotes="Unsure of a case where this will fire."/>
        <Event Name="CombatLogInterrupted" Id="6814" Desc="Fires when a unit is interrupted by a spell.  This includes if the player interrupted their own spell cast.">
            <Param Name="unitCaster" Desc="The unit that cast the spell that caused the interrupt." Type="Unit" Id="13644"/>
            <Param Name="unitCasterOwner" Desc="The owner of unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13645"/>
            <Param Name="unitTarget" Desc="The unit that was interrupted." Type="Unit" Id="13646"/>
            <Param Name="unitTargetOwner" Desc="The owner of unitTarget.  This only applies if unitTarget is a pet." Type="Unit" Id="13647"/>
            <Param Name="eCombatResult" Desc="The result the spell that was used." Type="Integer" Id="13648"/>
            <Param Name="splCallingSpell" Desc="The spell that was interrupted." Type="Spell" Id="13649"/>
            <Param Name="splInterruptingSpell" Desc="The spell that caused the interrupt." Type="Spell" Id="13650"/>
            <Param Name="eCastResult" Desc="Explains why the spell was interrupted." Type="Spell.CodeEnumCastResult" Id="13651"/>
            <Param Name="strCastResult" Desc="A string explaining why the spell was interrupted." Type="String" Id="13652"/>
        </Event>
        <Event Name="CombatLogKillStreak" Id="6815" Desc="Fires when the player gets multiple kills in quick succession.">
            <Param Name="unitCaster" Desc="The unit that got the kill streak.  This should either be the current player or one of their pets." Type="Unit" Id="13661"/>
            <Param Name="unitCasterOwner" Desc="The unit that owns unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13662"/>
            <Param Name="eStatType" Desc="The type of streak the player is on." Type="CombatFloater.CodeEnumCombatMomentum" Id="13663"/>
            <Param Name="nStreakAmount" Desc="The player&apos;s current streak count." Type="Integer" Id="13664"/>
        </Event>
        <Event Name="CombatLogKillPVP" Id="6816" Desc="Fires when a player assists in a PvP kill." NotStandard="true" InternalNotes="Description based on use in CombatLog.  If it&apos;s wrong, then we should look into it." Remarks="Currently bugged.  This is being fired for a player when they die in PvP, not for when they get a kill assist.">
            <Param Name="unitCaster" Desc="The unit that assisted in the kill." Type="Unit" Id="13655"/>
            <Param Name="unitCasterOwner" Desc="The unit that owns unitCaster.  This only applies if unitCaster is a pet." Type="Unit" Id="13656"/>
            <Param Name="unitTarget" Desc="The unit that was killed in PvP." Type="Unit" Id="13657"/>
            <Param Name="unitTargetOwner" Desc="The unit that owns unitTarget.  This only applies if unitTarget was a pet." Type="Unit" Id="13658"/>
            <Param Name="eCombatResult" Desc="The result of using the ability.  " Type="GameLib.CodeEnumCombatResult" Id="13659"/>
            <Param Name="splCallingSpell" Desc="The spell that killed the player." Type="Spell" Id="13660"/>
        </Event>
        <Event Name="CombatLogDeath" Id="6817" NotStandard="true" InternalNotes="Why are we returning a table with only one element?" Desc="Fires when the player dies.">
            <Param Type="Table" Name="tLogInfo" Id="13572">
                <Item Name="unitCaster" Desc="The unit that died.  This will always be the current player." Type="Unit" Id="13573"/>
            </Param>
        </Event>
        <Event Name="CombatLogResurrect" Id="6818" Desc="Fires whenever the player is rezzed.  This includes all methods of resurrection.">
            <Param Name="unitCaster" Desc="The unit that was resurrected." Type="Unit" Id="13701"/>
        </Event>
        <Event Name="CombatLogStealth" Id="6819" Desc="Fires whenever the player enters or leaves stealth.">
            <Param Name="unitCaster" Desc="The unit whose stealth state has changed." Type="Unit" Id="13704"/>
            <Param Name="bExiting" Desc="Whether or not the player left stealth." Type="Boolean" Id="13705"/>
        </Event>
        <Event Name="CombatLogMount" Id="6820" Desc="Fires if the player mounts or dismounts.">
            <Param Name="unitCaster" Desc="The player that mounted." Type="Unit" Id="13688"/>
            <Param Name="bDismounted" Desc="Whether or not the player dismounted." Type="Boolean" Id="13689"/>
        </Event>
        <Event Name="CombatLogPet" Id="6821" Desc="Fires whenever a player summons or despawns a pet, or a pet dies.">
            <Param Name="unitCaster" Desc="The unit who used the ability to summon, kill, or despawn the pet." Type="Unit" Id="13690"/>
            <Param Name="unitTarget" Desc="The pet that was spawned." Type="Unit" Id="13696"/>
            <Param Name="unitTargetOwner" Desc="The unit that owns the pet.  This is the current player." Type="Unit" Id="13697"/>
            <Param Name="bDismissed" Desc="Whether or not the pet was despawned." Type="Boolean" Id="13698"/>
            <Param Name="bKilled" Desc="Whether or not the pet was killed." Type="Boolean" Id="13699"/>
            <Param Name="eCombatResult" Desc="The end result of the spell that was used." Type="GameLib.CodeEnumCombatResult" Id="13700"/>
        </Event>
        <Event Name="CombatLogExperience" Id="6822" Desc="Fires whenever the player gaines experience or elder points.">
            <Param Name="unitCaster" Desc="The unit that gained the experience or elder points.  This will always be the current player." Type="Unit" Id="13619"/>
            <Param Name="nXP" Desc="The base amount of experience gained." Type="Integer" Id="13620"/>
            <Param Name="nRestXP" Desc="The amount of experience gained from the player&apos;s rested bonus." Type="Integer" Id="13621"/>
            <Param Name="nEP" Desc="The amount of elder points the player gained." Type="Integer" Id="13622"/>
            <Param Name="nRestEP" Desc="The amount of elder points gained from the player&apos;s rested bonus." Type="Integer" Id="13623"/>
        </Event>
        <Event Name="CombatLogEndGameCurrencies" Id="6823" Desc="Fires whenever the player gains non-credit currencies.">
            <Param Name="unitCaster" Desc="The unit that gained the currency.  This is always the current player." Type="Unit" Id="13612"/>
            <Param Name="monLoot" Desc="The currency that was gained." Type="Money" Id="13613"/>
        </Event>
        <Event Name="CombatLogLoot" Id="6824" Desc="Fires whenever a player loots money or an item.  This will fire for each visible &quot;item&quot; looted in the world and each item distributed to the player via the group&apos;s looting system.  ">
            <Param Name="unitCaster" Desc="The unit that received the money or item." Type="Unit" Id="13667"/>
            <Param Name="monLoot" Desc="The money object for the money that was looted.  If there was no money looted, this will be nil." Type="Money" Id="13668"/>
            <Param Name="itemLoot" Desc="The item that was looted.  If no item was looted in this event, this will be nil." Type="Item" Id="13669"/>
            <Param Name="nItemAmount" Desc="The stack size of itemLooted for this event.  If money was looted in this event and not an item, this value will be 0." Type="Integer" Id="13670"/>
        </Event>
        <Event Name="CombatLogCrafting" Id="6825" Desc="Fires when the player finishes crafting an item using a non-simple craft schematic.">
            <Param Type="Table" Name="tLogInfo" Id="13544">
                <Item Name="unitCaster" Desc="The unit who crafted the item.  This should always be the current player." Type="Unit" Id="13545"/>
                <Item Name="itemCrafted" Desc="The item that the player crafted." Type="Item" Id="13546"/>
            </Param>
        </Event>
        <Event Name="CombatLogExtracting" Incomplete="true" Id="6826" InternalNotes="What fires this?"/>
        <Event Name="CombatLogModifying" Id="6827" NotStandard="true" InternalNotes="Unknown functionality.  Possibly depricated.">
            <Param Name="unitCaster" Desc="The unit that fired this event." Type="Unit" Id="13671"/>
            <Param Name="itemHost" Type="Item" Id="13672"/>
            <Param Name="itemRemoved" Type="Item" Id="13673"/>
            <Param Name="itemAdded" Type="Item" Id="13674"/>
        </Event>
        <Event Name="CombatLogDurabilityLoss" Id="6828" Desc="Fires when a player&apos;s equipment loses a point of durability." InternalNotes="Does not appear to be fired anymore?" Deprecated="true" NotStandard="true">
            <Param Name="unitCaster" Desc="The unit wearing the equipment that lost durability.  This will always be the current player." Type="Unit" Id="13602"/>
            <Param Name="nAmount" Desc="The amount of durability that was lost." Type="Integer" Id="13603"/>
        </Event>
        <Event Name="CombatLogItemDestroy" Id="6829" Desc="Fires when the player destroys an item." Remarks="Note: This is not triggered by salvaging, selling, or turning an item in for a quest.">
            <Param Name="unitCaster" Desc="The unit that destroyed the item." Type="Unit" Id="13653"/>
            <Param Name="itemDestroyed" Desc="The item that was destroyed." Type="Item" Id="13654"/>
        </Event>
        <Event Name="CombatMomentum" Id="6830" Desc="Fires whenever one of the player&apos;s &quot;momentum&quot; bonuses increases.">
            <Param Name="eType" Desc="The type of momentum bonus that was increased." Type="CombatFloater.CodeEnumCombatMomentum" Id="13741"/>
            <Param Name="nCount" Desc="The current count for the momentum bonus." Type="Integer" Id="13742"/>
            <Param Name="strMessage" Desc="A string for displaying the event." Type="String" Id="13743"/>
        </Event>
        <Event Name="CombatLogString" Id="6831" NotTested="true" Desc="Fires whenever a string is directly written in the combat log.  Instances where this is occurring include breaking CC, ...." InternalNotes="Need to research all the cases where this occurs.
Why are we showing this when we have a CCStateBreak event?" NeedProofread="true">
            <Param Name="strLogMessage" Desc="The message printed to the combat log." Type="String" Id="13706"/>
        </Event>
        <Event Name="ElderPointsGained" Id="6832" Desc="Fires whenever the player gains elder points.">
            <Param Name="nAmount" Desc="The base number of elder points the player gained." Type="Integer" Id="13869"/>
            <Param Name="nRested" Desc="The number of elder points granted by the player&apos;s rested bonus." Type="Integer" Id="13870"/>
        </Event>
        <Event Name="GameClickProp" Id="6833" Desc="Fires whenever the player left clicks on a non-interactive object in the world.">
            <Param Name="idProp" Desc="The id number of the prop that the player selected." Type="Integer" Id="13942"/>
        </Event>
        <Event Name="GameClickUnit" Id="6834" Desc="Fires whenever the player left clicks on a unit in game.">
            <Param Name="unitSelected" Desc="The unit that was clicked on." Type="Unit" Id="13943"/>
        </Event>
        <Event Name="GameClickWorld" Id="6835" Desc="Fires whenever the player left clicks a location in the world.">
            <Param Name="vec3Location" Desc="The location where the player clicked in the world." Type="Vector3" Id="13944"/>
        </Event>
        <Event Name="UI_EffectiveLevelChanged" Id="6836" Desc="Fires whenever the player&apos;s effective level changes due to rallying or mentoring.">
            <Param Name="nNewEffectiveLevel" Desc="The player&apos;s current effective level." Type="Integer" Id="14615"/>
        </Event>
        <Event Name="HousingResult" Id="6837" Desc="Fires whenever an error is thrown due to a housing operation.">
            <Param Name="strName" Desc="The name of the player who caused the error." Type="String" Id="14263"/>
            <Param Name="eResult" Desc="The error message sent.  These are found in the HousingLib.HousingResult set of constants." Type="Integer" Id="14264"/>
        </Event>
        <Event Name="HousingRealtorOpen" Id="6838" Deprecated="true" InternalNotes="This is no longer being used so far as I know."/>
        <Event Name="HousingNeighborsLoaded" Id="6839" Desc="Fires whenever a player is removed from the Neighbors list."/>
        <Event Name="HousingNeighborUpdate" Id="6840" Desc="Fires whenever a player is added as a neighbor, a neighbor goes offline or comes online, or a player is set as a roommate.">
            <Param Name="idNeighbor" Desc="The neighbor id of the player that was updated." Type="Integer" Id="14261"/>
        </Event>
        <Event Name="HousingNeighborInviteRecieved" Id="6841" Desc="Fires whenever a player is sent an invite from another player.">
            <Param Name="strInvitorName" Desc="The name of the player that sent the neighbor invite." Type="String" Id="14260"/>
        </Event>
        <Event Name="HousingNeighborInviteAccepted" Id="6842" Desc="Fires whenever a player is added to the Neighbors list.">
            <Param Name="strName" Desc="The new neighbor&apos;s name." Type="String" Id="14257"/>
        </Event>
        <Event Name="HousingNeighborInviteDeclined" Id="6843" Desc="Fired whenever a player declines a neighbor invite that they received.  This event is sent to both the person who sent the invite and the person who declined the invite.">
            <Param Name="strName" Desc="The name of the player who declined the invite." Type="String" Id="14259"/>
        </Event>
        <Event Name="HousingPrivacyUpdated" Id="6844" Desc="Fires whenever a player changes their housing plot&apos;s visiter rules to or from Private.">
            <Param Name="bIsPrivate" Desc="Determines whether or not the building is private." Type="Boolean" Id="14262"/>
        </Event>
        <Event Name="HousingRandomResidenceListRecieved" Id="6845" Desc="Fires in response to HousingLib.RequestRandomResidenceList().  " Example="Note, this event does not contain the resdence list.  It only informs the player that the list is ready to be obtained via the HousingLib.GetRandomResidenceList."/>
        <Event Name="DecorPreviewOpen" Id="6846" Desc="Fires whenever the player opens the decor or plug preview window.">
            <Param Name="idItemDisplayed" Desc="The id number for the plug or decor being previewed." Type="Integer" Id="13855"/>
        </Event>
        <Event Name="DecorPreviewClose" Id="6847" Desc="Fires whenever a decor or plug preview window closes."/>
        <Event Name="PetCustomizationFailed" Id="6848" Desc="Fires whenever the player attempts to customize their pet or scanbot and the attempt is not successful.">
            <Param Type="Table" Name="tInfo" Id="14347">
                <Item Name="ePetType" Desc="The type of pet that the player tried to customize." Type="PetCustomizationLib.PetType" Id="14348"/>
                <Item Name="idPet" Desc="The id number of the pet." Type="Integer" Id="14349"/>
                <Item Name="nFlairSlotIndex" Desc="The flair slot that the player tried to modify." Type="Integer" Id="14350"/>
                <Item Name="pcFlair" Desc="The piece of flair that the player tried to set to nFlairSlotIndex." Type="PetFlair" Id="14351"/>
            </Param>
            <Param Name="eResult" Desc="The reason why the customization attempt failed." Type="PetCustomizationLib.PetCustomizeResult" Id="14352"/>
        </Event>
        <Event Name="PetCustomizationUpdated" Id="6849" Desc="Fires whenever the player successfully update&apos;s a pet or scanbot&apos;s customization options.">
            <Param Name="pcCustomization" Desc="The pet&apos;s new customization info." Type="PetCustomization" Id="14353"/>
        </Event>
        <Event Name="PetFlairCleared" Id="6850" NotTested="true" InternalNotes="Unsure how this is fired."/>
        <Event Name="PetFlairUnlocked" Id="6851" Desc="Fires whenever the player unlocks a new piece of flair for their pet or scanbot.">
            <Param Name="idFlair" Desc="The id number of the pet flair that was unlocked." Type="Integer" Id="14354"/>
        </Event>
        <Event Name="KeyBindingKeyChanged" Id="6852" Desc="Fires whenever a player saves changes to their keybindings.  The event is fired once for each keybinding that was changed.">
            <Param Name="strKeybinding" Desc="The name of the keybinding that was changed." Type="String" Id="14307"/>
        </Event>
        <Event Name="AcceptProgressInput" Id="6853" Desc="Fires when CSIs turn player input on and off.  This is only used for the &quot;Memory&quot; CSI.">
            <Param Name="bShouldAccept" Desc="Whether or not the CSI will accept user input." Type="Boolean" Id="9442"/>
        </Event>
        <Event Name="HighlightProgressOption" Id="6854" Desc="Fires whenever a button flashes during Memory CSIs.">
            <Param Name="nButton" Desc="The button that should be highlighted." Type="Integer" Id="14254"/>
        </Event>
        <Event Name="ToggleMarketplaceWindow" Id="6855" Desc="Fires whenever the player interacts with a Commodities Marketplace NPC.  This is only handled by the player who triggered the event."/>
        <Event Name="MarketplaceWindowClose" Id="6856" Desc="Fires whenever the player is interacting with the Commodities Exchange NPC, then interacts with another NPC or moves too far from the Commodities Exchange NPC."/>
        <Event Name="CommodityInfoResults" Id="6857" Desc="Fires for each item returned by MarketplaceLib.RequestCommodityInfo().  It contains information on all of the buy and sell orders out for the item.">
            <Param Name="idItem" Desc="The id number for the item that the results are referencing." Type="Integer" Id="13807"/>
            <Param Type="Table" Name="tStats" Id="13808">
                <Item Name="nBuyOrderCount" Desc="The number of buy orders out for the item." Type="Integer" Id="13809"/>
                <Item Name="nSellOrderCount" Desc="The number of sell orders out for the item." Type="Integer" Id="13810"/>
                <Item Type="Table" Name="arBuyOrderPrices" Array="true" Id="13811">
                    <Item Name="monPrice" Desc="The amount that the buy order is paying per item." Type="Money" Id="13812"/>
                    <Item Name="nCount" Desc="The number of items that the buy order will purchase before it is fulfilled." Type="Integer" Id="13813"/>
                </Item>
                <Item Type="Table" Name="arSellOrderPrices" Array="true" Id="13814">
                    <Item Name="monPrice" Desc="The sell order&apos;s price per item." Type="Money" Id="13815"/>
                    <Item Name="nCount" Desc="The number of items in the sell order." Type="Integer" Id="13816"/>
                </Item>
            </Param>
            <Param Name="arOrders" Desc="A listing of all of the buy and sell orders open for the item." Type="CommodityOrder" Array="true" Id="13817"/>
        </Event>
        <Event Name="OwnedCommodityOrders" Id="6858" Desc="Fires in response to MarketplaceLib.RequestOwnedCommodityOrders().">
            <Param Name="arOrders" Desc="An array that contains the player&apos;s open buy and sell orders on the commodity exchange." Type="CommodityOrder" Array="true" Id="14345"/>
        </Event>
        <Event Name="PostCommodityOrderResult" Id="6859" Desc="Fires whenever the player attempts to post a buy or sell order on the commodities exchange.  Informs the player if the order was successfully placed or an error was thrown.">
            <Param Name="eResult" Desc="The result of the operation.  This will return the error that is received, or OK if the operation was successful." Type="GameLib.CodeEnumGenericError" Id="14390"/>
            <Param Name="orderPosted" Desc="The commodity order that the player attempted to post on the Commodities Exchange." Type="CommodityOrder" Id="14391"/>
            <Param Name="monCost" Desc="The cost to post the order." Type="Money" Id="14392"/>
        </Event>
        <Event Name="CommodityAuctionRemoved" Id="6860" Desc="Fires whenever a buy or sell order is removed from the Commodities Exchange.">
            <Param Name="eReason" Desc="The reason the auction was removed from the Commodities Exchange.  This will either be Fill, Expire, or Cancel." Type="MarketplaceLib.AuctionEventType" Id="13757"/>
            <Param Name="orderRemoved" Desc="The order that was removed from the Commodities Exchange." Type="CommodityOrder" Id="13758"/>
        </Event>
        <Event Name="ToggleAuctionWindow" Id="6861" Desc="Fires when the player interacts with an auctioneer NPC.  This is only fired for the player who pressed the keybinding."/>
        <Event Name="AuctionWindowClose" Id="6862" Desc="Fires whent he player moves out of range of an Auctioneer NPC." Example="function MarketplaceAuction:OnDocumentReady()
                Apollo.RegisterEventHandler(&quot;AuctionWindowClose&quot;, 			&quot;OnDestroy&quot;, self)
end

function MarketplaceAuction:OnDestroy()
	if self.wndMain and self.wndMain:IsValid() then
		self:OnSearchClearBtn()
		self.wndMain:Destroy()
	end

	Event_CancelAuctionhouse()
end"/>
        <Event Name="OwnedItemAuctions" Id="6863" Desc="Fires in response to the MarketplaceLib.RequestOwnedItemAuctions() function.">
            <Param Name="arAuctions" Desc="An array of the player&apos;s open bids and listed items on the auction house." Type="ItemAuction" Id="14346"/>
        </Event>
        <Event Name="ItemAuctionSearchResults" Id="6864" Desc="Returns results from the the MarketplaceLib.SearchAuctionableItems() function.">
            <Param Name="nPage" Desc="The page that the player is currently viewing." Type="Integer" Id="14289"/>
            <Param Name="nTotalResults" Desc="The total number of search results that the player has received." Type="Integer" Id="14290"/>
            <Param Name="arAuctions" Desc="An array containing all of the auctions returned in the search results." Type="ItemAuction" Array="true" Id="14291"/>
        </Event>
        <Event Name="ItemAuctionOutbid" Id="6865" Desc="Fires whenever someone else places a higher bid or buys an auction that the player had bid on.">
            <Param Name="auctBidOn" Desc="The item that the player was outbid on." Type="ItemAuction" Id="14287"/>
        </Event>
        <Event Name="ItemAuctionWon" Id="6866" Desc="Fires whenever the player wins an auction.">
            <Param Name="auctWon" Desc="The auction that the player won." Type="ItemAuction" Id="14292"/>
        </Event>
        <Event Name="ItemAuctionExpired" Id="6867" Desc="Fires whenever an auction&apos;s listing expires.">
            <Param Name="auctExpired" Desc="The auction that expired." Type="ItemAuction" Id="14286"/>
        </Event>
        <Event Name="ItemCancelResult" Id="6868" Desc="Fires whenever the player tries to cancel one of their auctions.">
            <Param Name="eResult" Desc="The result of the player&apos;s attempt to cancel the auction.  If it was successful, this value will be Ok." Type="GameLib.CodeEnumGenericError" Id="14293"/>
            <Param Name="auctCanceled" Desc="The auction that the player attempted to cancel." Type="ItemAuction" Id="14294"/>
        </Event>
        <Event Name="PostItemAuctionResult" Id="6869" Desc="Fires when the player attempts to post an auction on the Auction House.">
            <Param Name="eResult" Desc="If there was a problem posting the auction, this will contain the error explaining why it failed.  Otherwise, this value will be Ok." Type="GameLib.CodeEnumGenericError" Id="14393"/>
            <Param Name="auctPosted" Desc="The auction that the player tried to post." Type="ItemAuction" Id="14394"/>
        </Event>
        <Event Name="ItemAuctionBidResult" Id="6870" Desc="Fires whenever the player places a bid or selects the &quot;Buy Now&quot; option for an item on the auction house.">
            <Param Name="eResult" Desc="The result of the player&apos;s attempt to place a bid on the auction.  A result of Ok means the bid was successful." Type="GameLib.CodeEnumGenericError" Id="14284"/>
            <Param Name="auctBidOn" Desc="The auction that the player bid on or bought." Type="ItemAuction" Id="14285"/>
        </Event>
        <Event Name="PlayerPathMissionUnlocked" Id="6871" Desc="Fires whenever the player unlocks a new path mission.  If multiple missions are unlocked at once, an event will be fired for each of them.">
            <Param Name="pmMission" Desc="The mission that was unlocked." Type="PathMission" Id="14386"/>
        </Event>
        <Event Name="PlayerPathMissionUnlockedSound" Id="6872" Desc="Fires whenever a path mission is unlocked."/>
        <Event Name="PlayerPathMissionComplete" Id="6873" Desc="Fires whenever the player completes a path mission.">
            <Param Name="pmMission" Desc="The mission that the player just completed." Type="PathMission" Id="14384"/>
        </Event>
        <Event Name="PlayerPathMissionCompleteSound" Id="6874" Deprecated="true" InternalNotes="Does not seem to be referenced in Lua.  Unsure how this is actually fired." NeedProofread="true" NotStandard="true"/>
        <Event Name="PlayerPathRewardAvailable" Id="6875" Desc="Fires whenever the player completes all of the path missions in an episode.">
            <Param Name="peCompleted" Desc="The path episode that the player completed." Type="PathEpisode" Id="14388"/>
        </Event>
        <Event Name="InvokeScientistExperimentation" Id="6876" Desc="Fires whenever the player interacts with an object or NPC that starts a Scientist Experimentation minigame.">
            <Param Name="pmMission" Desc="The mission that the experimentation minigame belongs to." Type="PathMission" Id="14269"/>
        </Event>
        <Event Name="ScientistExperimentationResult" Id="6877" NotStandard="true" InternalNotes="PathMission.ScientistExperimentationResult needs to be converted to an enum." Desc="Fires in response to a valid call to PathMission:AttemptScientistExperimentation().  This event returns the results of the player&apos;s attempt.">
            <Param Name="arResults" Desc="An array of all the results from the player&apos;s experimentation attempt.  These values line up with the PathMission.ScientistExperimentationResult set of int constants. " Type="Integer" Array="true" Id="14511"/>
        </Event>
        <Event Name="PublicEventStart" Id="6878" Desc="Fires whenever a public event begins.">
            <Param Name="peStarting" Desc="The public event that just started." Type="PublicEvent" Id="14461"/>
        </Event>
        <Event Name="PublicEventUpdate" Id="6879" NotTested="true" InternalNotes="Need to find a test case for this" Desc="Fires whenever a public event updates.">
            <Param Name="peUpdated" Desc="The public event that was updated." Type="PublicEvent" Id="14463"/>
        </Event>
        <Event Name="PublicEventObjectiveUpdate" Id="6880" Desc="Fires whenever a player progresses a public event objective.">
            <Param Name="peoUpdated" Desc="The public event objective that was updated." Type="PublicEventObjective" Id="14460"/>
        </Event>
        <Event Name="PublicEventLiveStatsUpdate" Id="6881" Desc="Fires once per second during events with live stats, such as PvP matches.">
            <Param Name="peUpdated" Desc="The public event whose stats were updated." Type="PublicEvent" Id="14454"/>
        </Event>
        <Event Name="PublicEventStatsUpdate" Id="6882" Desc="Fires whenever players&apos; public event stats update.  " Remarks="The types of actions that will fire this update are more directly related to progressing the event, such as picking up a mask in Walatiki Temple or speaking to a villager during the Malgrave Adventure.">
            <Param Name="peUpdated" Desc="The public event whose stats were updated." Type="PublicEvent" Id="14462"/>
        </Event>
        <Event Name="PublicEventEnd" Id="6883" Desc="Fires when a public event ends.  " NeedProofread="true" NotStandard="true" InternalNotes="Lots of int constants that need to be converted to enums.  Lots of values that might not need to be passed.  Lots of values that don&apos;t seem consistent.">
            <Param Name="peEvent" Desc="The public event that ended." Type="PublicEvent" Id="14400"/>
            <Param Name="eReason" Desc="The reason the event ended.  This lines up with the PublicEvent.PublicEventParticipantRemoveReason set of int constants." Type="Integer" Id="14401"/>
            <Param Type="Table" Name="tEventInfo" Id="14402">
                <Item Name="nElapsedTime" Desc="The amount of time that elapsed since the event started, in milliseconds." Type="Integer" Id="14403"/>
                <Item Name="eRewardTier" Desc="The reward tier that the player earned.  This value lines up with the PublicEvent.PublicEventRewardTier set of int constants." Type="Integer" Id="14404"/>
                <Item Name="eRewardType" Desc="The reason the player received the reward.  This lines up with the PublicEvent.PublicEventRewardTier set of int constants." Type="Integer" Id="14405"/>
                <Item Name="arRewardThresholds" Desc="The thresholds that the player needs to cross to achieve bronze, silver, and gold rewards." Type="Integer" Array="true" Id="14406"/>
                <Item Type="Table" Name="arTeamStats" Array="true" Desc="The total stats for each team involved in the event." Id="14407">
                    <Item Name="nDamage" Desc="The amount of damage the team dealt." Type="Integer" Id="14408"/>
                    <Item Name="nDamageReceived" Desc="The amount of damage that the team took." Type="Integer" Id="14409"/>
                    <Item Name="nHits" Desc="The number of attacks the team made that connected with the enemy." Type="Integer" Id="14410"/>
                    <Item Name="nHaters" Desc="The number of people who are gonna hate." Type="Integer" Id="14411"/>
                    <Item Name="nKills" Desc="The number of enemy units the team managed to land the killing blow against." Type="Integer" Id="14412"/>
                    <Item Name="nMaxMultiKills" Desc="The highest number of enemies that were killed with a single attack." Type="Integer" Id="14413"/>
                    <Item Name="nDeaths" Desc="The number of times players on the team died." Type="Integer" Id="14414"/>
                    <Item Name="nHealed" Desc="The amount of healing the team did." Type="Integer" Id="14415"/>
                    <Item Name="nHealingReceived" Desc="The amount of healing that was done to players on the team." Type="Integer" Id="14416"/>
                    <Item Name="nContributions" Desc="The number of objectives the team completed." Type="Integer" Id="14417"/>
                    <Item Name="nLongestLife" Desc="The longest amount of time the team spent between deaths, in milliseconds." Type="Integer" Id="14418"/>
                    <Item Name="nAssists" Desc="The number of enemies players on the team helped kill, but did not land the killing blow against." Type="Integer" Id="14419"/>
                    <Item Name="nSaves" Desc="The number of times the team stopped the enemy from capturing an objective." Type="Integer" Id="14420"/>
                    <Item Name="nOverhealed" Desc="The amount of healing the team did when their target was already at their max health." Type="Integer" Id="14421"/>
                    <Item Name="nOverhealingReceived" Desc="The amount of healing that was done to players on the team while they were at max health." Type="Integer" Id="14422"/>
                    <Item Name="nLongestImpulse" Desc="The highest number of attacks that the team avoided in a row." Type="Integer" Id="14423"/>
                    <Item Name="nKillStreak" Desc="The team&apos;s highest kill streak." Type="Integer" Id="14424"/>
                    <Item Type="Table" Name="arCustomStats" Desc="An array of stats that are specific to the event." Array="true" Id="14425">
                        <Item Name="strName" Desc="The name of the stat." Type="String" Id="14426"/>
                        <Item Name="nValue" Desc="The value of the stat." Type="Integer" Id="14427"/>
                    </Item>
                </Item>
                <Item Name="arParticipantStats" Type="Table" Array="true" Desc="The stats for each player involved in the event." Id="14428">
                    <Item Name="nDamage" Desc="The amount of damage the player did." Type="Integer" Id="14429"/>
                    <Item Name="nDamageReceived" Desc="The amount of damage the player took." Type="Integer" Id="14430"/>
                    <Item Name="nHits" Desc="The number of attacks the player made that hit an enemy." Type="Integer" Id="14431"/>
                    <Item Name="nHaters" Desc="The number of people who are hating on the player." Type="Integer" Id="14432"/>
                    <Item Name="nKills" Desc="The number of killing blows the player landed." Type="Integer" Id="14433"/>
                    <Item Name="nMaxMultiKills" Desc="The most enemies that were killed in a single attack made by the player." Type="Integer" Id="14434"/>
                    <Item Name="nDeaths" Desc="The number of times the player died." Type="Integer" Id="14435"/>
                    <Item Name="nHealed" Desc="The amount of healing the player did." Type="Integer" Id="14436"/>
                    <Item Name="nHealingReceived" Desc="The amount of healing that other players did to the player." Type="Integer" Id="14437"/>
                    <Item Name="nContributions" Desc="The number of objectives the player completed." Type="Integer" Id="14438"/>
                    <Item Name="nLongestLife" Desc="The longest amount of time the player spent between deaths." Type="Integer" Id="14439"/>
                    <Item Name="nAssists" Desc="The number of enemies the player helped kill, but did not land the killing blow against." Type="Integer" Id="14440"/>
                    <Item Name="nSaves" Desc="The number of times the player prevented the enemy from completing an objective." Type="Integer" Id="14441"/>
                    <Item Name="nOverhealed" Desc="The amount of healing the player did on targets that were already at their max health." Type="Integer" Id="14442"/>
                    <Item Name="nOverhealingReceived" Desc="The amount of healing done to the player while they are at max health." Type="Integer" Id="14443"/>
                    <Item Name="nLongestImpulse" Desc="The highest number of attacks that the player avoided in a row." Type="Integer" Id="14444"/>
                    <Item Name="nKillStreak" Desc="The highest kill streak the player achieved." Type="Integer" Id="14445"/>
                    <Item Type="Table" Name="arCustomStats" Desc="An array of custom stats that are specific to the event." Array="true" Id="14446">
                        <Item Name="strName" Desc="The name of the stat." Type="String" Id="14447"/>
                        <Item Name="nValue" Desc="The value of the stat." Type="Integer" Id="14448"/>
                    </Item>
                </Item>
                <Item Type="Table" Name="arObjectives" Desc="An array of the public event&apos;s objectives." Array="true" Id="14449">
                    <Item Name="eStatus" Desc="The status of the public event.  This lines up with the PublicEventObjective.PublicEventStatus set of int constants." Type="Integer" Id="14450"/>
                    <Item Name="peoObjective" Desc="One of the objectives for this event." Type="PublicEventObjective" Id="14451"/>
                </Item>
            </Param>
        </Event>
        <Event Name="PublicEventLocationAdded" Id="6884" Deprecated="true" NotTested="true" InternalNotes="Unsure of where to get this event to fire.  Needs further testing." Desc="Fires whenever a new location is added to a public event.">
            <Param Name="peUpdated" Desc="The public event that the location was added to." Type="PublicEvent" Id="14455"/>
        </Event>
        <Event Name="PublicEventLocationRemoved" Id="6885" Deprecated="true" NotTested="true" InternalNotes="Unable to get this to fire.  Need a test case." Desc="Fires whenever a location is removed from the public event.">
            <Param Name="peUpdated" Desc="The public event that the location was removed from." Type="PublicEvent" Id="14457"/>
        </Event>
        <Event Name="PublicEventObjectiveLocationAdded" Id="6886" NotTested="true" InternalNotes="Needs a test case." Desc="Fires whenever a location is added to a public event objective.">
            <Param Name="peoUpdated" Desc="The objective that the location was added to." Type="PublicEventObjective" Id="14459"/>
        </Event>
        <Event Name="PublicEventObjectiveLocationRemoved" Id="6887" Desc="Fires whenever a location is removed from an objective." Example="This event is fired after speaking to villagers during the Exodus portion of the Malgrave Adventure.">
            <Param Name="peoUpdated" Desc="The public event objective that the location was removed from." Type="PublicEventObjective" Id="14458"/>
        </Event>
        <Event Name="PublicEventInitiateVote" Id="6888" Desc="Fires whenever the public event requires the group to vote on a decision before progressing."/>
        <Event Name="PublicEventVoteTallied" Id="6889" Desc="Fires whenever a group member selections an option during a public event vote.">
            <Param Name="nSelection" Desc="The option that was selected by a player." Type="Integer" Id="14465"/>
        </Event>
        <Event Name="PublicEventVoteEnded" Id="6890" Desc="Fires when every member of a group has voted when the public event requires it, or when the voting timer runs out.">
            <Param Name="nWinner" Desc="The voting option with the most votes." Type="Integer" Id="14464"/>
        </Event>
        <Event Name="PlayerPathMissionUpdate" Id="6891" Desc="Fires whenever a path mission is unlocked, advanced, completed, or failed.">
            <Param Name="pmMission" Desc="The path mission that was updated." Type="PathMission" Id="14387"/>
        </Event>
        <Event Name="PlayerPathMissionAdvanced" Id="6892" Desc="Fires whenever progress is made on a multi-step path mission.">
            <Param Name="pmMission" Desc="The mission that was advanced." Type="PathMission" Id="14383"/>
        </Event>
        <Event Name="PlayerPathRefresh" Id="6893" Desc="Fires whenever the player needs to redraw their path information, such as on reloadui or changing zones."/>
        <Event Name="PlayerPathAdd" Id="6894" NotTested="true" InternalNotes="Unsure how this is being used.  Cannot get it to fire."/>
        <Event Name="PlayerPathExplorerScavengerHuntStarted" Id="6895" Desc="Fires whenever the player interacts with the NPC that starts a Scavenger Hunt mission.">
            <Param Name="pmMission" Desc="The Scavenger Hunt mission that was started." Type="PathMission" Id="14382"/>
        </Event>
        <Event Name="PlayerPathExplorerPowerMapStarted" Id="6896" Desc="Fires whenever the player successfully starts a Tracking mission.">
            <Param Name="pmMission" Desc="The Tracking mission that the player started." Type="PathMission" Id="14378"/>
            <Param Name="unitTarget" Desc="The unit that the player is supposed to follow for the mission." Type="Unit" Id="14379"/>
        </Event>
        <Event Name="PlayerPathExplorerPowerMapWaiting" Id="6897" Desc="Fires when the unit that is being tracked in a Tracking mission reaches its destination before the player.">
            <Param Name="pmMission" Desc="The Tracking mission that the player is on." Type="PathMission" Id="14380"/>
            <Param Name="nVictoryDelay" Desc="The amount of time the player has to reach the destination before the mission fails." Type="Integer" Id="14381"/>
        </Event>
        <Event Name="PlayerPathExplorerPowerMapFailed" Id="6898" Desc="Fires whenever the player fails a Tracking mission.">
            <Param Name="pmMission" Desc="The mission that the player failed." Type="PathMission" Id="14377"/>
        </Event>
        <Event Name="PlayerPathExplorerPowerMapEntered" Id="6899" Desc="Fires whenever the player enters an area where a Tracking mission can be started">
            <Param Name="pmMission" Desc="The Tracking mission that can be started at this location." Type="PathMission" Id="14375"/>
        </Event>
        <Event Name="PlayerPathExplorerPowerMapExited" Id="6900" Desc="Fires whenever the player leaves a location where a power map mission can be started.">
            <Param Name="pmMission" Desc="The mission that could have been started from the location that the player left." Type="PathMission" Id="14376"/>
        </Event>
        <Event Name="SettlerHubReward" Id="6901" InternalNotes="Need to find out how these work." Desc="Fires whenever settlers unlock a reward for the players in the zone.">
            <Param Name="strNotification" Desc="The message that was broadcast, telling players about the reward that was unlocked." Type="String" Id="14517"/>
        </Event>
        <Event Name="PlayerPathScientistScanBotDeployed" Id="6902" Desc="Fires whenever the player summons their scanbot."/>
        <Event Name="PlayerPathScientistScanBotDespawned" Id="6903" Desc="Fires whenever the player manually despawns their scanbot or their scanbot runs out of HP."/>
        <Event Name="PlayerPathScientistScanBotCooldown" Id="6904" Desc="Fires when the player&apos;s ability to summon their scanbot is on cooldown, such as after the player despawns their scanbot or their scanbot is destroyed.">
            <Param Name="fCooldown" Desc="The number of seconds before the player can summon their scanbot." Type="Float" Id="14389"/>
        </Event>
        <Event Name="SoldierHoldoutStatus" Id="6905" Desc="Fires whenever a holdout&apos;s state updates.  This is sent to every player involved in the holdout.">
            <Param Name="solUpdated" Desc="The soldier event whose state was updated." Type="SoldierEvent" Id="14582"/>
        </Event>
        <Event Name="SoldierHoldoutNextWave" Id="6906" Desc="Fires whenever the next wave of a soldier holdout begins.  This event fires for everyone participating in the holdout.">
            <Param Name="solHoldout" Desc="The holdout that triggered the event." Type="SoldierEvent" Id="14580"/>
        </Event>
        <Event Name="UpdateSoldierBuild" Id="6907" InternalNotes="Are soldier buildings still a thing?" Deprecated="true" NotStandard="true"/>
        <Event Name="SoldierHoldoutEnd" Id="6908" Desc="Fires whenever a soldier holdout ends, no matter if it was successful or unsuccessful.  This event fires for everyone who participated in the holdout.">
            <Param Name="solHoldout" Desc="The holdout that ended." Type="SoldierEvent" Id="14577"/>
            <Param Name="eReason" Desc="The reason the holdout ended.  This value lines up with the PathMission.PlayerPathSoldierResult set of int constants." Type="Integer" Id="14578"/>
        </Event>
        <Event Name="SettlerHubUpdated" Id="6909" Desc="Fires whenever a settler builds an improvement, the time on an improvement is updated, or a player adds time to an improvement.  This event is only sent to settlers."/>
        <Event Name="InvokeSoldierBuild" Id="6910" Deprecated="true" InternalNotes="Soldier improvements are not currently in the game, but may be someday."/>
        <Event Name="SettlerInfrastructureAdvanced" Id="6911" Desc="Fires whenever a the completion percentage of an infrastructure project is updated.  This event is only sent to settlers." Deprecated="true" InternalNotes="Need to find out how this is called, because it doesn&apos;t seem to be"/>
        <Event Name="SettlerInfrastructureComplete" Id="6912" Desc="Fires when a settler brings the last resource needed to finish an infrastructure project."/>
        <Event Name="SettlerInfrastructureStarted" Id="6913" Desc="Fires whenever a settler interacts with an infrastructure NPC while the project is not in progress."/>
        <Event Name="SettlerInfrastructureUpdated" Id="6914" Desc="Fires whenever a the completion percentage of an infrastructure project is updated.  This event is only sent to settlers."/>
        <Event Name="SettlerNotifyUse" Id="6915" Deprecated="true" NotTested="true" InternalNotes="Unsure of how this is being used.  Not handled in Lua."/>
        <Event Name="InvokeSettlerBuild" Id="6916" Desc="Fires whenever a settler interacts with a settler depot.">
            <Param Name="unitHub" Desc="The settler hub that the player is interacting with." Type="Unit" Id="14267"/>
            <Param Name="arImprovements" Desc="An array of settler improvements that can be built at this hub." Type="SettlerImprovement" Array="true" Id="14268"/>
        </Event>
        <Event Name="SettlerBuildResult" Id="6917" InternalNotes="We really need an enum saying wtf eResult is." Desc="Fires whenever the player build&apos;s a settler improvement.">
            <Param Name="eResult" Desc="The result of the player&apos;s build action." Type="Integer" Id="14513"/>
            <Param Name="strName" Desc="The name of the improvement that was built." Type="String" Id="14514"/>
        </Event>
        <Event Name="SettlerBuildStatusUpdate" Id="6918" Desc="Fires whenever the player builds or adds time to a settler improvement.">
            <Param Name="idHub" Desc="The id number of the hub that the player built the improvement at." Type="Integer" Id="14515"/>
            <Param Name="unitHub" Desc="The settler hub that the improvement was buit at." Type="Unit" Id="14516"/>
        </Event>
        <Event Name="SettlerHubClose" Id="6919" Desc="Fires whenever the UI calls Event_CancelSettlerHub() or the player moves too far from a settler hub that they are interacting with."/>
        <Event Name="SplineHintObjectEnd" Id="6920" Deprecated="true" NotTested="true" InternalNotes="No clue how to fire this."/>
        <Event Name="TradeSkills_Learned" Id="6921" Desc="Fires whenever the player learns a new crafting tradeskill.  This does not get fired for learning Runecrafting or harvesting (Mining, Survivalist, Relic Hunter) tradeskills.">
            <Param Name="eTradeskill" Desc="The tradeskill that was learned." Type="CraftingLib.CodeEnumTradeskill" Id="14613"/>
        </Event>
        <Event Name="UnitTextBubbleCreate" Id="6922" Desc="Fires whenever an unit should display a text bubble over their head.">
            <Param Name="unitSpeaker" Desc="The unit that the text bubble is attached to." Type="Unit" Id="14628"/>
            <Param Name="strText" Desc="The text in the text bubble." Type="String" Id="14629"/>
            <Param Name="bImmediate" Desc="Whether the text bubble should be shown immediately or fade in." Type="Boolean" Id="14630"/>
            <Param Name="fRange" Desc="The maximum range that people can see the text bubble from." Type="Boolean" Id="14631"/>
        </Event>
        <Event Name="UnitTextBubblesDestroyed" Id="6923" Desc="Fires whenever a text bubble&apos;s internal timer has expired."/>
        <Event Name="UnitGuildNameplateChanged" Id="6924" Desc="Fires whenever a nearby player updates their guild tag on their nameplate.">
            <Param Name="unitUpdated" Desc="The unit whose guild tag was updated." Type="Unit" Id="14622"/>
        </Event>
        <Event Name="UnitMemberOfGuildChange" Id="6925" Desc="Fires whenever a nearby player is added or removed from a guild.">
            <Param Name="unitUpdated" Desc="The player that was added to or removed from a guild." Type="Unit" Id="14626"/>
        </Event>
        <Event Name="UnitGroupChanged" Id="6926" Desc="Fires whenever a player is added or removed from the group.  This is sent to every member of the group.">
            <Param Name="unitUpdated" Desc="The unit that was added or removed from the group." Type="Unit" Id="14621"/>
        </Event>
        <Event Name="UnitTitleChanged" Id="6927" Desc="Fires whenever a nearby unit changes their title.">
            <Param Name="unitUpdated" Desc="The unit who changed their title." Type="Unit" Id="14632"/>
        </Event>
        <Event Name="UnitLevelChanged" Id="6928" Desc="Fires whenever a nearby player&apos;s level or effective level changes." InternalNotes="Firing multiple times for the same level change. Only seems to fire once for each effective level change.">
            <Param Name="unitUpdated" Desc="The unit whose level or effective level changed." Type="Unit" Id="14625"/>
        </Event>
        <Event Name="GalacticArchiveArticleAdded" Id="6929" Desc="Fires whenever the player unlocks the first entry of a particular Galactic Archive Article.">
            <Param Name="artNewArticle" Desc="The article that was just unlocked." Type="GalacticArchiveArticle" Id="13935"/>
        </Event>
        <Event Name="GalacticArchiveEntryAdded" Id="6930" Desc="Fires whenever a new entry is unlocked for an already known Galactic Archive Article.">
            <Param Name="artParent" Desc="The article that this entry belongs to." Type="GalacticArchiveArticle" Id="13938"/>
            <Param Name="entUnlocked" Desc="The newly unlocked entry." Type="GalacticArchiveEntry" Id="13939"/>
        </Event>
        <Event Name="GalacticArchiveRefresh" Id="6931" Desc="Fires whenever the Galactic Archive refreshes.  This is generally when the player changes zones."/>
        <Event Name="GalacticArchiveLinkClick" Id="6932" Deprecated="true" InternalNotes="This isn&apos;t being referenced in Lua and is likely depricated." Desc="Fired whenever a player clicks a link in a Galactic Archive article.">
            <Param Name="artLinkTarget" Type="GalacticArchiveArticle" Desc="The target of the link that was clicked." Id="13940"/>
        </Event>
        <Event Name="PlayerChanged" Id="6933" Desc="Fires when the player first logs in, indicating that it has loaded."/>
        <Event Name="CharacterCreated" Id="6934" Desc="Fires when the player&apos;s character is first placed in the world." Remarks="Note: This is not fired if the UI is reloaded.

Also Note: All of the character&apos;s information may not be populated in other systems when the character is created.  This is an important event, but extra checks, such as GameLib.IsCharacterLoaded() could prove useful here."/>
        <Event Name="MouseOverUnitChanged" Id="6935" Desc="Fires whenever the mouse is moved over a unit or off of a unit.">
            <Param Name="unitMouseOver" Desc="The unit that the mouse is currently over.  This value is nil if the mouse moves off of a unit." Type="unit" Id="14340"/>
        </Event>
        <Event Name="AlternateTargetUnitChanged" Id="6936" Desc="Fires when the player&apos;s focus target changes." Example="function UnitFrames:OnAlternateTargetUnitChanged(unitTarget)
	self.luaFocusFrame:SetTarget(unitTarget)
end">
            <Param Name="unitFocus" Desc="The player&apos;s new focus target." Type="Unit" Id="13352"/>
        </Event>
        <Event Name="TargetedByUnit" Id="6937" NotStandard="true" InternalNotes="The logic on when this is fired seems kinda really odd..." Desc="Fires whenever the player&apos;s threat is increased with a hostile NPC to the point that it targets the player.  This only fires for the person being targeted." Remarks="This isn&apos;t fired if the player&apos;s threat level is 0, if the unit doing the targeting is friendly, or if the unit doing the targeting is a player.">
            <Param Name="unitTargeting" Desc="The unit that is targeting the player." Type="unit" Id="14594"/>
        </Event>
        <Event Name="UnTargetedByUnit" Id="6938" Desc="Fires whenever a unit stops targeting the current player.">
            <Param Name="unitAttacking" Desc="The unit who changed their target." Type="Unit" Id="14633"/>
        </Event>
        <Event Name="TargetThreatListUpdated" Id="6939" NotStandard="true" InternalNotes="Why does this not pass out an array?" Desc="Fires whenever the threat list for the targeted unit updates.  This is fired to any character that is targeting the unit whose threat table was updated." Remarks="Note, this is not fired if the targeted unit is a player.">
            <Param Name="unitTarget1" Desc="The player at the top of the threat list." Type="Unit" Id="14595"/>
            <Param Name="nTarget1Threat" Desc="unitTarget1&apos;s threat vs. the target unit." Type="Integer" Id="14596"/>
            <Param Name="unitTarget2" Desc="The unit with the second highest threat against the target unit." Type="Unit" Id="14597"/>
            <Param Name="nTarget2Threat" Desc="unitTarget2&apos;s threat vs. the target unit." Type="Integer" Id="14598"/>
            <Param Name="unitTarget3" Desc="The unit with the third highest threat against the target unit." Type="Unit" Id="14599"/>
            <Param Name="nTarget3Threat" Desc="unitTarget3&apos;s threat vs. the target unit." Type="Integer" Id="14600"/>
            <Param Name="unitTarget4" Desc="The player with the fourth highest threat against the target unit." Type="Unit" Id="14601"/>
            <Param Name="nTarget4Threat" Desc="unitTarget4&apos;s threat vs. the target unit." Type="Integer" Id="14602"/>
            <Param Name="unitTarget5" Desc="The unit with the fifth highest threat against the target unit." Type="Unit" Id="14603"/>
            <Param Name="nTarget5Threat" Desc="unitTarget5&apos;s threat vs. the target unit." Type="Integer" Id="14604"/>
        </Event>
        <Event Name="LogOut" Id="6940" Desc="Fires whenever the player finishes logging out with their character."/>
        <Event Name="ChatZoneChange" Id="6941" Desc="Fires when the Zone channel changes, such as when a player moves from one zone to another.">
            <Param Name="strNewZone" Desc="The name of the new zone that the player has moved into." Type="String" Id="13477"/>
        </Event>
        <Event Name="ChatFlag" Incomplete="true" Id="6942" NotTested="true" NotStandard="true" InternalNotes="Unsure if this is a thing.  We aren&apos;t handling it anywhere in Lua and there&apos;s no API calls to get the channel&apos;s flags "/>
        <Event Name="ChatResult" Id="6943" Desc="Fires when there is an error with a chat message that the player tried to send." NotStandard="true" InternalNotes="Enum for ChatSystemLib.ChatChannelResult constants?">
            <Param Name="channelSource" Desc="The channel where the original message was sent." Type="ChatChannel" Id="13473"/>
            <Param Name="eResult" Desc="The error with the message that was sent.  This value lines up with the ChatSystemLib.ChatChannelResult constants." Type="Integer" Id="13474"/>
        </Event>
        <Event Name="ChatTellFailed" Id="6944" Desc="Fires whenever the player makes an unsuccessful tell">
            <Param Name="channelSource" Desc="The channel that the player attempted to use for the failed tell.  This is likely the Whisper channel." Type="ChatChannel" Id="13475"/>
            <Param Name="strName" Desc="The name of the player you attempted to send a whisper to." Type="String" Id="13476"/>
        </Event>
        <Event Name="ChatJoin" Id="6946" Desc="Fires when the player joins a chat channel.">
            <Param Name="chanJoined" Desc="The chat channel that the character just joined." Type="ChatChannelLib" Id="13449"/>
        </Event>
        <Event Name="ChatJoinResult" Id="6947" NotStandard="true" InternalNotes="We need an enum for ChatSystemLib.ChatChannelResult" Desc="Fires whenever the player fails to join a channel.">
            <Param Name="chanJoin" Desc="The channel that the player attempted to join." Type="ChatChannelLib" Id="13450"/>
            <Param Name="eResult" Desc="The reason why the player failed to join the channel.  This value lines up with the ChatSystemLib.ChatChannelResult system of int constants." Type="Integer" Id="13451"/>
        </Event>
        <Event Name="ChatLeave" Id="6948" Desc="Fires when the player leaves or is kicked from a chat channel.">
            <Param Name="chanLeft" Desc="The channel that the player left." Type="ChatChannelLib" Id="13452"/>
            <Param Name="bKicked" Desc="Whether or not the player was kicked from the channel" Type="Boolean" Id="13453"/>
            <Param Name="bBanned" Desc="Whether or not the player was banned from the channel." Type="Boolean" Id="13454"/>
        </Event>
        <Event Name="ChatList" Id="6949" NotStandard="true" InternalNotes="Is this still needed since we have the channel:GetMembers() function?  
We still have a handler for it, but nothing is calling Channel:RequestMembers() anymore." Desc="Fired in response to the ChatChannel:RequestMembers() function.  Passes the channel that was polled for its members." NotTested="true">
            <Param Name="channelSource" Desc="The channel that is being polled for its members." Type="ChatChannel" Id="13455"/>
        </Event>
        <Event Name="ChatAction" Id="6951" NotStandard="true" InternalNotes="ChatSystemLib.ChatChannelAction should be an enum, not int constants" Desc="Fires whenever an action is taken on a custom chat channel.  These actions include passing the owner of the channel to another player, adding or removing the Moderator status from a player, muting and unmuting a player, kicking a player from the channel, and adding/removing a password to the channel.">
            <Param Name="channelSource" Desc="The channel that the action was applied to." Type="ChatChannelLib" Id="13445"/>
            <Param Name="eAction" Desc="The action that fired the event.  This value lines up with the ChatSystemLib.ChatChannelAction set of constants." Type="Integer" Id="13446"/>
            <Param Name="strActor" Desc="The player who performed the action." Type="String" Id="13447"/>
            <Param Name="strActedOn" Desc="The target of the action." Type="String" Id="13448"/>
        </Event>
        <Event Name="WhoResponse" Id="6952" NotStandard="true" InternalNotes="Need an enum for Paths" Desc="The response the player gets when they use the /who slash command.">
            <Param Type="Table" Name="tResults" Array="true" Id="14649">
                <Item Name="strName" Desc="The player&apos;s name." Type="String" Id="14650"/>
                <Item Name="nLevel" Desc="The player&apos;s level." Type="Integer" Id="14651"/>
                <Item Name="eRaceId" Desc="The player&apos;s race." Type="GameLib.CodeEnumRace" Id="14652"/>
                <Item Name="eClassId" Desc="The player&apos;s class." Type="GameLib.CodeEnumClass" Id="14653"/>
                <Item Name="ePlayerPathType" Desc="The player&apos;s path.  This lines up with the PlayerPathLib.PlayerPathType set of constants." Type="Integer" Id="14654"/>
                <Item Name="idWorldZone" Desc="The id of the zone the player is in." Type="Integer" Id="14655"/>
                <Item Name="strRace" Desc="The name of the player&apos;s race." Type="String" Id="14656"/>
                <Item Name="strClass" Desc="The name of the player&apos;s class." Type="String" Id="14657"/>
                <Item Name="strZone" Desc="The name of the zone the player is in." Type="String" Id="14658"/>
                <Item Name="strPath" Desc="The name of the player&apos;s path." Type="String" Id="14659"/>
            </Param>
        </Event>
        <Event Name="P2PTradeCommit" Id="6953" Desc="Fired whenever the player commits to a trade using a TradeCommitButton or an ActionConfirmButton whose data is set to GameLib.CodeEnumConfirmButtonType.CommitTrade."/>
        <Event Name="MatchingLeaveQueue" Id="6954" Desc="Fires whenever the player successfully leaves a matching queue, declines to join a pending match, or allows a pending match notification to time out."/>
        <Event Name="MatchingJoinQueue" Id="6955" Desc="Fires whenever the player successfully joins a matching queue."/>
        <Event Name="MatchingGameReady" Id="6956" Desc="Fires whenever the player is able to join a matching game.">
            <Param Name="bInProgress" Desc="Whether the match that the player has already started or not." Type="Boolean" Id="14335"/>
        </Event>
        <Event Name="MatchingGamePendingUpdate" Id="6957" Desc="Fires whenever players that were sent the pending game notification accept or decline to join the match."/>
        <Event Name="MatchingCancelPendingGame" Id="6958" Desc="Fires whenever a player fails to respond to a pending Match notification before it times out or a member of the group declines to join the pending game." NotStandard="true"/>
        <Event Name="MatchingAverageWaitTimeUpdated" Id="6959" NotStandard="true" InternalNotes="Need to find out how often this is fired." Desc="Fires whenever the server recognizes a change in the average wait time for the Match the player is queued for."/>
        <Event Name="MatchingRoleCheckStarted" Id="6960" Desc="Fires when a group queues for a dungeon or adventure or when they look for new members from the queue."/>
        <Event Name="MatchingRoleCheckHidden" Id="6961" Desc="Fires if the player is the one who joined the queue for a dungeon or adventure.  If the player is part of a group that joined the queue together but is not the leader of that group, they will not receive this event."/>
        <Event Name="MatchEntered" Id="6963" Desc="Fired whenever the player enters a PvP Match.  "/>
        <Event Name="MatchFinished" Id="6964" Desc="Fires when the PvP Match ends."/>
        <Event Name="MatchExited" Id="6965" Desc="Fires whenever the player leaves a PvP Match."/>
        <Event Name="MatchLeft" Id="6966" Desc="Fires whenever the player leaves the matching game."/>
        <Event Name="MatchJoined" Id="6967" Desc="Fires when the player initially joins a match."/>
        <Event Name="MatchVoteKickBegin" Id="6968" Desc="Fires in response to someone in the group starting a vote to kick another player from the group using the MatchingGame:InitiateVoteToKick() function.">
            <Param Name="unitMember" Desc="The member that will be kicked if the vote is successful." Type="Unit" Id="14337"/>
        </Event>
        <Event Name="MatchVoteKickEnd" Id="6969" Desc="Fires when the server determines that a vote to kick a player has finished or was canceled."/>
        <Event Name="MatchLookingForReplacements" Id="6970" Desc="Fires when an existing group starts looking for replacements.  This event is the result of the MatchingGame:LookForReplacements() function successfully processing."/>
        <Event Name="MatchStoppedLookingForReplacements" Id="6971" Desc="Fires whenever a group that is looking for replacements fills or in response to MatchingGame:StopLookingForReplacements()"/>
        <Event Name="PVPMatchStateUpdated" Id="6972" Desc="Fires whenever the PvP match&apos;s state is changed.">
            <Param Name="eState" Desc="The match&apos;s new state." Type="MatchingGame.PVPGameState" Id="14477"/>
            <Param Name="fTimeRemaining" Desc="The amount of time remaining before the match automatically changes states, in seconds." Type="Float" Id="14478"/>
        </Event>
        <Event Name="PVPMatchFinished" Id="6973" Desc="Fires when a PvP match ends.">
            <Param Name="eWinner" Desc="The team that won the match." Type="MatchingGame.Winner" Id="14473"/>
            <Param Name="eReason" Desc="The reason that the match ended." Type="MatchingGame.MatchEndReason" Id="14474"/>
            <Param Name="nRatingChangeTeam1" Desc="The amount that Team 1&apos;s rating was changed by." Type="Integer" Id="14475"/>
            <Param Name="nRatingChangeTeam2" Desc="The amount that Team 2&apos;s rating was changed by." Type="Integer" Id="14476"/>
        </Event>
        <Event Name="PVPDeathmatchPoolUpdated" Id="6974" Desc="Fires whenever the respawn pool is updated during a PvP match with the Deathmatch ruleset, such as Arenas.">
            <Param Name="nLivesRemainingTeam1" Desc="The number of respawns team 1 has left." Type="Integer" Id="14466"/>
            <Param Name="nLivesRemainingTeam2" Desc="The number of respawns team 2 has left." Type="Integer" Id="14467"/>
        </Event>
        <Event Name="PVPMatchTeamInfoUpdated" Id="6975" Desc="Fires whenever the information for a team in a PvP match is updated during a match.  This includes when a team first joins a match." Example="Examples of changes that could fire this are updating the team&apos;s name or rating."/>
        <Event Name="UnitPvpFlagsChanged" Id="6976" Desc="Fires whenever a nearby player changes their PvP flag state.">
            <Param Name="unitUpdated" Desc="The unit who toggled their PvP flag state." Type="Unit" Id="14627"/>
        </Event>
        <Event Name="PvpRatingUpdated" Id="6977" Desc="Fires whenever a player&apos;s or PvP team&apos;s rating changes.">
            <Param Name="eRatingType" Desc="The type of rating that was changed." Type="MatchingGame.RatingType" Id="14480"/>
        </Event>
        <Event Name="AvailableMail" Id="6978" InternalNotes="How is this different from AlertMailInfo?" Desc="Fires mail is added to the player&apos;s inbox." Example="function Mail:OnAvailableMail(arItems, bNewMail)
	if not self.wndMain:IsVisible() then
		self:CalculateMailAlert()
		return
	end

	self:PopulateList()
end" NotStandard="true">
            <Param Name="arMail" Desc="An array of mail IDs for the mail added to the player&apos;s inbox." Type="Integer" Id="13379"/>
            <Param Name="bIsNewMail" Desc="Whether or not the messages added to the player&apos;s inbox are &quot;new&quot;." Type="Boolean" Id="13380"/>
        </Event>
        <Event Name="AlertMailInfo" Id="6979" Desc="Fires when the player gets new mail.">
            <Param Type="Table" Name="tMessageInfo" Desc="A table containing information about the new piece of mail." Id="13357">
                <Item Name="strId" Desc="A string with the mail&apos;s unique id, in string format." Type="String" Id="13358"/>
                <Item Name="strSenderName" Desc="The name of the player who sent the mail." Type="String" Id="13359"/>
                <Item Name="strSubject" Desc="The subject of the mail." Type="String" Id="13360"/>
                <Item Name="strBody" Desc="The body of the email." Type="String" Id="13361"/>
                <Item Name="strBodyAML" Desc="The body of the email, along with any formatting strings.  This element is not present on every mail message." Type="String" Id="13362"/>
                <Item Name="fDeliveryTime" Desc="The number of seconds until the mail is received." Type="Float" Id="13363"/>
                <Item Name="fExpirationTime" Desc="The number of seconds until the mail expires." Type="Float" Id="13364"/>
                <Item Name="monCOD" Desc="The amount of money that must be paid before any items can be retreived." Type="Money" Id="13365"/>
                <Item Name="monGift" Desc="The amount of money sent to the recipient." Type="Money" Id="13366"/>
                <Item Name="bIsRead" Desc="Determines whether or not the piece of mail has been read." Type="Boolean" Id="13367"/>
                <Item Name="bIsSaved" Desc="Determines if the player has archived this piece of mail or not." Type="Boolean" Id="13368"/>
                <Item Name="bIsReturnable" Desc="Determines whether or not the player can return the piece of mail to the sender.  This will typically be false for NPCs or CSRs." Type="Boolean" Id="13369"/>
                <Item Name="eSenderType" Desc="A number representing the source of the mail.  These values line up with the MailSystem.EmailType set of constants." Type="Integer" Id="13370"/>
                <Item Type="Table" Name="arAttachments" Desc="A table containing information on the items that are attached to the mail." Array="true" Id="13371">
                    <Item Name="itemAttached" Desc="The item object that is attached to the piece of mail" Type="Item" Id="13372"/>
                    <Item Name="nStackCount" Desc="The number of items in the stack" Type="Integer" Id="13373"/>
                    <Item Name="nServerIndex" Desc="The index of the attachment" Type="Integer" Id="13374"/>
                </Item>
            </Param>
        </Event>
        <Event Name="UnavailableMail" Id="6980" InternalNotes="Why does this return an array with one element???" Desc="Fires whenever a piece of mail is deleted or the player reports a piece of mail as spam.">
            <Param Type="String" Name="strMailId" Desc="An array of strings that contain the mail&apos;s Id" Array="true" Id="14616"/>
        </Event>
        <Event Name="RefreshMail" Id="6981" InternalNotes="Why is the id a string?" Desc="Fires whenever the player removes money or items attached to a piece of mail.">
            <Param Name="strMailId" Desc="The mail&apos;s unique id number....as a string.  Yeah, it&apos;s weird." Type="String" Id="14498"/>
        </Event>
        <Event Name="Vacuum" Id="6982" Desc="Fires whenever the player press the key bound to vacuum looting."/>
        <Event Name="FactionFloater" Id="6983" Desc="Fires whenever the player gains reputation with a faction and float text should be shown.">
            <Param Name="unitTarget" Desc="The unit who gained the reputation.  This should always be the current player." Type="Unit" Id="13871"/>
            <Param Name="strMessage" Desc="The string that should be displayed in the floating text." Type="String" Id="13872"/>
            <Param Name="nAmount" Desc="The amount of reputation gained." Type="Integer" Id="13873"/>
            <Param Name="strFactionName" Desc="The name of the faction that the player gained reputation with." Type="String" Id="13874"/>
            <Param Name="idFaction" Desc="The id number of the faction that the player gained reputation with." Type="Integer" Id="13875"/>
        </Event>
        <Event Name="QuestFloater" Id="6984" Desc="Fires whenever the quest is advanced, abandoned, failed, or completed.  This event is meant to give the UI the information it needs to show floating text related to the quest&apos;s state change.">
            <Param Name="unitTarget" Desc="The unit who the quest belonged to." Type="Unit" Id="14481"/>
            <Param Name="strMessage" Desc="The message that should be shown in the floating text." Type="String" Id="14482"/>
            <Param Name="queUpdated" Desc="The quest that was updated." Type="Quest" Id="14483"/>
        </Event>
        <Event Name="RecallShardChanged" Id="6985" Deprecated="true" InternalNotes="Does not seem to be called from code.  Probably depricated."/>
        <Event Name="CraftingSchematicList" Id="6986" Deprecated="true" InternalNotes="Does not appear to be getting called in code."/>
        <Event Name="ProfessionsLoaded" Id="6987" Desc="Fires when the player&apos;s tradeskills are done loading."/>
        <Event Name="ProfessionUpdated" Id="6988" Desc="Fires whenever a profession gains XP, gains a talent point, chooses a talent, unlocks a schematic, or gets traded for another tradeskill." Remarks="Note, this does not get fired for updates to Runecrafting."/>
        <Event Name="CraftingSchematicLearned" Id="6989" Desc="Fires when the player learns a new crafting schematic.">
            <Param Name="eTradeskill" Desc="The tradeskill associated with the schematic." Type="CraftingLib.CodeEnumTradeskill" Id="13833"/>
            <Param Name="idSchematic" Desc="The id number for the schematic that the player learned." Type="Integer" Id="13834"/>
        </Event>
        <Event Name="CraftingSchematicComplete" Id="6990" Desc="Fires when the player finishes crafting an item.">
            <Param Name="idSchematic" Desc="The id number for the schematic that was completed." Type="Integer" Id="13827"/>
            <Param Name="bSuccess" Desc="Whether or not the crafting attempt was successful." Type="Boolean" Id="13828"/>
            <Param Name="nXPGained" Desc="The amount of XP gained from the crafting attempt." Type="Integer" Id="13829"/>
            <Param Name="arMaterials" Desc="The id number of each material that is returned to the player." Type="Integer" Array="true" Id="13830"/>
            <Param Name="idResultSchematic" Desc="The schematic id for the final item that is created.  This can be different from idSchematic when crafting a variant." Type="Integer" Id="13831"/>
            <Param Name="idCraftedItem" Desc="The item that was crafted from the schematic." Type="Integer" Id="13832"/>
        </Event>
        <Event Name="CraftingDiscoveryHotCold" Id="6991" Desc="Fires whenever the player completes a coordinate crafting session inside a discovery area.">
            <Param Name="eHotColdResult" Desc="Returns how close the previous crafting attempt was to a discoverable recipe." Type="CraftingLib.CodeEnumCraftingDiscoveryHotCold" Id="13818"/>
            <Param Name="eDirection" Desc="The direction of the discoverable schematic from the previous result." Type="CraftingLib.CodeEnumCraftingDirection" Id="13819"/>
        </Event>
        <Event Name="CraftingSchematicInfoReceived" Id="6992" Deprecated="true" InternalNotes="No longer appears to be called by anything in code."/>
        <Event Name="CraftingUpdateCurrent" Id="6993" Desc="Fires whenever the current crafting schematic is updated.  This includes starting/resuming a schematic, adding additives and catalysts, adding/removing/modifying microchips, and completing the craft."/>
        <Event Name="TradeskillAchievementComplete" Id="6994" Desc="Fires whenever the player finishes an entry on a tradeskill&apos;s tech tree." Remarks="Elements on the tech tree are Achievement type objects, hence the name of the event.">
            <Param Name="idAchievement" Desc="The id number for the achievement that the player earned." Type="Integer" Id="14609"/>
        </Event>
        <Event Name="TradeskillAchievementUpdate" Id="6995" Desc="Fires whenever progress is made on an entry in the player&apos;s tech tree.">
            <Param Name="achUpdated" Desc="The tech tree entry that was updated." Type="Achievement" Id="14610"/>
            <Param Name="nCurrentProgress" Desc="The progress the player has made towards completing the achievement." Type="Integer" Id="14611"/>
            <Param Name="nProgressNeeded" Desc="The total amount of progress needed to complete the achievement." Type="Integer" Id="14612"/>
        </Event>
        <Event Name="ShowItemInDressingRoom" Id="6996" Desc="Fires when the player presses Control + right click on a piece of equipment in a bag window.">
            <Param Name="itemPreview" Desc="The item that the player wants to preview." Type="Item" Id="14529"/>
        </Event>
        <Event Name="CraftingModItem" Id="6997" Deprecated="true" InternalNotes="The functionality tied to this event seems to be depricated." Desc="Fires when the player is holding ALT and clicks on an item.  This fires when the mouse button is raised.">
            <Param Name="itemMod" Desc="The item that the player is attempting to moddify." Type="Item" Id="13820"/>
        </Event>
        <Event Name="ShowTutorial" Id="6999" Desc="Fires whenever a tutorial should be shown or when the UI calls Event_ShowTutorial().  It informs the UI which tutorial to display and where to display it.">
            <Param Name="idTutorial" Desc="The tutorial&apos;s id number." Type="Integer" Id="14568"/>
            <Param Name="bInstant" Desc="Whether the tutorial is shown immediately or is placed in a queue." Type="Boolean" Id="14569"/>
            <Param Name="strText" Desc="The text for the tutorial." Type="String" Id="14570"/>
            <Param Name="eAnchor" Desc="The anchor that the tutorial should be attached to." Type="GameLib.CodeEnumTutorialAnchor" Id="14571"/>
            <Param Name="wndContainer" Desc="The window where the tutorial is displayed." Type="Window" Id="14572"/>
            <Param Name="nOffsetX" Desc="The amount the window is offset from the anchor along the X axis." Type="Integer" Id="14573"/>
            <Param Name="nOffsetY" Desc="The amount the window is offset from the anchor point along the Y axis." Type="Integer" Id="14574"/>
        </Event>
        <Event Name="LootRollUpdate" Id="7000" Desc="Fires whenever a new item is added or removed from the list of items that the player can roll for.  "/>
        <Event Name="MasterLootUpdate" Id="7001" Desc="Fires whenever the items available to be assigned by the master looter change.  This is fired for everyone in the party or raid."/>
        <Event Name="PendingLootInteract" Incomplete="true" Id="7002" NotTested="true" InternalNotes="Unsure how to get this to fire."/>
        <Event Name="MapTrackedUnitUpdate" Id="7003" Deprecated="true" NotTested="true" InternalNotes="Unable to figure out how to track units on the zone map, so unable to get this to fire."/>
        <Event Name="MapTrackedUnitDisable" Id="7004" NotTested="true" InternalNotes="Unsure of how to track units on the map, so unable to get this to fire." Deprecated="true"/>
        <Event Name="NextFrame" Id="7005" NotStandard="true" InternalNotes="Really?  We&apos;re firing an event every frame that&apos;s just saying the frame updated?" Desc="Fires once every frame."/>
        <Event Name="DialogClosing" Id="7009" InternalNotes="Unknown usage." Deprecated="true" NotTested="true" NotStandard="true"/>
        <Event Name="ScriptResurrect" Id="8124" Desc="Fires when the player is forced to resurrect by a scripted event in game."/>
        <Event Name="GuildQueueStateChanged" Id="8125" Desc="Fires whenever the arena team&apos;s or warparty&apos;s enters a queue, leaves a queue, enters a match, or leaves a match." Remarks="Possible values for the different states are:
GuildLib.GuildQueueState_Normal
GuildLib.GuildQueueState_Queuing
GuildLib.GuildQueueState_Queued
GuildLib.GuildQueueState_InBattle">
            <Param Name="guildUpdated" Desc="The guild who&apos;s queue state has updated." Type="Guild" Id="14215"/>
            <Param Name="eOldState" Desc="The guild&apos;s previous queue state.  This lines up with the GuildLib.GuildQueueState set of constants." Type="Integer" Id="14216"/>
            <Param Name="eNewState" Desc="The guild&apos;s new queue state.  This lines up with the GuildLib.GuildQueueState set of constants." Type="Integer" Id="14217"/>
        </Event>
        <Event Name="DuelAccepted" Id="8126" Desc="Fires whenever a player accepts a duel request.">
            <Param Name="fCountdownTimer" Desc="The countdown timer before the duel starts (in seconds)." Type="Float" Id="13859"/>
        </Event>
        <Event Name="CharacterFlagsUpdated" Id="8127" Desc="Fires whenever the player&apos;s state flags are updated.  Changing any of the following states will trigger this event:
PvP Flag
Block Friendships
Limit Hazard Rez
Ignore Duel Requests
Hide Top Guild Holomark
Hide Left Guild Holomark
Hide Right Guild Holomark
Hide Back Guild Holomark
Disable Character
Display Guild Holomark Near
Require Name Change"/>
        <Event Name="RefreshHealthShieldBar" Id="8209" Desc="Fires whenever the a unit&apos;s health or shields is updated." Remarks="Note, this is not fired if the player&apos;s absorption shield is updated.  Also, if the damage is applied to both health and shields, this event will fire twice." InternalNotes="It would be awesome if we could get the unit whose health / shields updated and if it fired when absorb shields update."/>
        <Event Name="ToggleChallengesWindow" Id="8210" Deprecated="true" InternalNotes="This does not seem to be called."/>
        <Event Name="ToggleTradeskills" Id="8211" Desc="Fires whenever the player presses the key bound to Tradeskills.  This only fires for the player that pressed the key."/>
        <Event Name="WorkOrderLocate" Id="8212" Desc="Fires whenever the player clicks a work order quest in the Quest Tracker." Remarks="This event is intended to open the tradeskill window to the appropriate schematic">
            <Param Name="idSchematic" Desc="The id number of the schematic required for the work order." Type="Integer" Id="14660"/>
        </Event>
        <Event Name="InterfaceMenu_ToggleLoreWindow" Id="8213" InternalNotes="This should probably be renamed to something more generic like every other event." Desc="Fires whenever the player presses the key bound to the Lore window." NotStandard="true"/>
        <Event Name="ToggleSocialWindow" Id="8214" Desc="Fires whenever the player presses the key bound to the Social window.  It is only sent to the player that pressed the button."/>
        <Event Name="ToggleReputationInterface" Id="8215" Desc="Fires whenever the UI calls Event_ToggleReputationWindow().  This is only fired to the player with the addon that called the function."/>
        <Event Name="InvokeFriendsList" Id="8216" Deprecated="true" InternalNotes="The keybinding that would have called this is removed."/>
        <Event Name="ChallengeShared" Id="8218" NotTested="true" InternalNotes="Is this even possible anymore?" Desc="Fired when a challenge is shared with the player." NotStandard="true">
            <Param Name="idChallenge" Desc="The id number of the challenge being shared." Type="Integer" Id="13430"/>
            <Param Name="idSharingPlayer" Desc="The id number of the player who shared the challenge." Type="Integer" Id="13431"/>
            <Param Name="nTimeToAccept" Desc="The amount of time the player has to accept the challenge (in seconds)." Type="Integer" Id="13432"/>
        </Event>
        <Event Name="ChallengeShareTimedOut" Id="8219" NotTested="true" NotStandard="true" InternalNotes="Is sharing challenges even a thing?" Desc="Fires when the player runs out of time to accept a shared challenge.">
            <Param Name="idChallenge" Desc="The id number of the challenge that was shared." Type="Integer" Id="13433"/>
        </Event>
        <Event Name="StanceChanged" Id="8220" Desc="Fires whenever the player changes their character&apos;s innate ability.  This event is only sent to the player who triggered it."/>
        <Event Name="ActionBarNonSpellShortcutAddFailed" Id="8221" Desc="Fires when a non-spell fails to be placed on the action bar." Example="function FloatText:OnActionBarNonSpellShortcutAddFailed()
	local strMessage = Apollo.GetString(&quot;FloatText_ActionBarAddFail&quot;)
	self:OnSpellCastFailed( LuaEnumMessageType.GenericPlayerInvokedError, nil, GameLib.GetControlledUnit(), GameLib.GetControlledUnit(), strMessage )
end"/>
        <Event Name="StunVGPressed" Id="8222" Desc="Fired once every half second that the player is stunned.  This informs the UI of whether the player pressed the correct button to break out of the stun.  This event is only fired for the person who is stunned.">
            <Param Name="bButtonPressed" Desc="Whether the player pressed the correct button or not." Type="Boolean" Id="14593"/>
        </Event>
        <Event Name="ItemLink" Id="8223" Desc="Fires whenever the player attempts to add an item link to the chat window.">
            <Param Name="itemLinked" Desc="The item that was linked in chat." Type="Item" Id="14299"/>
        </Event>
        <Event Name="ToggleFramerate" Id="8224" Desc="Fires whenever the player toggles the framerate display (Ctrl + F by default).  This is only fired for the client where the key combination was pressed."/>
        <Event Name="HintArrowDistanceUpdate" Id="8225" NotTested="true" InternalNotes="Unable to get this to fire." Incomplete="true"/>
        <Event Name="DyeLearned" Id="8226" Desc="Fires whenever the player learns a new dye color.">
            <Param Name="idDye" Desc="The id number of the dye." Type="Integer" Id="13865"/>
            <Param Type="Integer" Name="arDyeInfo" Desc="A list of ids for each dye the player has learned." Array="true" Id="13866"/>
        </Event>
        <Event Name="PlayerEquippedItemChanged" Id="8227" Desc="Fires whenever the player equips or removes a piece of equipment.">
            <Param Name="eSlot" Desc="The equipment slot that was updated." Type="GameLib.CodeEnumEquippedItems" Id="14366"/>
            <Param Name="itemNew" Desc="The item that was placed in the slot after the update.  If no item was added, then this value will be nil." Type="Item" Id="14367"/>
            <Param Name="itemOld" Desc="The item that was in the slot before the update.  If the slot was empty, this value will be nil." Type="Item" Id="14368"/>
        </Event>
        <Event Name="Group_Request_Result" Id="8228" Desc="Fires whenever actions related to joining an existing group processed by the server.">
            <Param Name="strPlayerName" Desc="The name of the player whose group the player is attempting to join." Type="String" Id="14090"/>
            <Param Name="eResult" Desc="The type of action that was processed." Type="GroupLib.Result" Id="14091"/>
            <Param Name="bIsJoin" Desc="Whether the message is an attempt to join the group or not." Type="Boolean" Id="14092"/>
        </Event>
        <Event Name="Group_JoinRequest" Id="8229" Desc="Fires whenever a player sends a request to join an existing party.">
            <Param Name="strRequesterName" Desc="The name of the player requesting to join the group." Type="String" Id="13946"/>
        </Event>
        <Event Name="Group_Referral" Id="8230" Desc="Fires whenever a group member referrs another player for an invitation to the group.">
            <Param Name="nMemberIdx" Desc="The group index of the member who sent the referral." Type="Integer" Id="14083"/>
            <Param Name="strTargetName" Desc="The name of the player that was referred to the group." Type="String" Id="14084"/>
        </Event>
        <Event Name="Group_MemberOrderChanged" Id="8231" Deprecated="true" Desc="Fires whenever the group&apos;s order has changed." Example="Note, this functionality is not currently implemented, so this event will never fire."/>
        <Event Name="Group_MentorLeftAOI" Id="8232" Desc="Fired whenever a pair of players using mentoring get too far apart, when the players move within range again, and when the timer to move within range runs out.">
            <Param Name="nTimeUntilCanceled" Desc="How long the players have (in seconds) to return to eachother&apos;s Area of Interest before the Mentoring status is canceled." Type="Integer" Id="14072"/>
            <Param Name="bTimerStop" Desc="Whether or not the countdown timer has stopped.  This can be because the players have moved within range of eachother or the timer has expired." Type="Boolean" Id="14074"/>
        </Event>
        <Event Name="RaidInfoResponse" Id="8233" InternalNotes="Unsure how to get this to fire.  I don&apos;t think we&apos;re handling it atm." Deprecated="true" NotTested="true"/>
        <Event Name="GuildInfoMessage" Id="8234" Desc="Fires whenever a guild&apos;s Info Message is updated.">
            <Param Name="guildOwner" Desc="The guild whose Info Message has changed." Type="Guild" Id="14186"/>
        </Event>
        <Event Name="GuildEventLogChange" Id="8235" Desc="Fires whenever a player joins the guild, a player leaves the guild, the guild unlocks a perk, activates a perk, or calls Guild:RequestEventLogList()">
            <Param Name="guildSource" Desc="The guild whose logs have changed." Type="Guild" Id="14173"/>
        </Event>
        <Event Name="GuildBankLog" Id="8236" NotStandard="true" InternalNotes="Lots of coding standard fixes needed." Desc="Returns the results from Guild:RequestBankLogs(), Guild:RequestMoneyLogs(), and Guild:RequestRepairLogs().">
            <Param Name="guildOwner" Desc="The guild that owns the bank that the logs belong to." Type="Guild" Id="14154"/>
            <Param Type="Table" Name="arLogs" Desc="Each log entry contains the name of the player who performed the action and the time since the action occurred.  All other variables depend on the type of log entry.  The different combinations are:

uMoneyDeposit

uMoneyWithdraw

uRepairWithdraw

nTab
uItemDeposit
nStack

nTab
uItemWithdraw
nStack" Array="true" Id="14155">
                <Item Name="strName" Desc="The name of the player that performed the action in the log." Type="String" Id="14156"/>
                <Item Name="fOccuredAgoDays" Desc="The amount of time since the action was created (in days)." Type="Float" Id="14157"/>
                <Item Name="uMoneyDeposit" Desc="The money that was deposited in the bank." Type="Money" Id="14158"/>
                <Item Name="uMoneyWithdraw" Desc="The money that was withdrawn from the bank." Type="Money" Id="14159"/>
                <Item Name="uRepairWithdraw" Desc="The money that was spent on a guild repair." Type="Money" Id="14160"/>
                <Item Name="nTab" Desc="The tab that an item was added or removed from." Type="Integer" Id="14161"/>
                <Item Name="nStack" Desc="The number of items in the stack that was added or removed from the guild bank." Type="Integer" Id="14162"/>
                <Item Name="uItemDeposit" Desc="The item that was deposited in the guild bank." Type="Item" Id="14163"/>
                <Item Name="uItemWithdraw" Desc="The item that was withdrawn from the guild bank." Type="Item" Id="14164"/>
            </Param>
        </Event>
        <Event Name="FriendshipInvitesRecieved" Id="8237" NotStandard="true" InternalNotes="PlayerPathLib.PlayerPathType needs to be converted to an enum.
Some variables need coding standard fix." Desc="Fires whenever the player receives a new friend invite.">
            <Param Type="Table" Name="arInviteInfo" Array="true" Id="13909">
                <Item Name="nId" Desc="The friend id associated with the invite." Type="Integer" Id="13910"/>
                <Item Name="strCharacterName" Desc="The name of the character that sent the invite." Type="String" Id="13911"/>
                <Item Name="nClassId" Desc="The inviting character&apos;s class." Type="GameLib.CodeEnumClass" Id="13912"/>
                <Item Name="nPathId" Desc="This lines up with the PlayerPathLib.PlayerPathType set of constants." Type="Integer" Id="13913"/>
                <Item Name="nLevel" Desc="The invitor&apos;s current level." Type="Integer" Id="13914"/>
                <Item Name="bIsNew" Desc="Whether or the player has seen the invite before or not." Type="Boolean" Id="13915"/>
                <Item Name="strNote" Desc="The note that was sent along with the invite." Type="String" Id="13916"/>
                <Item Name="fDaysUntilExpired" Desc="The number of days before the invite automatically expires." Type="Float" Id="13917"/>
            </Param>
        </Event>
        <Event Name="FriendshipInviteRemoved" Id="8238" Desc="Fires whenever a player declines a friend invite from another player.">
            <Param Name="idFriend" Desc="The friend id of the invite that was removed." Type="Integer" Id="13908"/>
        </Event>
        <Event Name="FriendshipAccountInvitesRecieved" Id="8239" Desc="Fired whenever the player receives an account friend invite from another player or when the player logs in." InternalNotes="FriendshipLib.CharacterFriendshipType needs to be set as an enum.
strInviteType needs to use proper naming convention." NotStandard="true">
            <Param Type="Table" Name="arInviteInfo" Id="13900" Array="true">
                <Item Name="nId" Desc="The friendship id for the invite." Type="Integer" Id="13901"/>
                <Item Name="strInviteType" Desc="The type of invite that was received.  This value lines up with the FriendshipLib.CharacterFriendshipType set of int constants." Type="Integer" Id="13902"/>
                <Item Name="strNote" Desc="The note that was sent along with the invite." Type="String" Id="13903"/>
                <Item Name="strDisplayName" Desc="The display name of the player who sent the invite.  This should be the name of the character that they&apos;re currently on @ the realm that that player is on." Type="string" Id="13904"/>
                <Item Name="bIsNew" Desc="Whether the invite has been seen by the player before or not." Type="Boolean" Id="13905"/>
            </Param>
        </Event>
        <Event Name="FriendshipAccountInviteRemoved" Id="8240" Desc="Fires whenever the player declines an account friend invite from another player.">
            <Param Name="idFriend" Desc="The id number for the invite that was sent." Type="Integer" Id="13893"/>
        </Event>
        <Event Name="FriendshipAccountFriendsRecieved" Id="8241" NotStandard="true" InternalNotes="FriendshipLib.AccountPresenceState needs to be converted to an enum" Desc="Fires whenever a player accepts an account friend invite that was sent to them, when another player accepts an account friend invite that they sent, or when the player logs in.">
            <Param Type="Table" Name="arFriendInfo" Id="13886" Array="true">
                <Item Name="nId" Desc="The new friend id." Type="Integer" Id="13887"/>
                <Item Name="strPublicNote" Desc="The new friend&apos;s public note." Type="String" Id="13888"/>
                <Item Name="strPrivateNote" Desc="The new friend&apos;s private note." Type="String" Id="13889"/>
                <Item Name="strCharacterName" Desc="The name of the character that the account friend is currently on." Type="String" Id="13890"/>
                <Item Name="nPresenceState" Desc="The player&apos;s current presence state.  This lines up with the FriendshipLib.AccountPresenceState set of contants." Type="Integer" Id="13891"/>
                <Item Name="fLastOnline" Desc="The amount of time since the player was last online (in days).  If this value is 0, then the player is online." Type="Float" Id="13892"/>
            </Param>
        </Event>
        <Event Name="FriendshipAccountFriendRemoved" Id="8242" Desc="Fires whenever one person on either side of an account friendship removes the other as an account friend.">
            <Param Name="idFriend" Desc="The friend id of the account friend that was removed." Type="Integer" Id="13878"/>
        </Event>
        <Event Name="FriendshipAccountCharacterLevelUpdate" Id="8243" Desc="Fires whenever an account friend&apos;s character gains a level.">
            <Param Name="idFriend" Desc="The friend id of the player that gained a level." Type="Integer" Id="13876"/>
        </Event>
        <Event Name="FriendshipAccountDataUpdate" Id="8244" Desc="Fires whenever an account friend&apos;s nickname, presence, public note, or online/offline status changes.">
            <Param Name="idFriend" Desc="The account friend ID of the player." Type="Integer" Id="13877"/>
        </Event>
        <Event Name="FriendshipAccountPersonalStatusUpdate" Id="8245" Desc="Fires if an account friend logs on or off, updates their presence, or updates their public note."/>
        <Event Name="CombatLogFallingDamage" Id="8246" Desc="Fires whenever the player takes fall damage">
            <Param Name="unitCaster" Desc="The unit that took the falling damage.  This should always be the current player." Type="Unit" Id="13624"/>
            <Param Name="nAmount" Desc="The amount of damage the player took." Type="Integer" Id="13625"/>
        </Event>
        <Event Name="CombatLogDatacube" Id="8247" InternalNotes="Need to change DatacubeLib.DatacubeType int contstants to enums." Desc="Fires when the player interacts with a datacube, journal, or TFBTF entry in the world." NotStandard="true">
            <Param Type="Table" Name="tLogInfo" Id="13568">
                <Item Name="unitCaster" Desc="The unit that activated the datacube.  This will always be the current player." Type="Unit" Id="13569"/>
                <Item Name="eDatacubeType" Desc="The type of datacube.  This can be either DatacubeLib.DatacubeType_Datacube, DatacubeLib.DatacubeType_Chronicle (Tales from Beyond the Fringe), or DatacubeLib.DatacubeType_Journal." Type="Integer" Id="13570"/>
                <Item Name="bHasPieces" Desc="Whether or not the datacube has multiple parts.  This should only be true for Tales from Beyond the Fringe. " Type="Boolean" Id="13571"/>
            </Param>
        </Event>
        <Event Name="ShieldsOverloaded" Id="8248" InternalNotes="Need to figure out how shields get overloaded." Desc="Fires whenever a unit&apos;s shields are overloaded or the overload effect ends." NotTested="true">
            <Param Name="unitTarget" Desc="The unit whose shields are overloaded or lost the overloaded state." Type="Unit" Id="14520"/>
            <Param Name="bOverloaded" Desc="Whether the shields entered or left the overloaded state." Type="Boolean" Id="14521"/>
        </Event>
        <Event Name="RealmBroadcastTierMedium" Id="8249" Desc="Fires whenever a medium priority message is broadcast to the entire realm.">
            <Param Name="strMessage" Desc="The message that was broadcast." Type="String" Id="14493"/>
        </Event>
        <Event Name="RealmFirstAchievementAnnounce" Id="8250" Desc="Fires whenever a player or guild is the first on the realm to earn an achievement.  This only applies to select achievements, such as hitting a certain level, reaching the highest tier of a tradeskill, and clearing certain dungeons and raids, etc.">
            <Param Name="idAchievement" Desc="The achievement that the player or guild earned." Type="Integer" Id="14494"/>
            <Param Name="bGuildAchievement" Desc="Whether the achievement was a guild achievement or not." Type="Boolean" Id="14495"/>
            <Param Name="strName" Desc="The name of the player or guild who earned the achievement." Type="String" Id="14496"/>
            <Param Name="strMessage" Desc="The message that is broadcast to the realm when the achievement is earned." Type="String" Id="14497"/>
        </Event>
        <Event Name="RealmBroadcastTierHigh" Id="8251" Desc="Fires whenever a high priority message is broadcast to the entire realm.">
            <Param Name="strMessage" Desc="The message that was broadcast." Type="String" Id="14492"/>
        </Event>
        <Event Name="GameClickSky" Id="8253" Desc="Fires when the player left clicks on the sky."/>
        <Event Name="HousingMannequinOpen" Id="8254" Desc="Fires whenever the player interacts with a Mannequin."/>
        <Event Name="HousingMannequinClose" Id="8255" Desc="Fires when the player is interacting with a mannequin and either interacts with another NPC or moves too far away from the mannequin."/>
        <Event Name="HousingBasicsUpdated" Id="8256" Desc="Fires whenever the player changes the visitor rules for their housing plot."/>
        <Event Name="HarvestItemsSentToOwner" Id="8257" Desc="Fires whenever the player harvests resources on a neighbor&apos;s housing plot while the plot&apos;s Resource Sharing returns more than 0% to the owner.">
            <Param Type="Table" Name="arItemsSent" Id="14239">
                <Item Name="item" Desc="The item that is sent to the plug&apos;s owner." Type="Item" Id="14240"/>
                <Item Name="nCount" Desc="The stack count of the item that is sent to the plug&apos;s owner." Type="Integer" Id="14241"/>
            </Param>
        </Event>
        <Event Name="ToggleAuctionList" Id="8258" Desc="Fires whenever the player presses the keybinding tied to the Marketplace Listings.  This event is only fired for the player who presses the keybind."/>
        <Event Name="DuelLeftArea" Id="8259" Desc="Fires whenever the player leaves the dueling area.">
            <Param Name="fWarningTime" Desc="The amount of time (in seconds) that the player has to re-enter the dueling area before they forfiet." Type="Float" Id="13863"/>
        </Event>
        <Event Name="DuelCancelWarning" Id="8260" Desc="Fires whenever a player re-enters the dueling area while the &quot;Left Area&quot; warning is displayed."/>
        <Event Name="SpecChanged" Id="8261" Desc="Fires whenever the player attempts to change their spec.  This event is only seen by the player that triggers the event.">
            <Param Name="nSpecIndex" Desc="The index of the spec that the player changed to." Type="Integer" Id="14583"/>
            <Param Name="eResult" Desc="The result of the player&apos;s attempt to change their spec.  This will show any errors caused by the attempt, or OK if successful." Type="AbilityBook.CodeEnumSpecError" Id="14584"/>
        </Event>
        <Event Name="CharacterEldanAugmentationsUpdated" Id="8262" NotStandard="true" InternalNotes="We may want to rename this event from Eldan Augmentations to AMPs" Desc="Fires whenever the player selects an AMP or purchases an AMP reset."/>
        <Event Name="CharacterUnlockedInlaidEldanAugmentation" Id="8263" Desc="Fires whenever the player unlocks a new AMP."/>
        <Event Name="PlayedTime" Id="8264" Desc="Fires whenever the player types /played in chat.">
            <Param Name="strCreationMessage" Desc="A string describing when the character was created." Type="String" Id="14355"/>
            <Param Name="strPlayedTotal" Desc="A string describing the amount of time the player has played the game." Type="String" Id="14356"/>
            <Param Name="strPlayedThisLevel" Desc="A string describing how much time the player has spent in game since gaining a level." Type="String" Id="14357"/>
            <Param Name="strPlayedThisSession" Desc="A string describing how long the player has played since logging in this session." Type="String" Id="14358"/>
            <Param Name="strCreationDate" Desc="A string that contains the character&apos;s creation date and time." Type="String" Id="14359"/>
            <Param Name="nTimePlayedTotal" Desc="The amount of time that the player has played this character, in seconds." Type="Integer" Id="14360"/>
            <Param Name="nTimePlayedLevel" Desc="The amount of time that the player has played since the character last leveled up, in seconds." Type="Integer" Id="14361"/>
            <Param Name="nTimePlayedSession" Desc="The amount of time the player has played since logging in, in seconds." Type="Integer" Id="14362"/>
        </Event>
        <Event Name="PublicEventCleared" Id="8265" Desc="Fires whenever a PublicEvent is removed from the player&apos;s list of active events." InternalNotes="This doesn&apos;t seem to be called like I thought.  Might not ever be called.
This might be depricated and replaced with PublicEventLeave." Deprecated="true" NotStandard="true">
            <Param Name="peEnding" Desc="The PublicEvent that was cleared from the active list." Type="PublicEvent" Id="14399"/>
        </Event>
        <Event Name="PlayerPathSoldierNewWhackAMoleBurrows" Id="8266" Deprecated="true" InternalNotes="Have not been able to find any of these missions in game.  Also, this is not referenced in lua.  Depricated?"/>
        <Event Name="SoldierHoldoutDeath" Id="8267" Desc="Fires if a player that has either triggered the Holdout or damaged Holdout NPCs dies.">
            <Param Name="solHoldout" Desc="The holdout that the player was participating in." Type="SoldierEvent" Id="14576"/>
        </Event>
        <Event Name="TradeSkillSigilResult" Id="8268" Desc="Fires whenever the player attempts to add a rune to a rune slot on a piece of equipment.">
            <Param Name="eResult" Desc="The result of the player&apos;s attempt to add a rune to a piece of equipment." Type="CraftingLib.CodeEnumTradeskillResult" Id="14614"/>
        </Event>
        <Event Name="TradeskillEngravingStationOpen" Id="8269" Desc="Fires whenever the player interacts with an Engraving Station NPC."/>
        <Event Name="TradeskillEngravingStationClose" Id="8270" Desc="Fires whenever the player interacts with another NPC or moves away from the Engraving Station while they are interacting with it."/>
        <Event Name="UnitEvaded" Id="8271" Desc="Fires if an NPC evades or resets due to the player being in stealth for too long." Remarks="Note: This does not fire for creatures tethering naturally." NotStandard="true" InternalNotes="We need an enum for eReason.">
            <Param Name="unitEvading" Desc="The unit that evaded." Type="Unit" Id="14617"/>
            <Param Name="unitTarget" Desc="The unit that the NPC was targeting before it evaded." Type="Unit" Id="14618"/>
            <Param Name="eReason" Desc="The reason that the NPC evaded.  This should be either 2 (Timeout), 5 (FailedToPath) or 6 (StealthWanderTimeout)" Type="Integer" Id="14619"/>
            <Param Name="strText" Desc="The floating text that should be shown when the unit evades." Type="String" Id="14620"/>
        </Event>
        <Event Name="MountUnlocked" Id="8272" Desc="Fires whenever the player unlocks a new mount.">
            <Param Name="nMountId" Desc="The id number of the mount that was unlocked." Type="Integer" Id="14338"/>
        </Event>
        <Event Name="Inspect" Id="8273" Desc="Fires whenever the server returns information from the Unit:Inspect() function.">
            <Param Name="unitTarget" Desc="The unit that the inspect function was called on." Type="Unit" Id="14265"/>
            <Param Name="arItems" Desc="The items that unitTarget currently has equipped." Type="Item" Array="true" Id="14266"/>
        </Event>
        <Event Name="ChatAccountTellFailed" Id="8274" Desc="Fires whenever the player tries to send an account whisper to an invalid player.">
            <Param Name="channelWhisper" Desc="The chat channel that the player tried to whisper from.  This should always be the &quot;Account Whisper&quot; channel." Type="ChatChannelLib" Id="13443"/>
            <Param Name="strName" Desc="The name of the player who was intended to receive the account whisper." Type="String" Id="13444"/>
        </Event>
        <Event Name="AccountSupportTicketResult" Id="8275" InternalNotes="Need more info on this one.  It seems to be the channel to display the success/fail message and whether or not it succeeded or failed, but it&apos;s hard to tell" Desc="Informs the player if the ticket that they submitted successfully made it to the server or not." Example="function ChatLog:OnAccountSupportTicketResult( channelSource, bSuccess )
	if( bSuccess ) then
		ChatSystemLib.PostOnChannel(ChatSystemLib.ChatChannel_System, Apollo.GetString(&quot;PlayerTicket_TicketSent&quot;), &quot;&quot;)
	else
		ChatSystemLib.PostOnChannel(ChatSystemLib.ChatChannel_System, Apollo.GetString(&quot;PlayerTicket_TicketFailed&quot;), &quot;&quot;)
	end
end">
            <Param Name="channelGM" Desc="The chat channel where the message will be displayed." Type="Channel" Id="13318"/>
            <Param Name="bSuccess" Type="Boolean" Id="13319" Desc="Whether or not the ticket was successfully sent."/>
        </Event>
        <Event Name="ChatReply" Id="8276" Desc="Fires when the player uses the ChatReply keybinding."/>
        <Event Name="ChatReWhisper" Id="8277" NotTested="true" NotImplemented="true" InternalNotes="We are not using this at the moment, making the keybinding do nothing." Desc="Fires when the Chat Re-Whisper keybinding is pressed."/>
        <Event Name="CityDirectionsList" Id="8278" Desc="Fires when the player interacts with a guard in a capital city."/>
        <Event Name="CityDirectionsClose" Id="8279" Desc="Fires when the City Directions UI closes."/>
        <Event Name="CityDirectionMarked" Id="8280" Desc="Fires when a city direction marker is displayed on the map / minimap">
            <Param Type="Table" Name="tLocationInfo" Id="13496">
                <Item Name="idDestination" Desc="The direction marker&apos;s ID." Type="Integer" Id="13497"/>
                <Item Name="eType" Desc="The type of NPC that the player is being guided towards." Type="GameLib.CityDirectionType" Id="13498"/>
                <Item Name="strName" Desc="The name of the direction marker&apos;s destination." Type="String" Id="13499"/>
                <Item Type="Table" Name="tLoc" Id="13500">
                    <Item Name="x" Desc="The x coordinate of the city direction&apos;s destination." Type="Float" Id="13501"/>
                    <Item Name="y" Desc="The y coordinate of the city direction&apos;s destination." Type="Float" Id="13502"/>
                    <Item Name="z" Desc="The z coordinate of the city direction&apos;s destination" Type="Float" Id="13503"/>
                </Item>
            </Param>
        </Event>
        <Event Name="CityDirectionClear" Id="8281" Desc="Removes the specified direction marker from the map." NotTested="true">
            <Param Name="idDirection" Type="Integer" Desc="The ID number for the direction that should be cleared." Id="13479"/>
        </Event>
        <Event Name="CraftingStationClose" Id="8282" Desc="Fired when the player stops interacting with or moves too far away from a crafting station."/>
        <Event Name="MatchVoteSurrenderBegin" Id="8283" Desc="Fires whenever a call to MatchingGame:InitiateVoteToSurrender() is successfully called by someone on the player&apos;s team during a PvP match."/>
        <Event Name="MatchVoteSurrenderEnd" Id="8284" Desc="Fires when the server determines that a vote to surrender a PvP match has finished or was canceled."/>
        <Event Name="PvpKillNotification" Id="8285" Desc="Fires when a player is killed in PvP.">
            <Param Name="strVictimName" Desc="The name of the player that was killed." Type="String" Id="14468"/>
            <Param Name="eReason" Desc="The reason the victim died." Type="MatchingGame.PvpDeathReason" Id="14469"/>
            <Param Name="strKillerName" Desc="The name of the unit that killed the victim." Type="String" Id="14470"/>
            <Param Name="eKillerClass" Desc="The killer&apos;s class." Type="GameLib.CodeEnumClass" Id="14471"/>
            <Param Name="eVictimTeam" Desc="The team that the victim is on." Type="MatchingGame.Team" Id="14472"/>
        </Event>
        <Event Name="MatchingEligibilityChanged" Id="8286" Desc="Fires whenever a group member&apos;s eligibility for the dungeon that the group is queued for changes.  "/>
        <Event Name="WarplotBattleStateChanged" Id="8287" Desc="Fires when the player enters the warplot or when one of the warparty&apos;s plugs is destroyed."/>
        <Event Name="WarPartyMatchResults" Id="8288" Desc="Fires when a Warplot match ends.  This event is sent to every player involved in the match.">
            <Param Type="Table" Name="arTeamResults" Array="true" Id="14644">
                <Item Name="nRating" Desc="The amount that the team&apos;s rating changed by." Type="Integer" Id="14645"/>
                <Item Name="nRepairCost" Desc="The amount it will cost the team to repair their warplot." Type="Integer" Id="14646"/>
                <Item Name="nDestroyedPlugs" Desc="The number of the team&apos;s plugs that were destroyed during the match." Type="Integer" Id="14647"/>
                <Item Name="nWarCoinsEarned" Desc="The number of Warcoins that the team earned during the match." Type="Integer" Id="14648"/>
            </Param>
        </Event>
        <Event Name="MailBoxActivate" Id="8289" Desc="Fires whenever the player interacts with a mailbox."/>
        <Event Name="MailBoxDeactivate" Id="8290" Desc="Fires whenever the player is interacting with a mailbox and interacts with another targets or moves far enough away from the mailbox."/>
        <Event Name="MailResult" Id="8291" Desc="Fires whenever an error is thrown when the player attempts to perform a mail action">
            <Param Name="eResult" Desc="The reason the operation failed." Type="GameLib.CodeEnumGenericError" Id="14334"/>
        </Event>
        <Event Name="MailAddAttachment" Id="8292" Desc="Fires whenever the player right clicks an item in their inventory to attach it to a mail message." Example="The value from this function can be passed into functions such as Unit:LockInventorySlot().">
            <Param Name="nLocationId" Desc="An id number that represents the item&apos;s location in the player&apos;s inventory." Type="Integer" Id="14330"/>
        </Event>
        <Event Name="TutorialPlaybackEnded" Id="8293" Desc="Fires whenever the VO for a tutorial ends."/>
        <Event Name="ZoneCompletionUpdated" Id="8294" Desc="Fires whenever the player enters a zone, explores a new part of the zone, or completes a challenge, task, datacube, or path mission">
            <Param Name="idZone" Desc="The id number for the zone whose completion percentage was updated." Type="Integer" Id="14661"/>
        </Event>
        <Event Name="ZoneMapPlayerIndicatorUpdated" Id="8295" Desc="Fires whenever a player is added or removed from the Zone Map." Remarks="An example of this is when a player joins or leaves a group.">
            <Param Name="bVisible" Desc="Whether the player is visible on the map or not." Type="Boolean" Id="14664"/>
        </Event>
        <Event Name="AccountPendingItemsUpdate" Id="8296" Desc="Fires when items are added or removed from the pending list for the player&apos;s account inventory."/>
        <Event Name="AccountInventoryUpdate" Id="8297" Desc="Fires when the Account Inventory for the current account has changed."/>
        <Event Name="AccountEntitlementUpdate" Id="8298" Desc="Fires when a change is made to the current account&apos;s entitlements." Example="function AccountInventory:OnAccountEntitlementUpdate()
	if not self.wndMain or not self.wndMain:IsValid() then
		return
	end
	self:RefreshEntitlements()
end"/>
        <Event Name="CharacterEntitlementUpdate" Incomplete="true" Id="8299" NotTested="true" NotStandard="true" InternalNotes="Need a way to test this to see how it works."/>
        <Event Name="WalletUpdate" Id="8300" Desc="Fires whenever the wallet tied to a player&apos;s account updates.  The wallet is used to purchase microtransaction items." NeedProofread="true" NotTested="true" NotStandard="true">
            <Param Name="nAmount" Desc="The amount of currency that was added to the player&apos;s wallet." Type="Integer" Id="14641"/>
        </Event>
        <Event Name="NewCustomerSurveyRequest" Id="8301" Desc="Fires whenever the player is asked to fill out a customer survey.">
            <Param Name="nSurveyCount" Desc="The number of customer surveys the player has queued." Type="Integer" Id="14341"/>
        </Event>
        <Event Name="GenericEvent_PlayerCampStart" Id="8302" Deprecated="true" InternalNotes="This does not appear to be fired from code." Desc="Fired whenever the player starts to log off."/>
        <Event Name="GenericEvent_PlayerExitCancel" Id="8303" Deprecated="true" Desc="Fires when the player cancels the log off timer."/>
        <Event Name="LoginError" Id="8308" Desc="Fires whenever an error is thrown while the player attempts to log in.">
            <Param Name="strErrorMessage" Desc="The error message that should be shown to the player." Type="String" Id="14310"/>
            <Param Name="bHandled" Desc="Whether or not the error was handled before it affected the player." Type="Boolean" Id="14311"/>
        </Event>
        <Event Name="ReputationLevel" Id="9080" Desc="Fires whenever the player reaches a new reputation level with a faction.">
            <Param Name="strReputationLevel" Desc="The name of the reputation level that the player reached." Type="String" Id="14508"/>
            <Param Name="strFactionName" Desc="The name of the faction that the player gained reputation with." Type="String" Id="14509"/>
        </Event>
        <Event Name="ReputationBoundryWarning" Id="9081" Desc="Fires whenever a player has 75% of the reputation required to reach the next reputation level with a faction">
            <Param Name="strReputationLevel" Desc="The name of the reputation level that the player is approaching." Type="String" Id="14503"/>
            <Param Name="strFactionName" Desc="The name of the faction that the player gained reputation with." Type="String" Id="14504"/>
        </Event>
        <Event Name="Group_MentorRelationship" Id="9082" Desc="Fires whenever a player begins mentoring another player.  This event is passed to every member in the group.">
            <Param Name="unitMentor" Desc="The unit that is mentoring the other member." Type="Unit" Id="14077"/>
            <Param Name="unitMentee" Desc="The unit being mentored." Type="Unit" Id="14078"/>
        </Event>
        <Event Name="MatchingPvpInactivityAlert" Id="9083" Desc="Fires at regular intervals if the player is AFK in a PvP match.  This is triggered when the player has 2 minutes, 1 minute, 30 seconds, and 5 second intervals before they are removed from a match.">
            <Param Name="nRemainingTimeMs" Desc="The amount of time before the player is removed from the match, in Milliseconds." Type="Integer" Id="14336"/>
        </Event>
        <Event Name="ToggleGhostModeMap" Id="9449" Deprecated="true" NotTested="true" InternalNotes="Could not get this to fire." Desc="Fired whenever the player presses the button to toggle the ghost mode.  This is only fired for the player."/>
        <Event Name="BankSlotPurchased" Id="9450" Desc="Fires when the player successfully purchases a bank slot." Example="function BankViewer:OnBankSlotPurchased()
	self.wndMain:FindChild(&quot;BankTitleText&quot;):SetText(Apollo.GetString(&quot;Bank_BuySuccess&quot;))
	Apollo.CreateTimer(&quot;BankViewer_NewBagPurchasedAlert&quot;, 12, false)
	self:Build()
end"/>
        <Event Name="CombatLogLAS" Id="9451" Desc="Fires when a player changes their Limited Action Set.">
            <Param Name="unitCaster" Desc="The unit that changed their Limited Action Set.  This should always be the current player." Type="Unit" Id="13666"/>
        </Event>
        <Event Name="CombatLogBuildSwitch" Id="9452" Desc="Fires when the player switches to a different action set.">
            <Param Type="Table" Name="tLogInfo" Id="13524">
                <Item Name="unitCaster" Desc="The unit who changed their build.  Since this event shold only be fired for the current player, this should always be them." Type="Unit" Id="13525"/>
                <Item Name="nNewSpecIndex" Desc="The index of player&apos;s new spec." Type="Integer" Id="13526"/>
            </Param>
        </Event>
        <Event Name="CommodityAuctionFilledPartial" Id="9453" Desc="Fires whenever a buy or sell order on the Commodities Exchange is partially filled by another player.">
            <Param Name="nFilledCount" Desc="How many items in the order were actually bought or sold." Type="Integer" Id="13754"/>
            <Param Name="orderFilled" Desc="The order that was partially filled." Type="CommodityOrder" Id="13756"/>
        </Event>
        <Event Name="CommodityAuctionsDisabled" Id="9454" Desc="Fired when the Commodity Exchange gets disabled or enabled." Remarks="This is only for actions taken by GMs that enable and disable the Commodity Exchange for everyone on the server " NotTested="true">
            <Param Name="bDisabled" Desc="Whether or not this event was fired because the Commodity Exchange is disabled." Type="Boolean" Id="13760"/>
        </Event>
        <Event Name="ItemAuctionBidPosted" Id="9455" Desc="Fires whenever someone places a bid on an item that the player has posted on the Auction House.  This does not apply for items where the person who bought the item selected the &quot;Buy Now&quot; option">
            <Param Name="auctBidOn" Desc="The auction that was bid on." Type="ItemAuction" Id="14283"/>
        </Event>
        <Event Name="ItemAuctionsDisabled" Id="9456" Desc="Fires if the Auction House is disabled or re-enabled by the server.">
            <Param Name="bDisabled" Desc="Whether or not the Auction House is disabled." Type="Boolean" Id="14288"/>
        </Event>
        <Event Name="CREDDExchangeWindowClose" Id="9457" Desc="Fires when the player changes their interaction target from a CREDD Exchange to another NPC, when a player moves far enough away from a CREDD Exchange, or after Event_CancelCREDDExchange() is called."/>
        <Event Name="ToggleCREDDExchangeWindow" Id="9458" Desc="Fires when the player interacts with a CREDD Exchange NPC."/>
        <Event Name="CREDDExchangeInfoResults" Id="9459" Desc="Returns results for the CREDDExchangeLib.RequestExchangeInfo() call from the server.">
            <Param Name="tStats" Type="Table" Id="13835">
                <Item Name="nBuyOrderCount" Desc="The number of CREDD buy orders that are open." Type="Integer" Id="13836"/>
                <Item Name="nSellOrderCount" Desc="The number of CREDD sell orders that are open." Type="Integer" Id="13837"/>
                <Item Type="Table" Name="arBuyOrderPrices" Array="true" Id="13838">
                    <Item Name="monPrice" Desc="The amount that the buy order is paying for CREDD." Type="Money" Id="13839"/>
                    <Item Name="nCount" Desc="The number of CREDD that the buy order tries to buy before it is fulfilled." Type="Integer" Id="13840"/>
                </Item>
                <Item Type="Table" Name="arSellOrderPrices" Array="true" Id="13841">
                    <Item Name="monPrice" Desc="The amount of money the sell order is asking for each CREDD." Type="Money" Id="13842"/>
                    <Item Name="nCount" Desc="The number of CREDD available in the sell order." Type="Integer" Id="13843"/>
                </Item>
            </Param>
            <Param Name="arOrders" Desc="A table with all the CREDD buy and sell orders." Type="CREDDExchangeOrder" Array="true" Id="13844"/>
        </Event>
        <Event Name="PublicEventLeave" Id="9461" Desc="Fires whenever the player leaves a public event area or zone.">
            <Param Name="peEvent" Desc="The public event that the player left." Type="PublicEvent" Id="14452"/>
            <Param Name="eReason" Desc="The reason the event was fired.  This lines up with the PublicEvent.PublicEventParticipantRemoveReason set of int constants." Type="Integer" Id="14453"/>
        </Event>
        <Event Name="MailRead" Id="9462" Desc="Fires whenever the player opens a piece of mail that was previously unread.">
            <Param Name="strMailId" Desc="The identifier for the mail that was read." Type="String" Id="14333"/>
        </Event>
        <Event Name="ProfessionAchievementUpdated" Id="9463" Desc="Fires whenever the player crafts an item that advances a node in the Tradeskill tech tree.">
            <Param Name="achUpdated" Desc="The achievement that go updated." Type="Achievement" Id="14396"/>
        </Event>
        <Function Name="Event_FireGenericEvent" Id="12236" Desc="Fires an event for other addons to handle." Remarks="This will fire any custom event, making it easy to pass information between addons on the same machine.  Any additional parameters passed in to the function will be passed along in the function handler.">
            <Param Name="strEventName" Desc="The event that you want to fire." Type="String" Id="14677"/>
        </Function>
        <Function Name="Event_ToggleQuestLog" Id="12237" Desc="Fires the ToggleQuestLog event."/>
        <Function Name="Event_ToggleCodex" Id="12238" Desc="Fires the ToggleCodex event."/>
        <Function Name="Event_ShowQuestLog" Id="12239" Desc="Fires the ShowQuestLog event.">
            <Param Name="idQuest" Desc="The id number of the quest that the Quest Log should open to." Type="Integer" Id="14678"/>
        </Function>
        <Function Name="Event_HideQuestLog" Id="12240" Desc="Fires the HideQuestLog event."/>
        <Function Name="Event_ToggleAchievementWindow" Id="12241" Desc="Fires the ToggleAchievementWindow event."/>
        <Function Name="Event_CloseVendorWindow" Id="12242" Desc="Fires the CloseVendorWindow event."/>
        <Function Name="Event_CancelVending" Id="12243" Desc="If the player&apos;s current interact target is a Vendor NPC, this function deselects it and fires the CloseVendorWindow event."/>
        <Function Name="Event_CancelTaxiVendor" Id="12244" Desc="If the player&apos;s current interact target is a Taxi NPC, this function deselects it and fires the TaxiWindowClose event."/>
        <Function Name="Event_CancelConverting" Id="12245" Desc="If the player&apos;s current interact target is a resource conversion NPC, this function deselects it and fires the ResourceConversionClose event."/>
        <Function Name="Event_CancelExperimentation" Id="12246" NotStandard="true" InternalNotes="If there is no event tied to it and it does not cancel the mission, what&apos;s the point?" Desc="If the player&apos;s current interact target is a Scientist Experimentation mission, this clears it." Remarks="Currently, this only changes things on the back end.  This function will not cancel the Experimentation mission and has no event tied to it."/>
        <Function Name="Event_CloseTradeskillTrainerWindow" Id="12247" NotStandard="true" InternalNotes="Why do we have this?  It seems less safe than Event_CancelTradeskillTraining." Desc="Calls the CloseTradeskillTrainerWindow event and clears the player&apos;s interact target if it is a tradeskill trainer (which will call CloseTradeskillTrainerWindow a second time)." Remarks="This differs from the Event_CancelTradeskillTraining function in that it is guarenteed to call CloseTradeskillTrainerWindow, even if the player isn&apos;t targeting a tradeskill trainer.  Because of this, Event_CancelTradeskillTraining is a safer function to use."/>
        <Function Name="Event_CancelTradeskillTraining" Id="12248" Desc="If the player&apos;s current interact target is a Tradeskill Trainer NPC, this function deselects it and fires the CloseTradeskillTrainer event."/>
        <Function Name="Event_CloseCraftingWindow" Id="12249" Desc="Calls the CloseCraftingWindow event."/>
        <Function Name="Event_CancelCrafting" Id="12250" Desc="If the player&apos;s current interact target is a crafting station, this function deselects it and fires the CraftingStationClose event."/>
        <Function Name="Event_CloseBankWindow" Id="12251" Desc="Fires the BankWindowClose event."/>
        <Function Name="Event_CancelBanking" Id="12252" Desc="If the player&apos;s current interact target is a player bank, this function deselects it and fires the BankWindowClose event."/>
        <Function Name="Event_ToggleMailWindow" Id="12253" Desc="Fires the ToggleMailWindow event."/>
        <Function Name="Event_ShowTutorial" Id="12254" Desc="Fires the ShowTutorial event." NeedProofread="true" NotTested="true" InternalNotes="Need to test everything from wndAnchor on down since we dont use it anywhere.">
            <Param Name="idTutorial" Desc="The id number of the tutorial that should be shown." Type="Integer" Id="14679"/>
            <Param Name="bInstant" Desc="Determines whether the tutorial should appear instantly or fade in." Type="Boolean" Id="14680"/>
            <Param Name="wndAnchor" Desc="The window that the tutorial is anchored to.  This variable is optional." Type="Window" Id="14685"/>
            <Param Name="nRelativePostion1" Desc="The tutorial&apos;s position in relation to the window it is attached to.  This only needs to be included if wndAnchor is set." Type="Integer" Id="14686"/>
            <Param Name="nRelativePosition2" Desc="tutorial&apos;s position in relation to the window it is anchored to.  This only needs to be included if wndAnchor is set." Type="Integer" Id="14687"/>
            <Param Name="nSpacing" Desc="The amount of spacing between the tutorial and the window it is anchored to.  This only needs to be included if wndAnchor is set." Type="Integer" Id="14688"/>
        </Function>
        <Function Name="Event_CancelEngravingStation" Id="12255" Desc="If the player&apos;s current interact target is an engraving station, this function deselects it and fires the TradeskillEngravingStationClose event."/>
        <Function Name="Event_CancelSettlerHub" Id="12256" Desc="If the player&apos;s current interact target is a Settler Hub, this function deselects it and fires the SettlerHubClose event."/>
        <Function Name="Event_CancelTraining" Id="12257" Deprecated="true" Desc="If the player&apos;s current interact target is a Ability Trainer NPC, this function deselects it and fires the AbilitiesWindowClose event." Remarks="Since Ability Trainers are no longer in game, this function does nothing."/>
        <Function Name="Event_CancelHousingMannequin" Id="12258" Desc="If the player&apos;s current interact target is a Mannequin NPC, this function deselects it and fires the MannequinWindowClose event."/>
        <Function Name="Event_CancelCommodities" Id="12259" Desc="If the player&apos;s current interact target is a Commodities Exchange NPC, this function deselects it and fires the MarketplaceWindowClose event."/>
        <Function Name="Event_CancelAuctionhouse" Id="12260" Desc="If the player&apos;s current interact target is an Auctioneer, this function deselects it and fires the AuctionWindowClose event."/>
        <Function Name="Event_CancelDyeWindow" Id="12261" Desc="If the player&apos;s current interact target is a Stylist NPC, this function deselects it and fires the DyeWindowClose event."/>
        <Function Name="Event_CancelGuildRegistration" Id="12262" Desc="If the player&apos;s current interact target is a Guild Registrar NPC, this function deselects it and fires the GuildRegistrarClose event."/>
        <Function Name="Event_CancelGuildBank" Id="12263" Desc="If the player&apos;s current interact target is a Guild Bank NPC, this function deselects it and fires the GuildBankerClose event."/>
        <Function Name="Event_CancelWarpartyBank" Id="12264" Desc="If the player&apos;s current interact target is a Warparty Bank, this function deselects it and fires the WarPartyBankerClose event."/>
        <Function Name="Event_CancelMail" Id="12265" Desc="If the player&apos;s current interact target is a Mailbox NPC, this function deselects it and fires the MailBoxDeactivate event."/>
        <Function Name="Event_CancelCityDirections" Id="12266" Desc="If the player&apos;s current interact target is a capital city guard, this function deselects it and fires the CityDirectionsClose event."/>
        <Event Name="InstanceSetBusy" Incomplete="true" Id="12267" Deprecated="true" InternalNotes="Seems to be depricated, but more info is needed."/>
        <Event Name="OnInstanceResetResult" Id="12268" Desc="Fires whenever the player attempts to reset an instance of a dungeon or adventure.">
            <Param Name="bSuccessful" Desc="Whether or not the instance was able to reset." Type="Boolean" Id="14343"/>
        </Event>
        <Event Name="ShowInstanceRestrictedDialog" Id="12269" Deprecated="true" NotTested="true" InternalNotes="Unsure of how to get this to fire."/>
        <Event Name="ToggleGuild" Id="12270" Desc="Fired whenever the player presses the keybinding tied to the Guild UI.  This event is only handled by the player who pressed the keybinding."/>
        <Event Name="QuestTrackedChanged" Id="12271" NotStandard="true" InternalNotes="Are path quests really a thing?" Desc="Fires whenever a quest becomes tracked or untracked.">
            <Param Name="queUpdated" Desc="The quest that was updated." Type="Quest" Id="14489"/>
            <Param Name="bTracked" Desc="Whether the quest is now tracked or not." Type="Boolean" Id="14490"/>
            <Param Name="bIsPathQuest" Desc="Whether or not the quest is a path quest." Type="Boolean" Id="14491"/>
        </Event>
        <Event Name="PendingWorldRemovalWarning" Incomplete="true" Id="12272" NotTested="true" InternalNotes="Unsure how to get this to fire."/>
        <Event Name="PendingWorldRemovalCancel" Incomplete="true" Id="12273" NotTested="true" InternalNotes="Unsure how to get this to fire."/>
        <Event Name="LootAssigned" Id="12274" Desc="Fires whenever a master looter assigns loot to a party or raid member.  This event is seen by everyone in the party or raid.">
            <Param Name="itemAssigned" Desc="The item that was assigned to the player." Type="Item" Id="14312"/>
            <Param Name="strWinnerName" Desc="The name of the player that the item was assigned to." Type="String" Id="14313"/>
        </Event>
        <Event Name="DashCastSuccess" Id="12275" Desc="Fires when the player successfully dashes."/>
        <Event Name="CombatLogElderPointsLimitReached" Id="12276" Desc="Fires when the player reaches the daily cap of elder points.">
            <Param Name="unitCaster" Desc="The unit that reached their Elder Point Cap.  This should always be the current player." Type="Unit" Id="13611"/>
        </Event>
        <Event Name="ElderPointsLimitReached" Id="12277" Desc="Fires whenever the player reaches their daily elder point cap."/>
        <Event Name="HousingNamePropertyOpen" Id="12278" Desc="Fires when a player enters their housing plot when it does not have a name.  It is meant to inform the UI that the player needs to name their home."/>
        <Event Name="AccountOperationResults" Id="12279" InternalNotes="Need more info on what this is." NotTested="true" NotStandard="true">
            <Param Name="eOperation" Type="Integer" Id="13316"/>
            <Param Name="eResult" Type="CREDDExchangeLib.CodeEnumAccountOperationResult" Id="13317" Desc="The result of the operation."/>
        </Event>
        <Event Name="CREDDOperationHistoryResults" Id="12280" Desc="Returns the results of the CREDDExchangeLib.GetCREDDHistory() call.">
            <Param Type="Table" Name="tHistory" Array="true" Id="13845">
                <Item Name="eOperation" Desc="The type of operation performed in entry." Type="CREDDExchangeLib.CodeEnumAccountOperation" Id="13846"/>
                <Item Name="bInitiator" Desc="Whether or not the player set up the buy or sell order for this entry." Type="Boolean" Id="13847"/>
                <Item Name="monAmount" Desc="The amount of money exchanged in this entry." Type="Money" Id="13848"/>
                <Item Name="nLogAge" Desc="How long ago the listed operation took place, in days." Type="Float" Id="13849"/>
                <Item Name="nFriendId" Desc="The account friend id number of the other player involved in the transaction.  This only returns a value if an account friend was involved in the transaction." Type="Integer" Id="13850"/>
            </Param>
        </Event>
        <Event Name="ActionSetError" Id="12281" Desc="Fires when the player attempts to save an invalid action set." Example="function Abilities:OnActionSetError(eResult)
	local strMessage = nil	
	if eResult == ActionSetLib.CodeEnumLimitedActionSetResult.InVoid then
		strMessage = Apollo.GetString(&quot;ActionSet_Error_InTheVoid&quot;)
	end

	if strMessage then		
		self:BuildWindow() -- This can happen after the set has &quot;successfully&quot; closed, so bring it back up if closed
		self:HelperShowError(strMessage)
	end
end">
            <Param Name="eResult" Desc="The message describing why there is an error in the current action set." Type="ActionSetLib.CodeEnumLimitedActionSetResult" Id="13355"/>
        </Event>
        <Event Name="CraftingInterrupted" Id="12282" Desc="Fires whenever a crafting attempt is interrupted by the player moving or other external source."/>
        <Event Name="GenericMapShow" Id="12283" NotStandard="true" InternalNotes="Needs to be changed from oNode to mapNode" Desc="Fires when the generic map should be shown to the player.">
            <Param Name="idZoneMap" Desc="The zone map id that should be shown." Type="Integer" Id="13952"/>
            <Param Type="Table" Name="arGenericMapNodeInfo" Array="true" Id="13953">
                <Item Name="bEnabled" Desc="Whether or not the map node is enabled when the map is shown." Type="Boolean" Id="13954"/>
                <Item Name="oNode" Desc="A GenericMapNode that should be placed on the map." Type="GenericMapNode" Id="13955"/>
            </Param>
        </Event>
        <Event Name="GenericMapNodeEnabled" Id="12284" Desc="Fires whenever a GenericMapNode becomes active and is shown on the GenericMap.">
            <Param Name="mapEnabled" Desc="The GenericMapNode that was enabled." Type="GenericMapNode" Id="13951"/>
        </Event>
        <Event Name="GenericMapNodeDisabled" Id="12285" Desc="Fires whenever a GenericMapNode is disabled and hidden on the GenericMap.">
            <Param Name="mapDisabled" Desc="The GenericMapNode that was disabled." Type="GenericMapNode" Id="13950"/>
        </Event>
        <Function Name="Print" Id="12286" Desc="Sends text to the System chat channel.  This text will only be shown on the client that calls this function" Example="Integers and floats can also be passed in as parameters, but other variable types are not output correctly.">
            <Param Name="strOutput" Desc="The string that is output to the System channel." Type="String" Id="15168"/>
        </Function>
        <Function Name="InvokeOptionsScreen" Id="12287" Desc="Opens the Options UI."/>
        <Function Name="GetUnit" Id="12288" Desc="Returns the unit with the specified unit id.">
            <Param Name="idUnit" Desc="The unit&apos;s id number." Type="Integer" Id="15131"/>
            <ReturnValue Type="Unit" Desc="The unit that the id belongs to." Id="15132"/>
        </Function>
        <Function Name="GetMouseOverUnit" Id="12289" Desc="Returns the unit that the player&apos;s mouse is hovering over.">
            <ReturnValue Type="Unit" Desc="The unit that the player&apos;s mouse is hovering over.  If there is no unit there, this returns nil." Id="14728"/>
        </Function>
        <Function Name="BuyItemFromVendor" Id="12290" Desc="Purchases the specified item from the vendor if the player can afford it.">
            <Param Name="idUnique" Desc="The item&apos;s unique id number." Type="Integer" Id="14666"/>
            <Param Name="nQuantity" Desc="How many of the specified item the player wishes to buy." Type="Integer" Id="14667"/>
        </Function>
        <Function Name="SellItemToVendor" Id="12291" Desc="Sells the item at the specified inventory location to the vendor.  If the player is not interacting with a vendor, this function will do nothing.">
            <Param Name="nInventoryLocation" Desc="The index where the item can be found within the player&apos;s inventory." Type="Integer" Id="15170"/>
            <Param Name="nQuantity" Desc="The number of items to sell to the vendor." Type="Integer" Id="15171"/>
        </Function>
        <Function Name="SellItemToVendorById" Id="12292" Desc="Sells the specified item to the vendor.  If the player is not interacting with a vendor, this function will do nothing.">
            <Param Name="idItem" Desc="The unique ID of the item being sold." Type="Integer" Id="15174"/>
            <Param Name="nQuantity" Desc="The number of items being sold." Type="Integer" Id="15175"/>
        </Function>
        <Function Name="BuybackItemFromVendor" Id="12293" Desc="Performs a buyback on an item that was recently sold to a vendor.  This function will only work if the player is within range of a vendor.">
            <Param Name="idItem" Desc="The unique ID of the item that is being bought back from the vendor." Type="Integer" Id="13353"/>
        </Function>
        <Function Name="IsRepairVendor" Id="12294" InternalNotes="This probably isn&apos;t necessary, but maybe it&apos;s worth having?" Desc="Checks if the vendor allows the player to repair.">
            <Param Name="unitVendor" Desc="The vendor that the player is checking." Type="Unit" Id="15151"/>
            <ReturnValue Type="Boolean" Desc="Whether or not the vendor allows players to repair." Id="15152"/>
        </Function>
        <Function Name="RepairItemVendor" Id="12295" Desc="Repairs the item in the specified inventory slot.">
            <Param Name="nInventoryLocation" Desc="The index where the item can be found in the player&apos;s inventory." Type="Integer" Id="15169"/>
        </Function>
        <Function Name="RepairAllItemsVendor" Id="12296" Desc="Repairs all of the player&apos;s damaged items using thier own currency.  If the player is not at a vendor that can repair items, this function will do nothing." Example="Results from this attempt"/>
        <Function Name="IsRechargeVendor" Id="12297" Deprecated="true" NotStandard="true" Desc="This function returns false.  The concept of recharge vendors was cut before the game launched.">
            <ReturnValue Type="Boolean" Desc="False." Id="15150"/>
        </Function>
        <Function Name="RechargeItemVendor" Id="12298" Deprecated="true" NotStandard="true" Desc="Calls a function that does nothing."/>
        <Function Name="Chat_PostDatachronMsg" Id="12299" Desc="Posts a chat message on the Datachron chat channel from the specified unit.">
            <Param Name="idCreature" Desc="the id number of the NPC that spoke the message." Type="Integer" Id="14672"/>
            <Param Name="strText" Desc="The text that was said by the NPC" Type="String" Id="14673"/>
        </Function>
        <Function Name="IsGameValid" Id="12300" Desc="Returns whether or not the game is running.">
            <ReturnValue Type="Boolean" Id="15144"/>
        </Function>
        <Function Name="IsInVehicle" Id="12301" InternalNotes="This seems unnecessary since we have Unit:IsInVehicle()" Desc="Checks if the player is in a vehicle or not." Deprecated="true" NotStandard="true">
            <ReturnValue Type="Boolean" Desc="Whether the player is in a vehicle or not." Id="15147"/>
        </Function>
        <Function Name="IsActionBarSetVisible" Id="12302" Desc="Checks whether or not the specified ActionBarShortcut bar is active.
">
            <Param Name="nBar" Desc="The ActionBarShortuct bar that the function is checking." Type="Integer" Id="15141"/>
            <ReturnValue Type="Boolean" Desc="Whether the bar is shown or not." Id="15142"/>
        </Function>
        <Function Name="IsDemo" Id="12303" Desc="Returns whether the player is playing a demo version of the game.">
            <ReturnValue Type="Boolean" Id="15143"/>
        </Function>
        <Function Name="GetDemoType" Id="12304" Deprecated="true" InternalNotes="This should not be exposed to addon devs.
There is no enum for this." Desc="Returns the type of demo is running.">
            <ReturnValue Type="Integer" Desc="The type of demo that is currently running." Id="14706"/>
        </Function>
        <Function Name="IsInGame" Id="12305" InternalNotes="Is this really necessary?" Desc="Checks if the current player is in the game or not." NotStandard="true">
            <ReturnValue Type="Boolean" Desc="Whether the current player is in the game or not." Id="15145"/>
        </Function>
        <Function Name="Camp" Id="12306" Desc="Causes the player to return to character select."/>
        <Function Name="ExitNow" Id="12307" Desc="If the Exit Game process has already started, this function will force the client to shut down."/>
        <Function Name="CancelExit" Id="12308" Desc="Stops the player&apos;s logout timer and cancels the request to leave the game."/>
        <Function Name="ReportError" Id="12309" Desc="Fires the InvokeErrorDialog event."/>
        <Function Name="ShowInventory" Id="12310" Desc="Fires the ShowInventory event with the specified value.">
            <Param Name="bShow" Desc="Whether the player&apos;s inventory should be shown or hidden." Type="Boolean" Id="15177"/>
        </Function>
        <Function Name="ToggleInventory" Id="12311" Desc="Fires the ToggleInventory event."/>
        <Function Name="GetItemInfo" Id="12312" NotStandard="true" InternalNotes="Why is this a thing?  We should have a more informative function in a library.
Why pass the inventory index that you passed in right back to the user?" Desc="Returns information about the item at a specified inventory index.">
            <Param Name="nInventoryIdx" Desc="The inventory slot where the item is found." Type="Integer" Id="14720"/>
            <ReturnValue Type="Table" Desc="A table containing information about the item found at the specified inventory index." Id="14721">
                <Item Name="itemId" Desc="The item&apos;s unique id." Type="Integer" Id="14722"/>
                <Item Name="name" Desc="The name of the item." Type="String" Id="14723"/>
                <Item Name="icon" Desc="The file name of the item&apos;s icon." Type="String" Id="14724"/>
                <Item Name="StackCount" Desc="The number of items that are in the stack at the specified location." Type="Integer" Id="14725"/>
                <Item Name="InventoryIndex" Desc="The location in the player&apos;s inventory where the item can be found.  Yes, this is the same number that was passed in to the function." Type="Integer" Id="14726"/>
            </ReturnValue>
        </Function>
        <Function Name="ToggleTradeSkillsInventory" Id="12313" Desc="Fires the ToggleTradeSkillsInventory event."/>
        <Function Name="ToggleAbilitiesWindow" Id="12314" Desc="Fires the ToggleAbilitiesWindow event."/>
        <Function Name="ToggleCharacterWindow" Id="12315" Desc="Fires the ToggleCharacterWindow event."/>
        <Function Name="GetAbilitiesWindow" Id="12316" Deprecated="true" InternalNotes="There is no code here!" NotStandard="true"/>
        <Function Name="GetCharacterWindow" Id="12317" Deprecated="true" NotStandard="true" InternalNotes="No code here!"/>
        <Function Name="GetQuestItemCount" Id="12318" Desc="Returns the number of quest items that the player has in their posession.">
            <ReturnValue Type="Integer" Id="15119"/>
        </Function>
        <Function Name="NextQuestItem" Id="12319" InternalNotes="Do we even use CQuestUiItemManager?" Desc="Cycles forward to the next quest item in the list." NotStandard="true"/>
        <Function Name="PreviousQuestItem" Id="12320" Desc="Cycles to the previous item in the quest item list." NotStandard="true" InternalNotes="Do we even use CQuestUiItemManager?"/>
        <Function Name="GetQuestItem" Id="12321" InternalNotes="Why is this a thing?  Don&apos;t we have this functionality in another library?" Desc="Returns the id of the quest item associated with the specified quest objective.">
            <Param Name="idQuest" Desc="The id number for the quest that is being polled." Type="Integer" Id="15116"/>
            <Param Name="nObjective" Desc="The quest objective number that is being polled." Type="Integer" Id="15117"/>
            <ReturnValue Type="Integer" Desc="The id number of the quest item that the specified objective requires." Id="15118"/>
        </Function>
        <Function Name="SetQuestItem" Id="12322" Deprecated="true" NotStandard="true" InternalNotes="Possibly depricated.  I don&apos;t think we use quest items like this anymore." Desc="Picks a specific quest item from a the list.">
            <Param Name="idItem" Desc="The id of the quest item that was selected." Type="Integer" Id="15176"/>
        </Function>
        <Function Name="GetXp" Id="12323" Desc="Returns the amount of XP the player has earned.">
            <ReturnValue Type="Integer" Id="15136"/>
        </Function>
        <Function Name="GetXpToCurrentLevel" Id="12324" Desc="The amount of XP required to reach the player&apos;s current level.">
            <ReturnValue Type="Integer" Id="15140"/>
        </Function>
        <Function Name="GetXpToNextLevel" Id="12325" Desc="The amount of XP required for the player to reach the next level."/>
        <Function Name="GetXpPercentToNextLevel" Id="12326" Desc="Calculates the amount of XP the player needs to reach their next level, then returns the percentage of that XP that they have not yet earned." Remarks="This does a basic calculation of 

(XPToNextLevel - XPToCurrentLevel) / (CurrentXP - XPToCurrentLevel)">
            <ReturnValue Type="Float" Id="15138"/>
        </Function>
        <Function Name="GetRestXp" Id="12327" Desc="Returns the amount of rest XP/EP the player has accumulated." NotStandard="true" InternalNotes="Don&apos;t we have a function in unit for this?"/>
        <Function Name="GetRestXpKillCreaturePool" Id="12328" Desc="Returns the point where the player will run out of their rested XP/EP bonus given their current pool.">
            <ReturnValue Type="Integer" Desc="The amount of bonus EP the player will get before their rest bonus runs out." Id="15124"/>
        </Function>
        <Function Name="GetElderPoints" Id="12329" Desc="Returns the number of elder points the player has.">
            <ReturnValue Type="Integer" Desc="The number of elder points the player currently has." Id="14707"/>
        </Function>
        <Function Name="GetPeriodicElderPoints" Id="12330" Desc="Returns the number of elder points that the player has earned towards their daily maximum amount.">
            <ReturnValue Type="Integer" Id="15115"/>
        </Function>
        <Function Name="ExitGame" Id="12331" Desc="Attempts to start the process of leaving the game and shutting down the client."/>
        <Function Name="GetCurrentSubZoneName" Id="12332" Desc="Returns the name for the sub-zone that the player is currently in.">
            <ReturnValue Type="String" Desc="The name of the sub-zone that the player is in." Id="14700"/>
        </Function>
        <Function Name="GetCurrentZoneName" Id="12333" Desc="Returns the name for the sub-zone that the player is currently in." InternalNotes="This is the exact same as GetCurrentSubZoneName?!?  why expose it twice?" Deprecated="true" NotStandard="true">
            <ReturnValue Type="String" Id="14699"/>
        </Function>
        <Function Name="GetConColor" Id="12334" Desc="Determines the color used for the level difference between a given level and the player&apos;s level.">
            <Param Name="nCompareLevel" Desc="The level that the player&apos;s level is compared to." Type="Integer" Id="14695"/>
            <ReturnValue Type="String" Desc="The color code representing the difference between the given level and the player&apos;s level." Id="14696"/>
        </Function>
        <Function Name="RequestReloadUI" Id="12335" Desc="Reloads the UI."/>
        <Function Name="GetDemoTimeRemaining" Id="12336" Deprecated="true" InternalNotes="This should not be shown to addon developers." Desc="Returns the amount of time before a demo is over.">
            <ReturnValue Type="Float" Desc="The amount of time remaining in the demo, in seconds." Id="14705"/>
        </Function>
        <Function Name="GetResolutionCount" Id="12337" Desc="The number of resultions available using the GetNthResolution function." InternalNotes="Seriously?  WTF is this?  Why are we returning a hardcoded value?" Deprecated="true" NotStandard="true">
            <ReturnValue Type="Integer" Desc="3!" Id="15122"/>
        </Function>
        <Function Name="GetNthResolution" Id="12338" InternalNotes="If we&apos;re actually going to use this, we should expand it.  Otherwise, cut it." Desc="Returns one of three resolutions that were used in early development." Remarks="This should not be used, as we have other ways of getting a more accurate look at the client&apos;s resolution." Example="The table that is polled has three resolutions that fill indexes 0-2.  These are:

0 = &quot;1024x768&quot;
1 = &quot;1280x1024&quot;
2 = &quot;1600x1200&quot;" Deprecated="true">
            <ReturnValue Type="String" Desc="The resolution value at the specified index." Id="14729"/>
            <Param Name="nIndex" Desc="The index of the resolution that is being polled." Type="Integer" Id="15114"/>
        </Function>
        <Function Name="String_GetString" Id="12339" InternalNotes="This seems like a precursor to Apollo.GetString().  We should probably use one or the other." Desc="Returns a localized string using the specified string id.  ">
            <Param Name="idString" Desc="The id number for the string that this should return." Type="Integer" Id="15178"/>
        </Function>
        <Function Name="String_GetWeaselString" Id="12340" NeedProofread="true" InternalNotes="Needs more localization documentation" Desc="Concatinates localized strings that contain tokens with other parameters." Example="Localized strings can have a number of different tokens that are used to create specialized strings.  Input tokens always begin with $ and include the parameter number that goes in that location.
For example:
$1n will add the first parameter at this location and expects a string.
$5f will add the fifth parameter at this location and expects a floating point value.

Input token key:
n = string
c = integer
f[0-9] = floating point number that is limited to 0-9 decimal places.  If the number of decimal places is not set, it will not use a limit.

^ = capitalize the next string
~ = uncapitalize the next string

m = force pluralization of the string (note, this requires the string to have pluralization text, which is explained below)
+ = show the count and the pluralized name.  This requires a table with &quot;count&quot; (the number of the thing) and &quot;name&quot; (the string to pluralize) as variables within the table.
# = pluralize the string based on the &quot;count&quot;, but do not show the count.  This requires a table with &quot;count&quot; (the number of the thing) and &quot;name&quot; (the string to pluralize) as variables within the table.
Example:

 EnumName: CRB_Knife
 string: knife{p:knives}
 
EnumName: CRB_Stab_Em_With_Your 
string: Stab ‘em with your $#(1) 
 
EnumName: CRB_Stab_Em_With_Your_Count
string: Stab ‘em with your $+(1)
 
Lua: 
local nNumberOfKnives = 1 

local tActor1 = 
{
   [&quot;count&quot;] = nNumberOfKnives, 
    [&quot;name&quot;] = Apollo.GetString(&quot;CRB_Knife&quot;) 
} 

Print(String_GetWeaselString(Apollo.GetString(&quot;CRB_Stab_Em_With_Your&quot;), tActor1))
tActor1[“count”] = 2
 
Print(String_GetWeaselString(Apollo.GetString(&quot;CRB_Stab_Em_With_Your&quot;), tActor1)) 
Print(String_GetWeaselString(Apollo.GetString(“CRB_Stab_Em_With_Your_Count”), tActor1))
 
Output:
Stab ‘em with your knife
Stab ‘em with your knives
Stab ‘em with your 2 knives">
            <Param Name="idString" Desc="The id number of the base string." Type="Integer" Id="15179"/>
            <Param Name="oParameter" Desc="The function can take in any number or type of parameter depending on what the string needs.  Every variable after the idString needs to match the type and order that the string is expected." Type="Any" Id="15180"/>
            <ReturnValue Type="String" Desc="The final string after the variables are added." Id="15181"/>
        </Function>
        <Function Name="Interaction_Result" Id="12341" Deprecated="true" Desc="Depricated.  Used to poll whether we passed or failed the interaction result"/>
        <Function Name="GetGameString" Id="12342" Desc="Searches for strings set up by the game client and returns the value for the specified string." Remarks="Currently, the only string that can be found here is ZoneName.  This returns the name of the subzone that the player is in.">
            <Param Name="strVarName" Desc="The name of the variable that the function is attempting to get the value of." Type="String" Id="14715"/>
            <Param Name="strDefault" Desc="The default string that the function should return if the variable could not be found.  This defaults to an empty string." Type="String" Id="14718"/>
            <ReturnValue Type="String" Desc="The value of the specified variable, or the default value if the variable could not be found." Id="14719"/>
        </Function>
        <Function Name="GetGameInt" Id="12343" Desc="Searches for integers set up by the game client and returns the value for the specified integer." Remarks="Currently, the only variable that works with this function is FrameCount, which displays the number of frames since the player logged in.">
            <Param Name="strVarName" Desc="The name of the variable that the function is attempting to get the value of." Type="String" Id="14712"/>
            <Param Name="nDefault" Desc="The default value that should be returned if the variable is not found.  This defaults to 0." Type="Integer" Id="14713"/>
            <ReturnValue Type="Integer" Desc="The value of the specified variable, or the default value if the variable was not found." Id="14714"/>
        </Function>
        <Function Name="GetGameFloat" Id="12344" Desc="Searches for floats set up by the game client and returns the value for the specified float." Remarks="There are currently no values that are accessible via this function.">
            <Param Name="strVarName" Desc="The name of the float that was passed to the client." Type="String" Id="14709"/>
            <Param Name="fDefault" Desc="The default value that will be returned if no variable is found.  This value defaults to 0.0f if no value is passed in." Type="Float" Id="14710"/>
            <ReturnValue Type="Float" Desc="The value of the specified variable, or the default if no variable is found." Id="14711"/>
        </Function>
        <Function Name="Creature_GetName" Id="12345" Desc="Returns the name of the creature with the specified ID.">
            <Param Name="idCreature" Desc="The creature&apos;s Id number." Type="Integer" Id="14674"/>
            <ReturnValue Type="String" Desc="The name of the creature with the given ID." Id="14675"/>
        </Function>
        <Function Name="PlayerTicket_GetSubtype" Id="12347" Desc="Gets a list of all the subcategories under a specific player ticket category.">
            <ReturnValue Type="Table" Desc="An array of subcategory ids and names for the specified category." Array="true" Id="17010">
                <Item Name="index" Desc="The ticket subcategory&apos;s id number." Type="Integer" Id="17011"/>
                <Item Name="localizedText" Desc="The name of the subcategory." Type="String" Id="17012"/>
            </ReturnValue>
            <Param Name="idParentCategory" Desc="The function will return all of the subcategories for the parent category with this id." Type="Integer" Id="17013"/>
        </Function>
        <Function Name="PlayerTicket_GetErrorTypeList" Id="12348" Desc="Gets a list of categories for CS tickets, along with a localized name for the category." NotStandard="true" InternalNotes="This should all be in a table somewhere.  This seems like a terrible way to do this.">
            <ReturnValue Type="Table" Desc="An array of tables containing the category IDs and localized names." Array="true" Id="15165">
                <Item Name="index" Desc="The category&apos;s id number." Type="Integer" Id="15166"/>
                <Item Name="localizedText" Desc="The localized name of the category." Type="String" Id="15167"/>
            </ReturnValue>
        </Function>
        <Function Name="GetDeathPenalty" Id="12349" Desc="Returns the amount of time before the player can select a resurrection option.">
            <ReturnValue Type="Integer" Desc="The amount of time before the player can resurrect, in milliseconds." Id="14704"/>
        </Function>
        <Function Name="GetWakeHereTime" Id="12350" Desc="The amount of time remaining until the player can resurrect at their current location.">
            <ReturnValue Type="Integer" Desc="The amount of time before the player can use the &quot;Wake Here&quot; resurrect option, in milliseconds." Id="15133"/>
        </Function>
        <Function Name="GetForceRezTime" Id="12351" Desc="Returns the amount of time before the player is forced to resurrect.">
            <ReturnValue Type="Integer" Desc="The amount of time before they are forced to resurrect, in millisenonds." Id="14708"/>
        </Function>
        <Function Name="GetRezIsDead" Id="12352" Deprecated="true" InternalNotes="This seems like it&apos;s replaced with the Unit:IsDead function." Desc="Returns whether or not the player is dead.">
            <ReturnValue Type="Boolean" Id="15126"/>
        </Function>
        <Function Name="GetRezCost" Id="12353" Desc="The amount of copper required for the &quot;Rez Here&quot; resurrection option.">
            <ReturnValue Type="Integer" Id="15125"/>
        </Function>
        <Function Name="GetRezOptionWakeHere" Id="12354" Desc="Returns whether the player has the option to resurrect at their current location or not.">
            <ReturnValue Type="Boolean" Id="15130"/>
        </Function>
        <Function Name="GetRezOptionHolocrypt" Id="12355" Desc="Returns whether the player has the option to resurrect at the nearest holocrypt or not."/>
        <Function Name="GetRezOptionExitInstance" Id="12356" Desc="Returns whether the player has the option to resurrect outside the instance or not.">
            <ReturnValue Type="Boolean" Id="15129"/>
        </Function>
        <Function Name="GetRezOptionAcceptCasterRez" Id="12357" Desc="Returns whether the player was resurrected by another player or not.">
            <ReturnValue Type="Boolean" Id="15128"/>
        </Function>
        <Function Name="Pet_GetValidStances" Id="12358" InternalNotes="We have an enum for this.  Why is this a thing?
As far as I know, this is the only bit flag we&apos;re returning anywhere." Desc="Checks the list of stances available for the specified pet." NotStandard="true">
            <Param Name="idUnit" Desc="The id number of the pet that is being checked." Type="Integer" Id="15157"/>
            <ReturnValue Type="Integer" Desc="The bit flag for the stances that are available to the pet." Id="15159"/>
        </Function>
        <Function Name="Pet_GetStance" Id="12359" InternalNotes="Shouldn&apos;t this be in unit?  Also, it should be using enums instead of mapping it itself." Desc="Returns the specified pet&apos;s stance.">
            <Param Name="idUnit" Desc="The id number of the pet that is being checked." Type="Integer" Id="15155"/>
            <ReturnValue Type="GameLib.CodeEnumPetStance" Desc="The pet&apos;s current stance." Id="15156"/>
        </Function>
        <Function Name="Pet_SetStance" Id="12360" InternalNotes="Once again, WHY DO WE HAVE A STATIC MAP?!?  WE HAVE AN ENUM FOR THIS!!!
This should probably be in Unit." NotStandard="true" Desc="Sets the stance for a specified unit.">
            <Param Name="idUnit" Desc="The id number for the pet whose stance is being set.  Setting this to 0 will set the stance for all of the player&apos;s pets." Type="Integer" Id="15160"/>
            <Param Name="eStance" Desc="The stance that the pet will be set to." Type="GameLib.CodeEnumPetStance" Id="15161"/>
        </Function>
        <Function Name="Cinematics_Play" Id="12361" Desc="Starts a cinematic."/>
        <Function Name="Cinematics_Cancel" Id="12362" NotTested="true" InternalNotes="Needs testing." Desc="Cancels a cutscene while it is displayed."/>
        <Function Name="GetMapTrackedUnitData" Id="12363" Deprecated="true" NotTested="true" InternalNotes="Still have no clue how to use tracked units."/>
        <Event Name="ShowCredits" Id="12364" InternalNotes="Not player facing. This is all in pregame." NotImplemented="true" Desc="Fired in response to PreGameLib.GetCredits()."/>
        <Event Name="TalentsChanged" Id="12938" Deprecated="true" NotStandard="true" InternalNotes="Not called in code."/>
        <Event Name="TalentRespecPointsChanged" Id="12939" Deprecated="true" InternalNotes="Does not appear to be called anywhere in code." NotStandard="true"/>
        <Event Name="ToggleStuckWindow" Desc="Fires whenever the player types /stuck while in game or the UI calls ShowStuckUI().  This event will only fire for the player who used the command or whose UI called the function." Id="14608"/>
        <Event Name="HousingButtonLandscape" Incomplete="true" Id="14730"/>
        <Event Name="HousingButtonRemodel" Incomplete="true" Id="14731"/>
        <Event Name="HousingButtonCrate" Incomplete="true" Id="14732"/>
        <Event Name="HousingButtonVendor" Incomplete="true" Id="14733"/>
        <Event Name="HousingButtonList" Incomplete="true" Id="14734"/>
        <Event Name="HousingExitEditMode" Incomplete="true" Id="14735"/>
        <Function Name="Event_CancelCREDDExchange" Id="14736" Desc="Forces the CREDD Exchange window to close." Example="This function will cause the Event_CREDDExchangeWindowClose event to fire."/>
        <Event Name="PlayerEnteredWorld" Incomplete="true" Id="14737"/>
        <Event Name="QuestPeriodicReset" Incomplete="true" Id="14738"/>
        <Event Name="AppearanceChanged" Id="14739" Desc="Fires whenever the player updates a costume, purchases a dye job on their equipment, or purchases a character customization change."/>
        <Event Name="Group_LootRulesChanged" Incomplete="true" Id="14740"/>
        <Event Name="Group_FlagsChanged" Incomplete="true" Id="14741"/>
        <Event Name="Group_ReadyCheckCooldownExpired" Incomplete="true" Id="14742"/>
        <Event Name="FriendshipPostRemove" Incomplete="true" Id="14743"/>
        <Event Name="CombatLogLifeSteal" Incomplete="true" Id="14744"/>
        <Event Name="CharacterEldanAugmentationsReset" Id="14745" Deprecated="true" NotImplemented="true" InternalNotes="Does not seem to fire when resetting the player&apos;s AMPs.  It is most likely depricated."/>
        <Event Name="PublicEventUnitUpdate" Incomplete="true" Id="14746"/>
        <Event Name="UnitGibbed" Incomplete="true" Id="14747"/>
        <Event Name="CREDDRedeemResult" Incomplete="true" Id="14748"/>
        <Function Name="GetResourceCooldownPercent" Id="14749" Deprecated="true" InternalNotes="There&apos;s no code here!  Why is it still in code?"/>
        <Event Name="ApplicationWindowSizeChanged" Incomplete="true" Id="14750"/>
        <Event Name="CommunityRegistrarOpen" Incomplete="true" Id="16408" InternalNotes="This is new...haven&apos;t seen anything about this."/>
        <Event Name="CommunityRegistrarClose" Incomplete="true" Id="16409" InternalNotes="This is new...haven&apos;t seen anything about this."/>
        <Event Name="LootTakenBy" Incomplete="true" Id="16410"/>
        <Event Name="LootBindcheck" Id="16411" Desc="Fires whenever the player attempts to loot an item that is Bind on Pickup while in a group.">
            <Param Type="Table" Name="tLootInfo" Desc="A table that contains information about the Bind on Pickup items that the player is trying to loot." Id="17014">
                <Item Name="nLootId" Desc="A unique identifier for the item that was dropped." Type="Integer" Id="17015"/>
                <Item Name="itemDrop" Desc="The item that was dropped." Type="Item" Id="17016"/>
            </Param>
        </Event>
        <Function Name="Event_CancelContractBoard" Incomplete="true" Id="17017"/>
        <Function Name="Event_CancelEldanForge" Incomplete="true" Id="17018"/>
        <Function Name="Event_CancelBarber" Incomplete="true" Id="17019"/>
        <Event Name="UpdateResurrectDialog" Incomplete="true" Id="17020"/>
        <Event Name="ContractStateChanged" Incomplete="true" Id="17021"/>
        <Event Name="ContractObjectiveUpdated" Incomplete="true" Id="17022"/>
        <Event Name="ContractGoodQualityChanged" Incomplete="true" Id="17023"/>
        <Event Name="ContractBoardOpen" Incomplete="true" Id="17024"/>
        <Event Name="ContractBoardClose" Incomplete="true" Id="17025"/>
        <Event Name="EldanForgeOpen" Incomplete="true" Id="17026"/>
        <Event Name="EldanForgeClose" Incomplete="true" Id="17027"/>
        <Event Name="BarberOpen" Id="17028" Deprecated="true" DevOnly="true" InternalNotes="This is a depricated event used for Character Customization."/>
        <Event Name="BarberClose" Id="17029" Deprecated="true" DevOnly="true" InternalNotes="This is a depricated event that was for Character Customization"/>
        <Event Name="ContractFloater" Incomplete="true" Id="17030"/>
        <Event Name="PlayerRealmName" Incomplete="true" Id="17031"/>
        <Event Name="RecruitmentDescription" Incomplete="true" Id="17032"/>
        <Event Name="RecruitmentDemands" Incomplete="true" Id="17033"/>
        <Event Name="RecruitmentMinLevel" Incomplete="true" Id="17034"/>
        <Event Name="GuildClassification" Incomplete="true" Id="17035"/>
        <Event Name="RecruitmentGuildsList" Incomplete="true" Id="17036"/>
        <Event Name="RecruitmentGuildsUpdated" Incomplete="true" Id="17037"/>
        <Event Name="RecruitmentUnsubscribed" Incomplete="true" Id="17038"/>
        <Event Name="RecruitmentDetailedGuildInfo" Incomplete="true" Id="17039"/>
        <Event Name="RecruitmentDetailedInfoRequestsUnblocked" Incomplete="true" Id="17040"/>
        <Event Name="EldanForgeResult" Incomplete="true" Id="17041"/>
        <Event Name="ToggleItemContextMenu" Incomplete="true" Id="17042"/>
        <Event Name="PublicEventBombStatus" Incomplete="true" Id="17043"/>
        <Event Name="PublicEventBombDropped" Incomplete="true" Id="17044"/>
        <Event Name="CharacterRecustomizationResult" Incomplete="true" Id="17045"/>
        <Event Name="ICCommReceiveThrottled" Incomplete="true" Id="17181"/>
        <Event Name="RewardTracksLoaded" Incomplete="true" Id="17182"/>
        <Event Name="RewardTrackUpdated" Incomplete="true" Id="17183"/>
        <Event Name="RewardTrackActive" Incomplete="true" Id="17184"/>
        <Event Name="CostumeUnlockResult" Incomplete="true" Id="17252"/>
        <Event Name="CostumeForgetResult" Incomplete="true" Id="17253"/>
        <Event Name="CostumeSaveRequested" Incomplete="true" Id="17254"/>
        <Event Name="ShowQuestSynopsis" Incomplete="true" Id="30" Deleted="true"/>
        <Event Name="SubMissionRequest" Incomplete="true" Id="33" Deleted="true"/>
        <Event Name="NextActionBar" Incomplete="true" Id="41" Deleted="true"/>
        <Event Name="ServerBroadcastMessage" Incomplete="true" Id="93" Deleted="true"/>
        <Event Name="ErrorDialogSetSelection" Incomplete="true" Id="96" Deleted="true"/>
        <Event Name="ProgressClickWindowDisplay" Incomplete="true" Id="139" Deleted="true"/>
        <Event Name="TurnOnClickableTab" Incomplete="true" Id="141" Deleted="true"/>
        <Event Name="ProgressClickShowYesNoWindow" Incomplete="true" Id="152" Deleted="true"/>
        <Event Name="ProgressClickSetInstructions" Incomplete="true" Id="154" Deleted="true"/>
        <Event Name="ProgressClickSetTapButtonText" Incomplete="true" Id="156" Deleted="true"/>
        <Event Name="SealMechanicUpdate" Incomplete="true" Id="171" Deleted="true"/>
        <Event Name="OnSoldierHoldoutStartDefault" Incomplete="true" Id="185" Deleted="true"/>
        <Event Name="OnSoldierHoldoutStartDefend" Incomplete="true" Id="191" Deleted="true"/>
        <Event Name="OnSoldierHoldoutStartTimed" Incomplete="true" Id="197" Deleted="true"/>
        <Event Name="OnSoldierHoldoutStartTimedDefend" Incomplete="true" Id="202" Deleted="true"/>
        <Event Name="OnSoldierHoldoutNextWave" Incomplete="true" Id="207" Deleted="true"/>
        <Event Name="OnSoldierHoldoutEnd" Incomplete="true" Id="209" Deleted="true"/>
        <Event Name="OnSettlerHubUpdated" Incomplete="true" Id="212" Deleted="true"/>
        <Event Name="OnLogOut" Incomplete="true" Id="226" Deleted="true"/>
        <Event Name="PvpObjectivesUpdated" Incomplete="true" Id="241" Deleted="true"/>
        <Event Name="NewMail" Incomplete="true" Id="242" Deleted="true"/>
        <Event Name="OnChange_World" Incomplete="true" Id="257" Deleted="true"/>
        <Event Name="OnForceResurrect" Incomplete="true" Id="258" Deleted="true"/>
        <Event Name="FriendshipRequestWithdrawn" Incomplete="true" Id="6785" Deleted="true"/>
        <Event Name="ChatBanList" Incomplete="true" Id="6950" Deleted="true"/>
        <Event Name="CraftingExtractItem" Incomplete="true" Id="6998" Deleted="true"/>
        <Event Name="ColorChanged" Incomplete="true" Id="7008" Deleted="true"/>
        <Event Name="ReadyToEnter" Incomplete="true" Id="7010" Deleted="true"/>
        <Event Name="ShowHello" Incomplete="true" Id="7011" Deleted="true"/>
        <Event Name="TriggerDemoOptions" Incomplete="true" Id="7012" Deleted="true"/>
        <Event Name="EnteredCombat" Incomplete="true" Id="7013" Deleted="true"/>
        <Event Name="RealmListChanged" Incomplete="true" Id="7014" Deleted="true"/>
    </Global>
    <Library Name="Apollo" Id="267" Desc="A library that primarily contains system-level functionality, such as registering events, controling addons, detecting key presses, and manipulating console variables.">
        <Event Name="TextMessage" Id="268" Deprecated="true" InternalNotes="The only place we were calling this has been commented out.  It is no longer in use."/>
        <Event Name="SystemKeyDown" Id="271" Desc="Fires whenever the player presses a key.">
            <Param Name="nKey" Type="Integer" Id="272" Desc="The ASCII code for the key that was pressed."/>
        </Event>
        <Event Name="DragDropSysBegin" Id="273" Desc="Fires when the player starts a drag-drop operation by holding the mouse button down while the cursor is over a BagWindow or ActionBarButton.">
            <Param Name="wndSource" Type="Window" Id="274" Desc="The window that the object originated from."/>
            <Param Name="strType" Type="String" Id="275" Desc="The type of object that will be affected by the drag-drop operation.  This should either be &quot;DDBagItem&quot; for items and &quot;DDSpellbookItem&quot; for spells."/>
            <Param Name="nStartLocation" Type="Integer" Id="276" Desc="The location where the object was grabbed."/>
        </Event>
        <Event Name="DragDropSysEnd" Id="277" Desc="Fires whenever the player lets go of the mouse button during a drag-drop operation.">
            <Param Name="strType" Type="String" Id="278" Desc="The type of object that was dragged by the operation."/>
            <Param Name="nEndLocation" Type="Integer" Id="279" Desc="The location where the object was dropped."/>
        </Event>
        <Event Name="LuaError" Id="280" Desc="Fires whenever an error is thrown in an addon&apos;s code." Remarks="It&apos;s worth noting that the information in tAddonInfo may not reflect the addon that actually caused the error.  If the source of the error is an addon that is hooking into a function in another addon, tAddonInfo will contain information on the addon that was hooked into, not the addon that was the source of the error.">
            <Param Name="tAddonInfo" Type="Table" Id="281" Desc="Information on the addon that threw the error.">
                <Item Name="eStatus" Desc="The addon&apos;s current status." Type="Integer" Id="15484"/>
                <Item Name="strName" Desc="The name of the addon where the error was thrown." Type="String" Id="15485"/>
                <Item Name="bCarbine" Desc="Whether the addon that threw the error is a Carbine addon or a 3rd party addon." Type="Boolean" Id="15486"/>
                <Item Name="strAuthor" Desc="The addon&apos;s author." Type="String" Id="15487"/>
                <Item Name="arErrors" Desc="An array of strings that contain the error messages." Type="String" Array="true" Id="15488"/>
            </Param>
            <Param Name="strError" Type="String" Id="282" Desc="The error messages for the Lua error."/>
            <Param Name="bCanIgnore" Type="Boolean" Id="283" Desc="Whether the player can ignore the error or not."/>
        </Event>
        <Event Name="ModuleLoaded" Id="284" Desc="Fires when every addon has finished loading."/>
        <Event Name="ModuleRestore" Id="285" Deprecated="true" InternalNotes="This does not seem to be fired anywhere in code."/>
        <Event Name="SaveModules" Id="286" Desc="Fires immediately before any addon calls its OnSave() function."/>
        <Function Name="StartTimer" Desc="Starts a timer that is not currently running." Id="287" Remarks="Timers created by Apollo are being replaced by ApolloTimer objects in the default UI.  That does not mean that this functionality is being depricated.">
            <Param Name="strTimerName" Type="String" Id="288" Desc="The name of the timer that the function should start."/>
        </Function>
        <Function Name="StopTimer" Desc="Stops a timer that is currently running." Id="289">
            <Param Name="strTimerName" Type="String" Id="290" Desc="The name of the timer that the function should stop."/>
        </Function>
        <Function Name="RegisterSlashCommand" Desc="Registers a slash command with Apollo and sets up a function to handle the event fired when the command is used." Id="291">
            <Param Name="strCommand" Type="String" Id="292" Desc="The slash command that will get registered with Apollo.  This string should contain everything that comes after the / in the command."/>
            <Param Name="strFunction" Type="String" Id="293" Desc="The function that will handle the event that gets fired when the slash command is used."/>
            <Param Name="tAddonHandler" Type="Table" Default="LUA_NOREF" Id="294" Desc="The instance of the addon that will handle the event fired by the slash command.  This is usually the addon&apos;s &quot;self&quot;."/>
        </Function>
        <Function Name="RegisterEventHandler" Desc="Matches an event that is fired with the Lua function that will handle the event." Id="295">
            <Param Name="strEventName" Type="String" Id="296" Desc="The name of the event to be handled."/>
            <Param Name="strFunctionName" Type="String" Id="297" Desc="The name of the function that will be called when the event is fired."/>
            <Param Name="tLuaEventHandler" Type="Table" Default="LUA_NOREF" Id="298" Desc="The addon&apos;s &quot;self&quot;."/>
        </Function>
        <Function Name="RegisterTimerHandler" Desc="Pairs a timer with a function that will be called whenever the timer&apos;s interval expires." Id="299" Remarks="The default UI will replace RegisterTimerHandler calls with  ApolloTimers in the near future, but this method of using timers will not be depricated.">
            <Param Name="strTimerName" Type="String" Id="300" Desc="The name of the timer that the function will pair with the handler function."/>
            <Param Name="strFunction" Type="String" Id="301" Desc="The function that will be called whenever the timer&apos;s interval expires."/>
            <Param Name="tAddon" Type="Table" Default="LUA_NOREF" Id="302" Desc="The instance of the addon that will handle the event fired when the timer&apos;s interval expires.  This is usually the addon&apos;s &quot;self&quot;."/>
        </Function>
        <Function Name="CreateTimer" Desc="Creates a timer that can be run from Lua." Remarks="Newly created timers are in the Running state and must be manually stopped.  Timers created this way have no functionality without a timer handler that listens for when the timer fires.  These timers are not destroyed when they fire.

While Apollo&apos;s timer functionality still works, we are moving more towards using ApolloTimers.  That doesn&apos;t mean that this functionality is or will become depricated any time soon (we&apos;ll let you know when it does), but you will see far fewer instances of us using them in code." Id="303" Example="function TimerExample:OnLoad()
    Apollo.RegisterTimerHandler(&quot;TestTimer&quot;, &quot;OnTestTimer&quot;, self)
    Apollo.CreateTimer(&quot;TestTimer&quot;, 1.0, false)
end

function TimerExample:OnTestTimer()
    Print(&quot;Timer has fired&quot;)
end">
            <Param Name="strTimerName" Type="String" Id="304" Desc="The name of the timer."/>
            <Param Name="nInterval" Type="Integer" Id="305" Desc="How often the timer will fire."/>
            <Param Name="bContinuous" Type="Boolean" Default="true" Id="306" Desc="Whether the timer will constantly run or only fire once before needing to be restarted."/>
        </Function>
        <Function Name="ParseInput" Desc="Parses the input for slash commands.  If the first character is not a &quot;/&quot;, it will not recognize the text as a slash command and will print it to the Say chat channel." Id="307">
            <ReturnValue Type="String" Id="308" Desc="Returns the string for Console_CommandNotFound if the slash command that was passed in was invalid.  Otherwise, this returns an empty string."/>
            <Param Name="strInput" Type="String" Id="309" Desc="The string that the function will parse."/>
        </Function>
        <Function Name="LoadSprites" Desc="Loads a sprite set." Id="310" InternalNotes="Really need to figure out what exactly this does." NeedProofread="true" Incomplete="true">
            <Param Name="strFile" Type="String or XmlDoc" Id="311" Desc="The name of the form that contains the sprites, or the XmlDoc that contains them."/>
            <Param Name="strDoc" Type="String" Id="312" Desc="The name of the spriteDoc.  This variable is optional."/>
        </Function>
        <Function Name="LoadAnimations" Desc="Attempts to load a specific animation file." Id="313" InternalNotes="Does this still have a use?" NotTested="true" NotImplemented="true">
            <ReturnValue Type="Boolean" Id="314" Desc="Whether the animation was successfully loaded or not."/>
            <Param Name="strFileName" Type="String" Id="315" Desc="The file name of the animation that the function will try to load."/>
        </Function>
        <Function Name="LoadGlobalAnchors" Id="322" NotTested="true" InternalNotes="Unused, so unsure of how/when we&apos;d need this." Desc="Loads the global anchors for the specified file."/>
        <Function Name="BeginDragDrop" Id="324" Desc="Starts a drag-drop operation on the item that the player clicked on.">
            <Param Name="wndSource" Type="Window" Id="325" Desc="The window where the operation began."/>
            <Param Name="strType" Type="String" Id="326" Desc="The type of object that is being dragged in the operation.  This can be either &quot;DDBagItem&quot; or &quot;DDSpellbookItem&quot;."/>
            <Param Name="strSprite" Type="String" Id="327" Desc="The file name of the sprite that replaces the cursor during the operation."/>
            <Param Name="nStartLocation" Type="Integer" Id="328" Desc="The location where the drag-drop operation started."/>
        </Function>
        <Function Name="BeginClickStick" Id="329" Desc="Causes the item or spell that the player clicked on to stick to the cursor until the player clicks again.  It is treated like drag-drop functionality, only the player does not have to hold a button until the end of the operation.">
            <Param Name="wndSource" Type="Window" Id="330" Desc="The window where the click-stick operation began."/>
            <Param Name="strType" Type="String" Id="331" Desc="The type of item that the click stick is affecting.  This value can be either &quot;DDBagItem&quot; or &quot;DDSpellbookItem&quot;."/>
            <Param Name="strSprite" Type="String" Id="332" Desc="The file name of the sprite that replaces the cursor while the click-stick operation is active."/>
            <Param Name="nStartLocation" Type="Integer" Id="333" Desc="The location where the operation began."/>
        </Function>
        <Function Name="DPF" Desc="Sends the string that is passed in to the client logs." Id="334">
            <Param Name="strDebugMessage" Type="String" Desc="The message that the function passes on to the client logs." Id="15501"/>
        </Function>
        <Function Name="GetGameFonts" Desc="Gets a list of all of the fonts that come with the game.  Each font is made up of a typeface and a font size." Id="335">
            <ReturnValue Type="Table" Desc="An array with information of all of the fonts that are packaged with the game." Array="true" Id="15540">
                <Item Name="index" Desc="The index in the array, if the array was 0 based." Type="Integer" Id="15541"/>
                <Item Name="name" Desc="The name of the font." Type="String" Id="15542"/>
                <Item Name="face" Desc="The typeface used for the font." Type="String" Id="15543"/>
                <Item Name="size" Desc="The font size." Type="Integer" Id="15544"/>
            </ReturnValue>
        </Function>
        <Function Name="SetConsoleVariable" Id="336" Desc="Sets a console variable to a given value." Remarks="If a variable that is passed in can easily be converted to another type, such as an integer to a boolean or vice versa, it will try to do so.">
            <Param Name="strVariable" Type="String" Id="337" Desc="The name of the console variable that the function will update."/>
            <Param Name="oValue" Type="CColor, String, Integer, Float, or Boolean" Desc="The new value of the console variable.  The type of variable used must match the type needed by the Console Variable." Id="338"/>
        </Function>
        <Function Name="GetConsoleVariable" Desc="Gets the value of the specified console variable.  " Id="339">
            <Param Name="strVarName" Desc="The name of the console variable whose value is requested." Type="String" Id="15532"/>
            <ReturnValue Type="Value" Desc="This value can be of any basic type (integer, float, boolean, string, nil), depending on which console variable is requested." Id="15533"/>
            <Param Name="strVar" Type="String" Id="340" Deleted="true"/>
        </Function>
        <Function Name="NoOp" Desc="Does absolutely nothing." Id="341" Deprecated="true"/>
        <Function Name="AssetFileSizeString" Desc="Gets the file size of the specified asset." Id="342">
            <Param Name="strFilename" Type="String" Id="343" Desc="The file name of the asset."/>
            <ReturnValue Type="String" Desc="The asset&apos;s size, in bytes." Id="15493"/>
        </Function>
        <Function Name="AssetFileTimeString" Desc="Gets the date and time that the asset was last updated." Id="344">
            <Param Name="strFilename" Type="String" Id="345" Desc="The asset&apos;s file name."/>
            <ReturnValue Type="String" Desc="A string that contains the date and time when the specified asset was last updated." Id="15494"/>
        </Function>
        <Function Name="GetString" Desc="Gets the localized string for the given string or id number." Id="346">
            <Param Name="strCheck" Type="String or Integer" Desc="The string or id that will poll the string." Id="347"/>
            <ReturnValue Type="String" Desc="The localized string that corresponds" Id="15573"/>
        </Function>
        <Function Name="GetScreenSize" Desc="Gets the size of the client window.  This function has been replaced by Apollo.GetDisplaySize()" Id="348" Deprecated="true"/>
        <Function Name="CloseEscapableWindows" Desc="Closes all of the windows that have the Escapable flag turned on." Id="349">
            <ReturnValue Type="Boolean" Desc="Whether any windows were closed or not." Id="15495"/>
        </Function>
        <Function Name="FindWindowByName" Desc="Searches through all of the addons that are registered with Apollo for a window with the specified name." Id="350">
            <ReturnValue Type="Window" Desc="The window that was found by the search." Id="351"/>
            <Param Name="strWindowName" Type="String" Id="352" Desc="The name of the window that the function searches for."/>
        </Function>
        <Function Name="SetGlobalAnchor" Id="353" Desc="Creates a named anchor that can be used for setting up windows for other addons.">
            <Param Name="strName" Type="String" Id="354" Desc="The name of the anchor."/>
            <Param Name="fPoint" Type="Float" Default="0.f" Id="355" Desc="The anchor point for this anchor."/>
            <Param Name="nOffset" Type="Integer" Default="0" Id="356" Desc="The offset from the anchor point that the named anchor should be set to."/>
            <Param Name="bOverwrite" Type="Boolean" Default="true" Id="357" Desc="Whether the function should overwrite any named anchors with the same name."/>
        </Function>
        <Function Name="IsShiftKeyDown" Desc="Gets the state of the Shift key." Id="358">
            <ReturnValue Type="Boolean" Desc="Whether the Shift key is down or not." Id="15585"/>
        </Function>
        <Function Name="IsControlKeyDown" Desc="Gets the state of the Control key." Id="359">
            <ReturnValue Type="Boolean" Desc="Whether the Control key is down or not." Id="15583"/>
        </Function>
        <Function Name="IsAltKeyDown" Desc="Gets the state of the Alt key." Id="360">
            <ReturnValue Type="Boolean" Desc="Whether the Alt key is down or not." Id="15580"/>
        </Function>
        <Function Name="GetAssetFolder" Desc="Gets the name of the folder that contains all of the default UI&apos;s assets." Id="361">
            <ReturnValue Type="String" Desc="The default UI&apos;s asset folder." Id="15531"/>
        </Function>
        <Function Name="SetCursor" Id="362" Desc="Changes the cursor to another ApolloCursor.">
            <Param Name="acCursor" Type="ApolloCursor" Id="363" Desc="The cursor that will be shown after the function is called."/>
        </Function>
        <Function Name="GetTickCount" Desc="Gets the number of milliseconds since the system was started." Id="364">
            <ReturnValue Type="Integer" Desc="The number of milliseconds that have elapsed since the system was started (up to 49.7 days)" Id="15577"/>
        </Function>
        <Function Name="RegisterAddon" Desc="Registers an addon to be loaded by Apollo.  Addons that are not registered do not work." Id="365">
            <Param Name="tAddon" Type="Table" Default="OnLoad" Id="367" Desc="The instance of the addon that is registering with Apollo.  This is represented by &quot;self&quot;."/>
            <Param Name="bHasConfigureFunction" Type="Boolean" Default="OnSave" Id="368" Desc="Whether addon has a Configure button in the Esc menu.  If this value is true, then the addon needs an OnConfigure() function to handle the button signal event."/>
            <Param Name="arDependencies" Type="String" Default="OnRestore" Id="369" Desc="An array of addon names that must be loaded before this addon can be successfully loaded." Array="true"/>
            <Param Name="nLuaEventHandler" Type="LuaTable but the Id is immediately converted to an Integer" Id="366" Deleted="true"/>
        </Function>
        <Function Name="SuspendAddon" Desc="Turns off an addon that is throwing errors until the UI is reloaded." Id="370" Remarks="If the addon that the function tries to suspend has no errors, it will not be suspended.">
            <Param Name="strAddonName" Type="String" Id="371" Desc="The name of the addon that the function will try to suspend."/>
        </Function>
        <Function Name="LinkAddon" Desc="Associates a module with a parent module in Apollo.  This allows Apollo to manage the addon&apos;s memory better." Id="372" Example="local kOffsetEnum =
{
    Left = 1,
    Top = 2,
    Right = 3,
    Bottom = 4,
}

function ContainerManager:OnDocumentReady()
    if self.xmlDoc == nil then
        return
    end

    self.luaLeftContainer = Container:new()
    self.luaRightContainer = Container:new()
    self.luaLeftContainer:Init(self)
    self.luaRightContainer:Init(self)

    self.luaLeftContainer:Move(-100, 0)
    self.luaRightContainer:Move(100, 0)
end

function Container:new(o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function Container:Init(luaManager)
    Apollo.LinkAddon(luaManager, self)

    self.luaContainerManager = luaManager
    self.wndMain = Apollo.LoadForm(self.luaManager.xmlDoc, &quot;ContainerWindow&quot;, nil, self)
end

function Container:Move(nDeltaX, nDeltaY)
    local tOffsets = {self.wndMain:GetAnchorOffsets()}

    tOffsets[kOffsetEnum.Left] = tOffsets[kOffsetEnum.Left] + nDeltaX
    tOffsets[kOffsetEnum.Right] = tOffsets[kOffsetEnum.Right] + nDeltaX

    tOffsets[kOffsetEnum.Top] = tOffsets[kOffsetEnum.Top] + nDeltaY
    tOffsets[kOffsetEnum.Bottom] = tOffsets[kOffsetEnum.Bottom] + nDeltaY

   self.wndMain:SetAnchorOffsets(unpack(tOffsets))
end">
            <Param Name="tTarget" Type="Table" Id="373" Desc="The &quot;self&quot; of the module that the function will link to."/>
            <Param Name="tSource" Type="Table" Desc="The &quot;self&quot; of the module that is calling the function." Id="374"/>
        </Function>
        <Function Name="GetAddon" Id="2520" Desc="Gets all of the functions and variables from the instance of the specified addon that is currently running.">
            <Param Name="strAddonName" Desc="The name of the addon that the function will try to find." Type="String" Id="15504"/>
            <ReturnValue Type="oAllTheThings" Desc="All of the addon level variables contained in the addon, as well as a metatable with all of the addon&apos;s functions." Id="15505"/>
        </Function>
        <Function Name="GetObjectSize" Id="2521" Desc="Gets the memory size of an object.">
            <Param Name="oVariable" Desc="The function will return the size of this variable.  Any variable type can be passed in." Type="Variable" Id="15558"/>
            <ReturnValue Type="Integer" Desc="The size of the variable, in bytes." Id="15559"/>
        </Function>
        <Function Name="LoadForm" Desc="Loads a window from the specified form file" Id="316" NeedProofread="true" Example="self.wndMain = Apollo.LoadForm(&quot;SampleAddon.xml&quot;, &quot;SampleAddonForm&quot;, nil, self)">
            <Param Name="strFile" Type="String or XmlDoc" Id="318" Desc="The path to the XML document that contains the window, or the pre-loaded XML form."/>
            <Param Name="strFormName" Type="String" Id="319" Desc="The name of the window form that the function will try to load."/>
            <Param Name="wndParent" Type="Window" Default="null" Id="320" Desc="The newly loaded window will be a child of this window."/>
        </Function>
        <Function Name="GetMouseTargetWindow" Id="3264" Desc="Gets the window that the mouse is currently hovering over.">
            <ReturnValue Type="Window" Desc="The top-most window that the mouse is hovering over." Id="15554"/>
        </Function>
        <Function Name="GetMouse" Id="3265" Desc="Gets the mouse&apos;s position in screen coordinates.">
            <ReturnValue Type="Table" Desc="The mouse&apos;s current coordinates in screen space." Id="15551">
                <Item Name="x" Type="Integer" Id="15552"/>
                <Item Name="y" Desc="Integer" Id="15553"/>
            </ReturnValue>
        </Function>
        <Function Name="GetDisplaySize" Id="3266" Desc="Gets the size of the client, as well as the size of the viewable portion of the client window." Remarks="In fullscreen mode, the width/height and raw width/height do not match up exactly, but the difference is relatively insignificant.  In windowed mode, this is much more pronounced.">
            <ReturnValue Type="Table" Desc="The width and height of the window and the viewable portion of the window, as well as the scale that everything is drawn to.  " Id="15534">
                <Item Name="nWidth" Desc="The window&apos;s width." Type="Integer" Id="15535"/>
                <Item Name="nHeight" Desc="The window&apos;s height." Type="Integer" Id="15536"/>
                <Item Name="nRawWidth" Desc="The width of the portion of the window where the game is actually shown." Type="Integer" Id="15537"/>
                <Item Name="nRawHeight" Desc="The height of the portion of the window where the game is actually shown." Type="Integer" Id="15538"/>
                <Item Name="fScale" Desc="Objects in the game are scaled by this amount before being drawn." Type="Float" Id="15539"/>
            </ReturnValue>
        </Function>
        <Function Name="DisableAddon" Id="3267" Desc="Disables the specified addon if it has any errors.  Disabled addons do not load after the UI is reloaded.">
            <Param Name="strAddonName" Desc="The name of the addon that should be disabled." Type="String" Id="15496"/>
        </Function>
        <Function Name="UnlinkAddon" Id="3268" Desc="Frees up the memory used by a linked addon.">
            <Param Name="tTarget" Desc="The addon that the module was linked to." Type="Table" Id="15625"/>
            <Param Name="tSource" Desc="The instance of the module that is being unlinked.  This is usually the module&apos;s &quot;self&quot;." Type="Table" Id="15626"/>
        </Function>
        <Function Name="GetTextWidth" Id="4387" Desc="Gets the number of pixels it takes to draw a specific piece of text with a specific font.">
            <Param Name="strFontName" Desc="The name of the font that to use in the width check." Type="String" Id="15574"/>
            <Param Name="strInput" Desc="The text that the function is checking." Type="String" Id="15575"/>
            <ReturnValue Type="Integer" Desc="The width, in pixels, that it takes to draw the text with the given font." Id="15576"/>
        </Function>
        <Function Name="IsCapsLockOn" Id="5677" Desc="Gets the state of the Caps Lock button.">
            <ReturnValue Type="Boolean" Desc="Whether Caps Lock is on or not." Id="15582"/>
        </Function>
        <Function Name="GetAddonInfo" Id="5678" Desc="Gets a lot of performance information and a list of errors for the specified addon.">
            <Param Name="strAddonName" Desc="The name of the addon." Type="String" Id="15506"/>
            <ReturnValue Type="Table" Id="15507" Desc="A table that contains a large amount of information on the addon.">
                <Item Name="strFolder" Desc="The name of the folder where the addon is found." Type="String" Id="15508"/>
                <Item Name="strName" Desc="The addon&apos;s name." Type="String" Id="15509"/>
                <Item Name="strConfigureButtonText" Desc="The text that is shown on the addon&apos;s configure button." Type="String" Id="15510"/>
                <Item Name="bCarbine" Desc="Whether the addon is an official Carbine addon or not." Type="Boolean" Id="15511"/>
                <Item Name="strAuthor" Desc="The name of the addon&apos;s author." Type="String" Id="15512"/>
                <Item Name="bLoadOnStart" Desc="Whether the addon is automatically loaded when the player logs in or the UI is reloaded." Type="Boolean" Id="15513"/>
                <Item Name="nMemoryUsage" Desc="How much memory the addon takes up." Type="Integer" Id="15514"/>
                <Item Name="nTotalCalls" Desc="The number of API function calls the addon has made since it was started." Type="Integer" Id="15515"/>
                <Item Name="fTotalTime" Desc="The total amount of processing time the addon has used since it was started, in milliseconds." Type="Float" Id="15516"/>
                <Item Name="fLongestCall" Desc="The longest it took to complete any one function call in the addon since the addon started." Type="Float" Id="15517"/>
                <Item Name="fCallTimePerSecond" Desc="The amount of processing time the addon is currently taking every second." Type="Float" Id="15518"/>
                <Item Name="fCallTimePerFrame" Desc="The amount of processing time the addon is currently taking every frame." Type="Float" Id="15519"/>
                <Item Name="bRunning" Desc="Whether the addon is currently running or not." Type="Boolean" Id="15520"/>
                <Item Name="eStatus" Desc="The addon&apos;s current status." Type="OptionsScreen.CodeEnumAddonStatus" Id="15521"/>
                <Item Name="fLastModified" Desc="The number of seconds since the addon was last modified." Type="Float" Id="15522"/>
                <Item Name="bIgnoreVersion" Desc="Whether the addon should ignore API version mismatches for loading purposes." Type="Boolean" Id="15523"/>
                <Item Name="nAPIVersion" Desc="The API version that the addon uses." Type="Integer" Id="15524"/>
                <Item Name="bHasConfigure" Desc="Whether the addon has a configure menu that was set up when the addon was registered." Type="Boolean" Id="15525"/>
                <Item Name="arErrors" Desc="An array of error messages that were caused by the addon." Type="String" Array="true" Id="15526"/>
                <Item Name="strLastModified" Desc="The date and time that the addon was last modified." Type="String" Id="15527"/>
                <Item Name="strLastModifiedSort" Desc="The string used when sorting the addons by the date they were last modified.  The string lists the year, month, day, and time." Type="String" Id="15528"/>
                <Item Name="arReplacedAddons" Desc="The name of each addon that this addon replaces." Type="String" Array="true" Id="15529"/>
            </ReturnValue>
        </Function>
        <Function Name="AlertAppWindow" Id="7015" Desc="Flashes the client&apos;s icon on the Windows taskbar if the game does not have focus."/>
        <Function Name="SetMaxResolutionWidth" Id="7016" Desc="Sets the maximum resolution width for the client.">
            <Param Name="nWidth" Desc="The maximum resolution width that the client can be set to." Type="Integer" Id="15614"/>
        </Function>
        <Function Name="GetMaxResolutionWidth" Id="7017" Desc="Returns the maximum width that the client can be set to.">
            <ReturnValue Type="Integer" Desc="The maximum resolution width." Id="15546"/>
        </Function>
        <Function Name="SetMinResolutionWidth" Id="7018" Desc="Sets the minimum resolution width that the client can be set to.">
            <Param Name="nWidth" Desc="The minimum width that the client can be set to." Type="Integer" Id="15615"/>
        </Function>
        <Function Name="GetMinResolutionWidth" Id="7019" Desc="The minimum resolution width that the client can be set to.">
            <ReturnValue Type="Integer" Desc="The minimum resolution width." Id="15550"/>
        </Function>
        <EnumSet Name="DragDropQueryResult" Id="7020" Desc="The set of results that the player can get when attempting to drag and drop something using the mouse."/>
        <EnumSet Name="DragDropCancelReason" Id="7025" Desc="An enum that describes why a player&apos;s attempt to drag and drop something with their mouse was canceled."/>
        <Function Name="RemoveEventHandler" Id="8311" Desc="Removes an event handler from Apollo.  This is primarily done for memory management purposes.">
            <Param Name="strEventName" Desc="The event that the module will stop handling." Type="String" Id="15611"/>
            <Param Name="tModule" Desc="The instance of the module that will stop handling the event.  This is usually the module&apos;s &quot;self&quot;." Type="Table" Id="15612"/>
        </Function>
        <Function Name="ResetConsoleVariable" Id="8312" Desc="Returns a console variable to its default value.">
            <Param Name="strConsoleVariableName" Desc="The name of the console variable that will be reset to its default." Type="String" Id="15613"/>
        </Function>
        <Function Name="SetNavTextAnchor" Id="8313" Desc="Changes how and where a tooltip is drawn.">
            <Param Name="nXAnchor" Desc="The tooltip anchor point&apos;s x coordinate." Type="Integer" Id="15617"/>
            <Param Name="bGrowRight" Desc="If this is true, then the tooltip will be drawn to the right of the anchor point.  If it is false, it will be drawn to the left." Type="Boolean" Id="15618"/>
            <Param Name="nYAnchor" Desc="The tooltip anchor point&apos;s y coordinate." Type="Integer" Id="15619"/>
            <Param Name="bGrowDown" Desc="If this is true, then the tooltip will be drawn below the anchor point.  If it is false, it will be drawn above it." Type="Boolean" Id="15620"/>
        </Function>
        <Function Name="GetMetaKeysDown" Id="8314" Desc="Gets a bit flag that tells which meta keys are currently pressed." Example="function Example:CheckMetaKey()
    local nKeysDown = Apollo.GetMetaKeysDown()
    local tKeys = 
    {
        [&quot;Shift&quot;] = bit32.band(nKeysDown, GameLib.CodeEnumInputModifier.Shift) == GameLib.CodeEnumInputModifier.Shift,
        [&quot;Control&quot;] = bit32.band(nKeysDown, GameLib.CodeEnumInputModifier.Control) == GameLib.CodeEnumInputModifier.Control,
        [&quot;Alt&quot;] = bit32.band(nKeysDown, GameLib.CodeEnumInputModifier.Alt) == GameLib.CodeEnumInputModifier.Alt,
    }
    return tKeys
end">
            <ReturnValue Type="Integer" Desc="A bit flag of the Meta Keys that are currently pressed down.  The value lines up with the GameLib.CodeEnumInputModifier enum." Id="15549"/>
        </Function>
        <Function Name="AddAddonErrorText" Id="8315" NotStandard="true" InternalNotes="We should take either a string or table and not give the users the choice." Desc="Adds a message to an addon&apos;s info." Example="The text that is added to the addon&apos;s error list can be found by calling Apollo.GetAddonInfo() on the item and accessing the arErrors element in the error that is returned.">
            <Param Name="oAddon" Desc="The addon that threw the error.  This can either be an instance of the addon itself or the addon&apos;s name." Type="String or Table" Id="15491"/>
            <Param Name="strAddToError" Desc="The text that should be added to the addon&apos;s error list." Type="String" Id="15492"/>
        </Function>
        <Function Name="DoesSpriteExist" Id="8316" Desc="Checks if a sprite with the given name exists in the Carbine sprite set.">
            <Param Name="strSpriteName" Desc="The name of the sprite that the function looks for." Type="String" Id="15499"/>
            <ReturnValue Type="Boolean" Desc="Whether a sprite with the specified name was found or not." Id="15500"/>
        </Function>
        <Function Name="IsSpriteLoaded" Id="8317" Desc="Checks whether a specific sprite is loaded or not">
            <Param Name="strSpriteName" Desc="The name of the sprite that the function is looking for." Type="String" Id="15586"/>
            <ReturnValue Type="Boolean" Id="15587" Desc="Whether the sprite is loaded or not."/>
        </Function>
        <Function Name="RegisterWindowSubclass" Id="8318" Desc="Registers a Window Subclass with Apollo." Remarks="Window Subclasses are a way to duplicate window functionality in multiple addons.  ">
            <Param Name="strSubclassName" Desc="The name of the Subclass." Type="String" Id="15605"/>
            <Param Name="tAddon" Desc="The instance of the module that is being registered.  This is usually the module&apos;s &quot;self&quot;." Type="Table" Id="15606"/>
            <Param Type="Table" Name="tEvents" Desc="An array of Event/Function Handler pairs that the Subclass wants to register with." Array="true" Id="15607">
                <Item Name="strEvent" Desc="The name of the event that the subclass wants to handle." Type="String" Id="15608"/>
                <Item Name="strFunction" Desc="The function within the subclass that will be called when the event is fired." Type="String" Id="15609"/>
            </Param>
            <ReturnValue Type="Boolean" Desc="Whether the subclass was sucessfully registered with Apollo or not." Id="15610"/>
        </Function>
        <Function Name="IsWindowSubclassRegistered" Id="8319" Desc="Determines whether the specified Window Subclass has been registered with Apollo.">
            <Param Name="strSubclassName" Desc="The name of the Window Subclass that the function will look for." Type="String" Id="15588"/>
            <ReturnValue Type="Boolean" Desc="Whether the Subclass is registered or not." Id="15589"/>
        </Function>
        <EnumSet Name="AddonLoadStatus" Id="8320" Desc="An enum that describes the load state of an addon.  This is primarily used alongside the depricated GetAsyncLoad functionality.">
            <Enum Name="Loading" Id="8321"/>
            <Enum Name="Loaded" Id="8322"/>
            <Enum Name="LoadingError" Id="8323"/>
        </EnumSet>
        <Function Name="GetAPIVersion" Id="9084" Desc="Gets the current API version used by the game.">
            <ReturnValue Type="Integer" Desc="Apollo&apos;s current API version." Id="15530"/>
        </Function>
        <Function Name="GetPackage" Id="9471" Desc="Returns information on a package that was registered with Apollo.">
            <Param Name="strPackageName" Desc="The name of the package." Type="String" Id="15560"/>
            <ReturnValue Type="Table" Desc="Information about the package." Id="15561">
                <Item Name="strName" Desc="The name of the package." Type="String" Id="15562"/>
                <Item Name="bAddon" Desc="This value will return true if it is called within the lua file that registers the package.  If it is called in an addon that simply uses the package, this returns false." Type="Boolean" Id="15563"/>
                <Item Name="nVersion" Desc="The package&apos;s version." Type="Integer" Id="15564"/>
                <Item Name="strLoadError" Desc="Any load errors that may have occurred when attempting to get the package." Type="String" Id="15565"/>
                <Item Type="Table" Name="tAddonInfo" Desc="A table that only exists if bAddon is true." Id="15568">
                    <Item Name="strAuthor" Desc="The name of the package&apos;s author." Type="String" Id="15569"/>
                    <Item Name="nAPIVersion" Desc="The API version of that the addon was written with according to the Table of Contents." Type="Integer" Id="15570"/>
                </Item>
                <Item Name="tPackage" Desc="All of the addon level variables and functions from the package in a convenient table." Type="Table" Id="15571"/>
            </ReturnValue>
        </Function>
        <Function Name="GetStrata" Id="9472" Desc="Gets an array of all of the window strata that are in use.">
            <ReturnValue Type="String" Desc="The names of each strata that a window can be drawn in." Array="true" Id="15572"/>
        </Function>
        <Function Name="GetWindowsInStratum" Id="9473" Desc="Gets all of the windows in a specific stratum.">
            <Param Name="strStratum" Desc="The function returns the windows found in the stratum whose name matches this string." Type="String" Id="15578"/>
            <ReturnValue Type="Window" Desc="An array of windows found in the given stratum." Array="true" Id="15579"/>
        </Function>
        <Function Name="RegisterPackage" Id="9474" Desc="Registers a package with Apollo so it can be used by other addons.">
            <Param Name="tPackage" Desc="The instance of the package that is registering with Apollo.  This is usually represented by &quot;self&quot;." Type="Table" Id="15590"/>
            <Param Name="strModule" Desc="The name of the package." Type="String" Id="15591"/>
            <Param Name="nVersion" Desc="The packages version." Type="Integer" Id="15592"/>
            <Param Name="arDependencies" Desc="An array of addon or package names that must be loaded before this addon loads." Type="String" Array="true" Id="15593"/>
        </Function>
        <Function Name="FormatNumber" Id="12365" Desc="Formats a number to include region-specific notations, such as commas/periods in integers with 4+ digits, and truncates the value to a specific number of decimal places.">
            <Param Name="oNumber" Desc="The number that needs to be formatted.  This can be either an integer or float." Type="Integer" Id="13385"/>
            <Param Name="nDecimals" Desc="The number of decimal places to display" Type="Integer" Id="13386"/>
            <Param Name="bCommas" Desc="Determines whether or not commas should be shown in numbers with 4 or more digits" Type="Boolean" Id="13387"/>
            <ReturnValue Type="String" Desc="The formatted number with all relevant punctuation" Id="13388"/>
        </Function>
        <Function Name="StringToLower" Id="14751" InternalNotes="Need to find out what makes this different from string.lower()" Desc="Changes all of the characters in a string to lower case.">
            <Param Name="strInput" Desc="The string that will be changed to lower case." Type="String" Id="15623"/>
            <ReturnValue Type="String" Desc="The updated string." Id="15624"/>
        </Function>
        <Function Name="SetMoveMetaKey" Id="14752" Desc="Changes the meta key used for sprinting.">
            <Param Name="eMetaKey" Desc="The meta key that the sprint action should be bound to." Type="GameLib.CodeEnumInputModifier" Id="15616"/>
        </Function>
        <Function Name="GetMoveMetaKey" Id="14753" Desc="Gets the meta key that is bound to the Sprint action.">
            <ReturnValue Type="GameLib.CodeEnumInputModifier" Desc="The meta key that is bound to the Sprint action." Id="15557"/>
        </Function>
        <Function Name="LoadTemplates" Incomplete="true" Id="16412" InternalNotes="Not quite sure what&apos;s going on with this one..."/>
        <Function Name="GetObjectize" Desc="(lives in LuaObjectizer of UiModule.cpp)
Does a lua_pushnumber of pObject&apos;s size." Incomplete="true" Id="375" Deleted="true"/>
    </Library>
    <Library Name="AbilityBook" Id="377" Desc="A library that contains a large number of functions that are centered around the Limited Action Set.">
        <Function Name="GetAbilitiesList" Desc="Returns a table with information on each of the character&apos;s abilities." Id="378">
            <ReturnValue Type="Table" Array="true" Desc="An array of tables that contain information on each spell that the player has access to." Id="15222">
                <Item Name="nId" Desc="The id number of the base spell." Type="Integer" Id="15223"/>
                <Item Name="strName" Desc="The spell&apos;s name." Type="String" Id="15224"/>
                <Item Name="nMaxTiers" Desc="The maximum number of tiers that the spell has." Type="Integer" Id="15225"/>
                <Item Name="bIsActive" Desc="Determines whether the ability is unlocked or not." Type="Boolean" Id="15226"/>
                <Item Name="nCurrentTier" Desc="The current tier set for the spell." Type="Integer" Id="15227"/>
                <Item Name="strAbilityDescription" Desc="The description of the spell that is listed in the tooltip." Type="String" Id="15228"/>
                <Item Name="strAbilityPerTierPointDescription" Desc="A listing of what is added to the spell after each tier upgrade.  This does not include the Tier 4 and Tier 8 bonuses." Type="String" Id="15229"/>
                <Item Type="Table" Name="tTiers" Desc="An array of tables that contain information for each tier of the spell.  The contents of this table differ depending on whether the spell is a combat or non-combat spell, or if the spell summons a mount." Array="true" Id="15230">
                    <Item Name="strName" Desc="The name of the spell." Type="String" Id="15231"/>
                    <Item Name="nId" Desc="The id number of the base spell." Type="Integer" Id="15232"/>
                    <Item Name="nTier" Desc="The tier that is listed in this table." Type="Integer" Id="15233"/>
                    <Item Name="nTrainingCost" Desc="The number of credits required to unlock the base spell." Type="Integer" Id="15234"/>
                    <Item Name="nTierPointCost" Desc="The number of Ability Points required to upgrade to this tier." Type="Integer" Id="15235"/>
                    <Item Name="bCanPurchase" Desc="Whether or not the player meets the requirements to unlock the spell." Type="Boolean" Id="15236"/>
                    <Item Name="bAmpUnlocked" Desc="Whether the spell requires an AMP to be active before it can be unlocked.  This variable is only used for Combat spells." Type="Boolean" Id="15237"/>
                    <Item Name="nLevelReq" Desc="The level required to unlock this spell&apos;s tier." Type="Integer" Id="15238"/>
                    <Item Name="bIsActive" Desc="Whether the player is using this tier of the spell." Type="Boolean" Id="15239"/>
                    <Item Name="strTierBonusDescription" Desc="The tier bonus that the player gets at this tier." Type="String" Id="15240"/>
                    <Item Name="splObject" Desc="The spell for this tier." Type="Spell" Id="15241"/>
                    <Item Name="nTierSpellId" Desc="The id number for the spell at this tier.  This variable is only used for non-combat spells." Type="Integer" Id="15243"/>
                    <Item Name="nPreviewCreatureId" Desc="The id number of the creature spawned when using this ability.  This is primarily used for preview purposes and only exists for Mount type spells." Type="Integer" Id="15244"/>
                    <Item Name="nPreviewHoverboardItemDisplay" Desc="The id number of the hoverboard.  This is primarily used for preview purposes and is only set if the spell is a mount." Type="Integer" Id="15245"/>
                    <Item Name="bIsHoverboard" Desc="Specifies whether the spell is for a hoverboard or another type of mount.  This variable is only set if the spell summons a mount." Type="Boolean" Id="15246"/>
                </Item>
            </ReturnValue>
            <Param Name="eSpellType" Desc="A number representing the spell&apos;s type.  Non-Combat abilities have either the Mount, Misc, or Path tags." Type="Spell.CodeEnumSpellTag" Id="15242"/>
        </Function>
        <Function Name="ActivateSpell" Id="3269" Desc="Sets the spell&apos;s activated state.  Spells are considered activated when they are able to be added to the player&apos;s limited action set.">
            <Param Name="bActive" Desc="Whether the spell should be made active or inactive." Type="Boolean" Id="4369"/>
            <ReturnValue Type="Boolean" Desc="Returns a boolean stating whether or not the spell was successfully activated." Id="4370"/>
        </Function>
        <Function Name="GetAbilityInfo" Id="8324" Desc="Gives the UI  information on a specific spell.">
            <Param Name="idSpell" Desc="The id number of the spell that is being queried." Type="Integer" Id="15247"/>
            <Param Name="eSpellType" Desc="The type of spell being queried.  This should match up with the type of spell that was used in the first argument." Type="Spell.CodeEnumSpellTag" Id="15248"/>
            <ReturnValue Type="Table" Desc="A table that contains information on the spell" Id="15249">
                <Item Name="nId" Desc="The id number of the base level of the spell." Type="Integer" Id="15250"/>
                <Item Name="strName" Desc="The name of the spell." Type="String" Id="15251"/>
                <Item Name="nMaxTiers" Desc="The maximum number of tiers allowed for the spell." Type="Integer" Id="15252"/>
                <Item Name="bIsActive" Desc="Whether the spell has been purchased or not." Type="Boolean" Id="15253"/>
                <Item Name="nCurrentTier" Desc="The tier that the spell is currently set to." Type="Integer" Id="15254"/>
                <Item Name="strAbilityDescription" Desc="The description of the ability, as shown in the tooltip." Type="String" Id="15255"/>
                <Item Name="strAbilityPerTierPointDescription" Desc="The description of the spell." Type="String" Id="15256"/>
                <Item Type="Table" Name="tTiers" Array="true" Desc="Information on each tier of the spell." Id="15257">
                    <Item Name="strName" Desc="The name of the spell." Type="String" Id="15258"/>
                    <Item Name="nId" Desc="The id number of the base spell." Type="Integer" Id="15259"/>
                    <Item Name="nTier" Desc="The tier that is referenced in this table." Type="Integer" Id="15260"/>
                    <Item Name="nTrainingCost" Desc="The amount of currency needed to train this spell.  This value is usually only set for the base level of the spell." Type="Integer" Id="15261"/>
                    <Item Name="nTierPointCost" Desc="The number of Ability Points that the player must use to unlock this tier." Type="Integer" Id="15262"/>
                    <Item Name="bCanPurchase" Desc="Determines whether the player meets the requirement to purchase this tier of the ability." Type="Boolean" Id="15263"/>
                    <Item Name="bAmpUnlocked" Desc="Determines whether the spell is unlocked via an AMP or not." Type="Boolean" Id="15264"/>
                    <Item Name="nLevelReq" Desc="The level the player must reach before using this tier of the spell." Type="Integer" Id="15265"/>
                    <Item Name="bIsActive" Desc="Whether the player is using this tier or not." Type="Boolean" Id="15266"/>
                    <Item Name="strTierBonusDescription" Desc="The description of the spell at this tier." Type="String" Id="15267"/>
                    <Item Name="splObject" Desc="The spell at this tier." Type="Spell" Id="15268"/>
                    <Item Name="nTierSpellId" Desc="The id number of the spell.  This only exists for non - combat spells." Type="Integer" Id="15269"/>
                    <Item Name="nPreviewCreatureId" Desc="The id number of the mount that can be previewed from this spell.  This variable only exists if the spell type is Mount." Type="Integer" Id="15270"/>
                    <Item Name="nPreviewHoverboardItemDisplay" Desc="The id of the hoverboard that should be displayed in the mount preview.  This value is only valid if the spell type was set to Mount and the mount happens to be a Hoverboard." Type="Integer" Id="15271"/>
                    <Item Name="bIsHoverboard" Desc="Determines whether the mount is a hoverboard or not.  This is only set if the Mount tag was passed in." Type="Boolean" Id="15272"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="UpdateSpellTier" Id="8325" InternalNotes="Another one that returns false when it fails but nothing when it passes" Desc="Sets the spell to the specified tier in the cached copy of the Action Set.  This is not the saved copy, so any changes that are not saved are not permenantly set." NotStandard="true">
            <Param Name="idBaseSpell" Desc="The id number for the base spell." Type="Integer" Id="15402"/>
            <Param Name="nTier" Desc="The tier that the spell is being set to." Type="Integer" Id="15403"/>
        </Function>
        <Function Name="ClearCachedLASUpdates" Id="8326" Desc="Clears any unsaved changes to the player&apos;s limited action set."/>
        <Function Name="IsLASChangeActive" Id="8327" Desc="Checks to make sure that the Change Spec ability is active.">
            <ReturnValue Type="Boolean" Desc="Informs the UI whether the Limited Action Set can be chaged." Id="15388"/>
        </Function>
        <Function Name="GetTagsForSpell" Id="8328" Desc="Gets the category that the spell belongs to.">
            <Param Name="idSpell" Desc="The id number for the spell that is being checked." Type="Integer" Id="15384"/>
            <ReturnValue Type="String" Desc="An array of strings that contain the names of the categories that the spell belongs to." Array="true" Id="15385"/>
        </Function>
        <Function Name="GetSpellTierLevelRequirements" Id="8329" Desc="Gets the level requirememts for the player to learn each spell tier.">
            <ReturnValue Type="Integer" Desc="The level the character has to be in order to unlock each tier of a spell.  Index 1 is the base spell, while 2 is Tier 1, etc." Array="true" Id="15383"/>
        </Function>
        <Function Name="SetCurrentSpec" Id="8330" NotStandard="true" InternalNotes="We&apos;re returning false again when we don&apos;t return anything if it&apos;s successful..." Desc="Selects a specific Action Set for the player.">
            <Param Name="nSpecNumber" Desc="The Action Set that the player will switch to." Type="Integer" Id="15392"/>
        </Function>
        <Function Name="NextSpec" Id="8331" InternalNotes="This also has a case where it is returning false when it shouldnt." Desc="Cycles to the next Action Set available to the player.  If the player is already at their latest action set, it cycles to the first Action Set."/>
        <Function Name="PrevSpec" Id="8332" Desc="Cycles back to an earlier Action Set.  If the player is already at their first Action Set, it cycles to the last one."/>
        <Function Name="GetTotalPower" Id="8334" Desc="Gets the total amount of AMP points availalble to the player.">
            <ReturnValue Type="Integer" Desc="The total number of AMP points the player has." Id="15387"/>
        </Function>
        <Function Name="GetAvailablePower" Id="8335" Desc="Gets the amount of AMP power the player has left.  This value accounts for any changes that have not been saved.">
            <ReturnValue Type="Integer" Desc="The number of AMP points the player has not spent." Id="15276"/>
        </Function>
        <Function Name="GetEldanAugmentationData" Id="8336" NotStandard="true" InternalNotes="Why are we returning false in some cases?" Desc="Gets information for each AMP for the player&apos;s class.">
            <Param Name="nSpecIndex" Desc="The index of the Action Set that the function should return the AMP data for.  If this value is not valid, the function will return False." Type="Integer" Id="15327"/>
            <ReturnValue Type="Table" Array="true" Id="15328" Desc="The information for each category and each AMP.">
                <Item Name="tCategories" Desc="The information for each category." Type="Table" Array="true" Id="15333">
                    <Item Name="nId" Desc="The id number for the AMP category.  The categories (in order) are:

Damage/Support
Support
Support/Utility
Utility
Damage/Utility
Damage" Type="Integer" Id="15329"/>
                    <Item Name="strName" Desc="The localized name of the category." Type="String" Id="15330"/>
                    <Item Name="fPowerInCategory" Desc="The amount of AMP power the player has used on the category." Type="Float" Id="15331"/>
                    <Item Name="nHighestTierUnlocked" Desc="The highest tier that the player can access in the category.  This value ranges from 1-3." Type="Integer" Id="15332"/>
                    <Item Name="nCategoriesToUnlock" Desc="The number of categories that can help unlock this category." Type="Integer" Id="15354"/>
                    <Item Name="tUnlockedCategories" Desc="Information on the categories that help unlock this category.  The number of entries should match nCategoriesToUnlock." Type="Table" Array="true" Id="15355">
                        <Item Name="nUnlockCategoryId" Desc="The id number of the category that helps unlock this one." Type="Integer" Id="15356"/>
                        <Item Name="nTier2Amount" Desc="The amount of power that is needed in this category for the category in the parent table to increase to tier 2." Type="Integer" Id="15357"/>
                        <Item Name="nTier3Amount" Desc="The amount of power that is needed in this category for the category in the parent table to increase to tier 3." Type="Integer" Id="15358"/>
                    </Item>
                </Item>
                <Item Name="tAugments" Desc="The information for each AMP." Type="Table" Array="true" Id="15334">
                    <Item Name="nId" Desc="The id number for the AMP." Type="Integer" Id="15359"/>
                    <Item Name="eEldanAvailability" Desc="The current state of the AMP." Type="AbilityBook.CodeEnumEldanAvailability" Id="15360"/>
                    <Item Name="nPowerCost" Desc="The amount of AMP power required to activate the AMP." Type="Integer" Id="15361"/>
                    <Item Name="nItemIdUnlock" Desc="The item id for the for the item that unlocks the AMP." Type="Integer" Id="15362"/>
                    <Item Name="bUnlocked" Desc="Whether the item is unlocked or not." Type="Boolean" Id="15363"/>
                    <Item Name="nEldanAugmentationIdRequired" Desc="The id number of the AMP the player has to activate before this one unlocks." Type="Integer" Id="15364"/>
                    <Item Name="bRequiredOkay" Desc="Whether the required AMPs have been activated or not." Type="Boolean" Id="15365"/>
                    <Item Name="nDisplayRow" Desc="The row that the AMP is drawn on." Type="Integer" Id="15366"/>
                    <Item Name="nDisplayColumn" Desc="The column that the AMP is drawn on." Type="Integer" Id="15367"/>
                    <Item Name="nCategoryId" Desc="The id number of the category that the AMP belongs to." Type="Integer" Id="15368"/>
                    <Item Name="nCategoryTier" Desc="The tier that the AMP is in." Type="Integer" Id="15369"/>
                    <Item Name="nSpellIdAugment" Desc="The id number of the spell that unlocks when the AMP is learned." Type="Integer" Id="15370"/>
                    <Item Name="strTitle" Desc="The name of the AMP." Type="String" Id="15371"/>
                    <Item Name="strDescription" Desc="The description of what the AMP does." Type="String" Id="15372"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="CommitEldanAugmentationSpec" Id="8337" Desc="Submits the currently selected AMPs so they are saved to the player&apos;s current spec."/>
        <Function Name="ClearCachedEldanAugmentationSpec" Id="8338" Desc="Removes any changes that were made to players AMPs but were not saved."/>
        <Function Name="UpdateEldanAugmentationSpec" Id="8339" Desc="Saves the AMPs in the Action Set that the player has been working in.">
            <ReturnValue Type="Boolean" Desc="Whether the operation was successful or not." Id="15396"/>
            <Param Name="nSpecIdx" Desc="The Action Set number that is being updated." Type="Integer" Id="15397"/>
            <Param Name="nActivatedAmps" Desc="The number of activated AMPs in the Action Set." Type="Integer" Id="15398"/>
            <Param Type="Table" Name="tUnlockedAmps" Desc="A table with a list of activated AMP ids, indexed by those ids." Id="15399"/>
        </Function>
        <Function Name="ValidateEldanAugmentationSpec" Id="8340" NotStandard="true" InternalNotes="Failed operations are often returning false instead of enum values" Desc="Checks to make sure that the specified action set is valid and ready to be updated.">
            <Param Name="nSpecIdx" Desc="The Action Set that the function is trying to save." Type="Integer" Id="15408"/>
            <Param Name="nUnlockedAmps" Desc="The number of AMPS that the player has activated." Type="Integer" Id="15409"/>
            <Param Name="tUnlockedAMPIds" Desc="A table that contains the id numbers of every AMP that the player has activated." Type="Table" Id="15410"/>
            <ReturnValue Type="ActionSetLib.CodeEnumLimitedActionSetResult" Desc="The result of the operation" Id="15411"/>
        </Function>
        <EnumSet Name="CodeEnumSpecConstant" Id="8341" Desc="This is a single value representing the maximum number of specs the player can have.">
            <Enum Name="MaxNumSpecs" Id="8342"/>
        </EnumSet>
        <EnumSet Name="CodeEnumSpecError" Id="8343" Desc="Error messages that the player can receive when attempting to save their spec.  Ok is the success case.">
            <Enum Name="Ok" Id="8344"/>
            <Enum Name="InvalidIndex" Id="8345"/>
            <Enum Name="NoChange" Id="8346"/>
            <Enum Name="InCombat" Id="8347"/>
            <Enum Name="InvalidPlayer" Id="8348"/>
            <Enum Name="IndexLocked" Id="8349"/>
            <Enum Name="PvPRestricted" Id="12366"/>
            <Enum Name="InVoid" Id="12367"/>
        </EnumSet>
        <EnumSet Name="CodeEnumEldanAvailability" Id="8360" Desc="This enum rempresents the AMP&apos;s current state.

Unavailable - The player has not unlocked the AMP
Inaccessible - The player has not unlocked that AMP&apos;s tier
Inactivated - The player has not spent points to activate this AMP
Activated - The player has spent points to activate this AMP">
            <Enum Name="Unavailable" Id="8361"/>
            <Enum Name="Inaccessible" Id="8362"/>
            <Enum Name="Inactivated" Id="8363"/>
            <Enum Name="Activated" Id="8364"/>
        </EnumSet>
        <Function Name="GetCurrentSpec" Id="9085" Desc="Gets the number of the Action Set that the player is currently using.">
            <ReturnValue Type="Integer" Desc="The number of the Action Set that the player is currently using." Id="15278"/>
        </Function>
        <Function Name="GetNumUnlockedSpecs" Id="9086" Desc="Gets the number of Action Sets the current player has unlocked.">
            <ReturnValue Type="Integer" Desc="The number of Action Sets the player has unlocked." Id="15381"/>
        </Function>
        <Function Name="RespecEldanAugmentations" Id="12368" Desc="Attempts to reset the player&apos;s AMPs for their current spec.">
            <ReturnValue Type="Boolean" Desc="Whether the reset was successful or not." Id="15389"/>
        </Function>
        <Function Name="GetEldanAugmentationRespecCost" Id="12369" Desc="Gets the cost to respec the character&apos;s AMPs, in copper.">
            <ReturnValue Type="Integer" Desc="The number of credits required to reset the character&apos;s AMPs, in copper." Id="15377"/>
        </Function>
        <Function Name="GetAvailableLockedInPower" Id="14754" Desc="Gets the amount of unused AMP power the player has left in their current saved spec.  This value does not account for any changes that the player has made that have not been saved.">
            <ReturnValue Type="Integer" Desc="The amount of unused AMP power in the current spec." Id="15275"/>
        </Function>
        <Function Name="GetEldanAugmentationResetData" Id="14755" NotStandard="true" InternalNotes="This is also returning false.  Unsure how we get this to return anything but false and 0.">
            <ReturnValue Type="Table" Id="15373">
                <Item Name="nCount" Desc="The number of results possible when the player resets their AMPs." Type="Integer" Id="15374"/>
                <Item Name="nSpecIndex" Desc="The spec that was affected most." Type="Integer" Id="15375"/>
                <Item Name="eLimitedActionSetReslut" Desc="The result that the SpecIndex is tied to." Type="Integer" Id="15376"/>
            </ReturnValue>
        </Function>
        <EnumSet Name="CodeEnumAMPRespecType" Incomplete="true" Id="17046">
            <Enum Name="Full" Id="17047"/>
            <Enum Name="Section" Id="17048"/>
            <Enum Name="Single" Id="17049"/>
        </EnumSet>
        <Function Name="CanTrainTier" Desc="Returns a bool that indicates if training is possible" Incomplete="true" Id="379" Deleted="true"/>
        <Function Name="TrainTier" Desc="Attempts to train the next tier of the ability with the corresponding ID" Incomplete="true" Id="380" Deleted="true"/>
        <Function Name="GetExplorerRelicList" Incomplete="true" Id="3094" Desc="Creates an array of Spells obtained via Explorer Relics" Deleted="true"/>
    </Library>
    <Library Name="AchievementsLib" Id="382" Desc="Contains a list of functions that are helpful for building and orgainzing the Achievements UI or anything that requires achievement information.">
        <Function Name="GetAchievementZones" Desc="Returns a list of all of the zones used in any achievement." Id="388" Remarks="There&apos;s really no way to map an achievement to the zone with this function at the moment.  It still returns valid information, but it might not be very useful.">
            <ReturnValue Type="Table" Array="true" Id="15432">
                <Item Name="nId" Desc="The zone&apos;s id number." Type="Integer" Id="15433"/>
                <Item Name="strName" Desc="The name of the zone." Type="String" Id="15434"/>
            </ReturnValue>
        </Function>
        <Function Name="GetAchievements" Id="3270" Desc="Gets a list of all achievements or guild achievements.">
            <Param Name="bIsGuild" Desc="Determines whether the function should return guild achievements or not." Type="Boolean" Id="15426"/>
            <ReturnValue Type="Achievement" Desc="An array with every achievement of the specified type." Array="true" Id="15427"/>
        </Function>
        <Function Name="GetAchievementsForCategory" Id="3271" Desc="Gets a list of all the achievements for the given category." Remarks="The function will only return achievements at the category level if bRecurse is not set to true.">
            <Param Name="idCategory" Desc="The category of achievements that should be returned." Type="Integer" Id="15428"/>
            <Param Name="bRecurse" Desc="Whether or not the function should recurse through the category&apos;s subcategories when searching." Type="Boolean" Id="15429"/>
            <Param Name="bGetGuild" Desc="Whether the function should return guild achievements or not." Type="Boolean" Id="15430"/>
            <ReturnValue Type="Achievement" Desc="An array that contains all of the achievements for the given category (and subcategories if bRecurse was set to true)" Array="true" Id="15431"/>
        </Function>
        <Function Name="GetTradeskillAchievements" Id="3272" Desc="Gets all of the achievements for a specific tradeskill.">
            <Param Name="eTradeskill" Desc="The function will return the achievements for this tradeskill." Type="CraftingLib.CodeEnumTradeskill" Id="15449"/>
            <ReturnValue Type="Achievement" Desc="An array that contains all of the achievements for the specified tradeskill" Array="true" Id="15450"/>
        </Function>
        <Function Name="GetAchievementCategoryTree" Id="3273" Desc="Gets a tree structure for the different types of achievements for the UI.  The heirarchy goes Categories &gt; Groups &gt; Subgroups.">
            <Param Name="bGetGuildAchievements" Desc="Whether the function should return Guild Achievements or not." Type="Boolean" Id="15415"/>
            <ReturnValue Type="Table" Desc="A table with information on the categories, groups, and subgroups of achievements." Array="true" Id="15416">
                <Item Name="nCategoryId" Desc="The id number for the category." Type="Integer" Id="15417"/>
                <Item Name="strCategoryName" Desc="The category&apos;s name." Type="String" Id="15418"/>
                <Item Type="Table" Name="tGroups" Desc="A table with the groups found within this category." Array="true" Id="15419">
                    <Item Name="nGroupId" Desc="The id for the achievement group." Type="Integer" Id="15420"/>
                    <Item Name="strGroupName" Desc="The name for the achievement group." Type="String" Id="15421"/>
                    <Item Type="Table" Name="tSubGroups" Array="true" Desc="A table with information on the sub groups within this group." Id="15422">
                        <Item Name="nSubGroupId" Desc="The id number for the sub group of achievements." Type="Integer" Id="15423"/>
                        <Item Name="strSubGroupName" Desc="The name of the sub group of achievements." Type="String" Id="15424"/>
                    </Item>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="GetTradeskillAchievementCategoryTree" Id="3274" Desc="Gets a list of all of the categories and subcategories for a tradeskill&apos;s tech tree." Remarks="The Group returned in this function is always the tradeskill itself, with its subgroups being the different ranks of that tradeskill.">
            <Param Name="eTradeskill" Desc="The function will return the tech tree for this tradeskill." Type="CraftingLib.CodeEnumTradeskill" Id="15438"/>
            <ReturnValue Type="Table" Desc="A table containing the name of the tradeskill and its subcategories." Array="true" Id="15439">
                <Item Name="nGroupId" Desc="The id number for the tradeskill." Type="Integer" Id="15440"/>
                <Item Name="strGroupName" Desc="The tradeskill&apos;s name." Type="String" Id="15441"/>
                <Item Type="Table" Name="tSubGroups" Desc="An array of the different ranks for the tradeskill." Array="true" Id="15442">
                    <Item Name="nSubGroupId" Desc="The id number for the rank of the tradeskill." Type="Integer" Id="15443"/>
                    <Item Name="strSubGroupName" Desc="The name of this rank of the tradeskill." Type="String" Id="15444"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="GetTradeskillAchievementLayout" Id="3275" Desc="Gets a list of all of the achievements for a specific tradeskill rank." Remarks="Once this list is populated, call Achievement:GetTradeskillLayout() to get the achievement&apos;s position in the tech tree.">
            <Param Name="nSubcategoryId" Desc="The id number for the tradeskill&apos;s rank." Type="Integer" Id="15447"/>
            <ReturnValue Type="Achievement" Desc="An array of the achievements for the specified tradeskill rank." Array="true" Id="15448"/>
        </Function>
        <Function Name="GetAchievementPoints" Id="3276" Desc="Returns the number of achievement points that the player has earned from completed achievements.">
            <ReturnValue Type="Integer" Desc="The number of points the player has earned." Id="15425"/>
        </Function>
        <Function Name="GetRecentCompletedAchievements" Id="12370" Desc="Gets the latest achievements that the player has earned.">
            <Param Name="nMaxCount" Desc="The maximum number of values you want the achievement to return." Type="Integer" Id="15435"/>
            <Param Name="bGetGuild" Desc="Whether the function should return guild achievements or not." Type="Boolean" Id="15436"/>
            <ReturnValue Type="Achievement" Desc="An array of the most recent achievements the player has earned, in order of most recent to least." Array="true" Id="15437"/>
        </Function>
        <Function Name="GetGuildAchievementPoints" Id="16413" Desc="Returns the number of Guild Achivement Points the player&apos;s current guild has earned.">
            <ReturnValue Type="Integer" Desc="The number of Guild Achievement Points that the guild has earned." Id="17009"/>
        </Function>
        <Function Name="GetVisibleAchievements" Incomplete="true" Id="383" Deleted="true"/>
        <Function Name="GetAchievementData" Desc="Does a lua_newtable describing many (10+) fields relating to an achievement specified by nAchievementId." Incomplete="true" Id="386" Deleted="true"/>
        <Function Name="GetAchievementCategories" Desc="Does a lua_newtable with an index, id, and nameString of achievement categories." Incomplete="true" Id="389" Deleted="true"/>
    </Library>
    <Library Name="ChallengesLib" Id="390" Desc="A library that allows the UI to interact with the challenge system.">
        <Event Name="ChallengeActivate" Id="391" Desc="Fires whenever a challenge is activated">
            <Param Name="clgActivated" Type="Challenge" Id="394" Desc="The challenge that was activated."/>
            <Param Name="challengeId" Type="Integer" Id="392" Deleted="true"/>
            <Param Name="pszDescription" Type="String" Id="393" Deleted="true"/>
        </Event>
        <Event Name="ChallengeUnlocked" Id="395" Desc="Fires whenever a new challenge is unlocked.">
            <Param Name="clgUnlocked" Type="Challenge" Id="398" Desc="The challenge that was unlocked."/>
            <Param Name="challengeId" Type="Integer" Id="396" Deleted="true"/>
            <Param Name="header" Type="String" Id="397" Deleted="true"/>
            <Param Name="description" Type="String" Id="399" Deleted="true"/>
            <Param Name="duration" Type="Integer" Id="400" Deleted="true"/>
        </Event>
        <Event Name="ChallengeCompleted" Id="407" Desc="Fires whenever the player completes a challenge.">
            <Param Name="idChallenge" Type="Integer" Id="408" Desc="The id number of the challenge."/>
            <Param Name="strHeaderText" Type="String" Id="409" Desc="The channel&apos;s name."/>
            <Param Name="strDescription" Type="String" Id="410" Desc="The challenge&apos;s description text."/>
            <Param Name="nDuration" Type="Integer" Id="411" Desc="The amount of time (in milliseconds) that the Challenge Complete window will appear on the screen."/>
        </Event>
        <Event Name="ChallengeAbandon" Id="418" Desc="Fires whenever the player abandons a challenge, clears their challenge data, or reqests that the challenge is abandoned via the ChallengesLib.ShowAbandonChallenge() function">
            <Param Name="idChallenge" Type="Integer" Id="419" Desc="The id number of the challenge that was abandoned."/>
            <Param Name="strDescription" Type="String" Id="420" Desc="The challenge&apos;s fail message."/>
        </Event>
        <Event Name="ChallengeTypeAlreadyActive" Id="421" Desc="Fires whenever the player activates a challenge when they already have an active challenge of the same type." Remarks="Only one challenge of each type can be active at any given time.  If another is activated, the previous one is abandoned.">
            <Param Name="idActivating" Type="Integer" Id="422" Desc="The id of the challenge that was activated."/>
            <Param Name="idAbandoned" Type="Integer" Id="423" Desc="The id of the challenge that was abandoned."/>
            <Param Name="description" Type="String" Id="424" Deleted="true"/>
        </Event>
        <Event Name="ChallengeLeftArea" Id="425" Desc="Fires whenever the player leaves the challenge area.">
            <Param Name="idChallenge" Type="Integer" Id="426" Desc="The id number for the challenge that fired the event."/>
            <Param Name="strHeader" Type="String" Id="427" Desc="The header that should be shown on the challenge tracker after this event is fired."/>
            <Param Name="strDescription" Type="String" Id="428" Desc="The message that should be shown to the player after the event is fired."/>
        </Event>
        <Event Name="ChallengeFlashStartLocation" Id="430" Desc="Fires whenever the player leaves the challenge area and the challenge has a valid start location.  It tells the UI that it should attempt to lead the player back to the start location.">
            <Param Name="idChallenge" Type="Integer" Id="431" Desc="The id number for the challenge that fired the event."/>
            <Param Name="strDescription" Type="String" Id="432" Desc="The message that should be communicated to the player when the UI receives this message."/>
            <Param Name="fDuration" Type="Float" Id="433" Desc="How long the start location should flash, in seconds."/>
            <Param Name="tLocation" Type="Table" Id="434" Desc="The coordinates that the player should be directed towards.">
                <Item Name="x" Type="Float" Id="15772"/>
                <Item Name="y" Type="Float" Id="15773"/>
                <Item Name="z" Type="Float" Id="15774"/>
            </Param>
        </Event>
        <Function Name="GetActiveChallengeList" Desc="Gets a list of all of the challenges that the player has unlocked." Id="435" NotStandard="true" InternalNotes="This is either poorly named or not providing the advertised functionality.">
            <ReturnValue Type="Table" Id="436" Desc="A map of all of the player&apos;s unlocked challenges, indexed by Id.">
                <Item Name="id" Type="Integer" Id="437" Deleted="true"/>
                <Item Name="type" Type="Integer" Id="438" Deleted="true"/>
                <Item Name="currentCount" Type="Integer" Id="439" Deleted="true"/>
                <Item Name="totalCount" Type="Integer" Id="440" Deleted="true"/>
                <Item Name="currentTier" Type="Integer" Id="441" Deleted="true"/>
                <Item Name="completionCount" Type="Integer" Id="442" Deleted="true"/>
                <Item Name="completionTotal" Type="Integer" Id="443" Deleted="true"/>
                <Item Name="lastRewardTier" Type="Integer" Id="444" Deleted="true"/>
                <Item Name="bActivated" Type="Boolean" Id="445" Deleted="true"/>
                <Item Name="bUnlocked" Type="Boolean" Id="446" Deleted="true"/>
                <Item Name="bInCooldown" Type="Boolean" Id="447" Deleted="true"/>
                <Item Name="bCollectReward" Type="Boolean" Id="448" Deleted="true"/>
                <Item Name="strTitle" Type="String" Id="449" Deleted="true"/>
                <Item Name="strDesc" Type="String" Id="450" Deleted="true"/>
                <Item Name="timeStr" Type="String" Id="451" Deleted="true"/>
            </ReturnValue>
        </Function>
        <Function Name="ActivateChallenge" Desc="Activates the challenge with the specified id." Id="454" Example="If the challenge was unlocked, not activated, and not on cooldown, the server will respond with the ChallengeActivate event.">
            <Param Name="idChallenge" Type="Integer" Id="455" Desc="The id number of the challenge that the player wants to activate."/>
        </Function>
        <Function Name="ShowAbandonChallenge" Desc="Fires the ChallengeAbandoned event with a confirmation message." Id="456" NotStandard="true" InternalNotes="The event that is fired seems odd considering that it does not actually abandon the challenge." Example="It is worth noting that this function does NOT abandon the challenge.  The name of the event may give that impression, but it does not actually abandon it.">
            <Param Name="idChallenge" Type="Integer" Id="457" Desc="The id number of the challenge that the player is trying to abandon."/>
        </Function>
        <Function Name="AbandonChallenge" Desc="Abandons the challenge with the specified id." Id="458" Example="If the challenge was active, the server will respond with the ChallengeAbandon event.">
            <Param Name="idChallenge" Type="Integer" Id="459" Desc="The id number of the challenge that will be abandoned."/>
        </Function>
        <Function Name="ProcessRewards" Desc="Tells the server to choose the reward that the player will receive from the challenge." Id="460" Example="If this is called on a challenge that is not active, not on cooldown, and the player has received the challenge&apos;s reward list, then the server should fire the ChallengeRewardReady event once it has determined the reward the player will receive.">
            <Param Name="idChallenge" Type="Integer" Id="461" Desc="The server will attempt to choose the reward for the challenge with this id number."/>
            <Param Name="nRewardIdx" Desc="The reward number that the player selected to receive the bonus multiplier." Type="Integer" Id="15801"/>
        </Function>
        <Function Name="GetTimeRemaining" Desc="Gets the amount of time left for a specific timer used by the specified challenge." Incomplete="true" Id="462">
            <Param Name="idChallenge" Type="Integer" Id="463" Desc="The function will get the remaining time for the challenge with this id number."/>
            <Param Name="eTimerFlags" Type="Integer" Id="464" Desc="The type of timer that the function is searching for.  The different types of timers are found in the ChallengesLib.ChallengeTimerFlags set of contstants."/>
            <ReturnValue Type="String" Desc="The amount of time left for the challenge&apos;s timer, in string form." Id="15799"/>
        </Function>
        <Function Name="GetRewardList" Id="3095">
            <Param Name="idChallenge" Desc="The function will return the reward list for this challenge." Type="Integer" Id="15783"/>
            <ReturnValue Type="Table" Desc="A mostly-array that contains information on the different rewards that the quest can grant.  It is not a true array since strChallengeName is an index in the top level table, and not in any of the sub tables in the array." Array="true" Id="15784">
                <Item Name="strChallengeName" Desc="The name of the challenge.  This variable is an index of the array and not part of the individual tables in the array." Type="String" Id="15786"/>
                <Item Name="nChallengeTier" Desc="The challenge tier that the player has to achieve to select this reward." Type="Integer" Id="15787"/>
                <Item Name="idReward" Desc="The reward&apos;s id number." Type="Integer" Id="15788"/>
                <Item Name="nAmount" Desc="The number of the item that the player gets if the reward is chosen." Type="Integer" Id="15789"/>
                <Item Name="itemReward" Desc="The item that the player receives if this reward is selected." Type="Item" Id="15790"/>
                <Item Name="monReward" Desc="The money that the player receives if this reward is selected." Type="Money" Id="15791"/>
                <Item Name="splReward" Desc="The spell that is cast on the player if this reward is selected." Type="Spell" Id="15792"/>
                <Item Name="splAdvSpell" Desc="The spell that is granted if this reward is selected.  This type of spell is only granted during adventures." Type="Spell" Id="15793"/>
                <Item Name="nXP" Desc="The amount of XP that the player earns if this reward is selected.  This type of reward should only appear in adventures." Type="Integer" Id="15794"/>
                <Item Name="nRepId" Desc="The id number for the faction that the player gains reputation with if this reward is selected.  This reward type should only appear in adventures." Type="Integer" Id="15795"/>
                <Item Name="nRepAmount" Desc="The amount of reputation that the player gains if this reward is selected.  This reward type should only appear in adventures." Type="Integer" Id="15796"/>
            </ReturnValue>
        </Function>
        <Function Name="AcceptRewards" Id="3096" Desc="Attempts to collect a reward from a challenge." Example="This should only be called after the ChallengeRewardReady event has been fired for the challenge.">
            <Param Name="idChallenge" Desc="The function will attempt to grant the player the reward from the challenge with this id." Type="Integer" Id="15775"/>
        </Function>
        <Function Name="GenerateRewardList" Id="3277" Desc="Requests the challenge reward list for the specified quest from the server." Example="If the challenge has a reward that the player did not collect (Challenge:ShouldCollectReward() == true), the server will respond with the ChallengeRewardListReady event.">
            <Param Name="idChallenge" Desc="The function will request the challenge reward list for the challenge with this id number." Type="Integer" Id="15778"/>
        </Function>
        <Function Name="ShowHintArrow" Id="3278" Desc="Shows the hint arrow that points to the area where the specified challenge takes place.">
            <Param Name="idChallenge" Desc="The id number of the challenge that should show its hint arrow." Type="Integer" Id="15803"/>
        </Function>
        <Function Name="GetLootBonusMultiplier" Id="8365" Desc="Gets the bonus multiplier that a player can attach to a specific reward for a particular challenge tier.">
            <Param Name="nTier" Desc="The function will return the multiplier for this reward tier." Type="Integer" Id="15781"/>
            <ReturnValue Type="Integer" Desc="The multiplier that is granted to whatever reward the player selects in the challenge reward list." Id="15782"/>
        </Function>
        <Function Name="GetTierName" Id="8366" Desc="Gets the name for the specified challenge tier.">
            <Param Name="nTier" Desc="The function will get the name of this tier." Type="Integer" Id="15797"/>
            <ReturnValue Type="String" Desc="The name of the challenge tier.  If the tier number that was passed in was invalid, this will be an empty string." Id="15798"/>
        </Function>
        <Function Name="AcceptSharedChallenge" Id="8367" Deprecated="true" Desc="Accepts a challenge that another player has shared with the player." Remarks="Challenge sharing is not currently implemented, so this is currently depricated.">
            <Param Name="idChallenge" Desc="The id number for the challenge that was shared with the player." Type="Integer" Id="15776"/>
        </Function>
        <Function Name="RejectSharedChallenge" Id="8368" Desc="Declines a shared challenge.">
            <Param Name="idChallenge" Desc="The id number for the challenge that the function will reject." Type="Integer" Id="15802"/>
        </Function>
        <Function Name="AtChallengeStartLocation" Incomplete="true" Id="17255"/>
        <Event Name="ChallengeTierCompleted" Incomplete="true" Id="401" Deleted="true"/>
        <Event Name="ChallengeInfo" Incomplete="true" Id="412" Deleted="true"/>
        <Event Name="ChallengeUpdate" Incomplete="true" Id="417" Deleted="true"/>
        <Function Name="GetRewardData" Desc="Does a lua_newtable describing many (10+) fields relating to a reward specified by nChallengeId." Incomplete="true" Id="452" Deleted="true"/>
        <Function Name="GetTimeRemainingForScreen" Desc="Does a lua_pushwstring of the time remaining for screen specified by nChallengeId." Incomplete="true" Id="465" Deleted="true"/>
        <Function Name="GetAllRewardData" Incomplete="true" Id="2522" Deleted="true"/>
    </Library>
    <Library Name="ChatSystemLib" Incomplete="true" Id="467">
        <Function Name="JoinChannel" Desc="Attempts to join the specified channel." Id="473" NeedProofread="true" InternalNotes="Need to figure out what nOrder is for." Example="If the player is attempting to join a non-custom channel, then eChannel is the only parameter that should be sent.  Otherwise, everything except eChannel should be used.">
            <Param Name="eChannel" Desc="The channel that the player wants to join.  This value lines up with the ChatSystemLib.ChatChannel set of constants and is only used if the player is trying to join a channel that was set up by the game." Type="Integer" Id="15893"/>
            <Param Name="strChannelName" Desc="The name of the custom channel that the player is trying to join." Type="String" Id="15894"/>
            <Param Name="strPassword" Desc="The password that is required to join the chat channel." Type="String" Id="15895"/>
            <Param Name="nOrder" Desc="Unsure what this variable is for..." Type="Integer" Id="15896"/>
        </Function>
        <Function Name="GetChannels" Id="12371" Desc="Gets a list of channels that the player is in.">
            <ReturnValue Type="ChatChannel" Desc="An array of ChatChannels that the player is currently in." Array="true" Id="15882"/>
        </Function>
        <Function Name="PostOnChannel" Id="12372" Desc="Posts a text message to a specific chat channel.">
            <Param Name="eChannelId" Desc="The channel that the message will be posted to.  This value lines up with the ChatSystemLib.ChatChannel set of constants." Type="Integer" Id="15897"/>
            <Param Name="strMessage" Desc="The message that will be sent via the channel." Type="String" Id="15898"/>
            <Param Name="strSenderName" Desc="The name of the player or NPC that the channel will say that the message came from." Type="String" Id="15899"/>
            <Param Name="unitSource" Desc="The unit that the message came from." Type="Unit" Id="15900"/>
            <Param Name="bBubble" Desc="Whether the unit should show a speech bubble or not." Type="Boolean" Id="15901"/>
        </Function>
        <Function Name="SplitInput" Id="12373" Desc="Checks a string for a slash command and divides it into the command and its arguments.">
            <Param Name="strInput" Desc="The string that the function will split." Type="String" Id="15906"/>
            <ReturnValue Type="Table" Id="15907">
                <Item Name="chatCommand" Desc="The channel that the command was sent over." Type="ChatChannel" Id="15908"/>
                <Item Name="bValidCommand" Desc="Whether the command is recognized by the game or not." Type="Boolean" Id="15909"/>
                <Item Name="strCommand" Desc="The slash command portion of the string." Type="String" Id="15910"/>
                <Item Name="strMessage" Desc="The arguments that were sent along with the slash command." Type="String" Id="15911"/>
            </ReturnValue>
        </Function>
        <Function Name="Command" Id="12374" Desc="Processes the slash command that is sent through the function." Remarks="This function will process both commands that are built into the game and commands that are registered using Apollo.RegisterSlashCommand.">
            <Param Name="strCommand" Desc="The command that the chat system will process, along with any parameters required by the command." Type="String" Id="15881"/>
        </Function>
        <Function Name="GetEmotes" Id="12375" Desc="Gets a list of all of the emote commands available to the player.">
            <ReturnValue Type="String" Desc="An array of emote commands that the player can use." Array="true" Id="15884"/>
        </Function>
        <Function Name="GetCommands" Id="12376" Desc="Gets a list of commands that are available to the player." Remarks="The command list contains both game commands and any command registered via Apollo.RegisterSlashCommand">
            <ReturnValue Type="String" Desc="An array that contains the names of all of the commands that are available to the player." Array="true" Id="15883"/>
        </Function>
        <Function Name="PrepareInfractionReport" Id="12377" Desc="Creates an IncidentReport based on a specified chat line.">
            <Param Name="idChatLine" Desc="The id number for the chat line that the report will be created from." Type="Integer" Id="15904"/>
            <ReturnValue Type="rptChat" Desc="An IncidentReport that is populated with information pulled from the specified chat line." Id="15905"/>
        </Function>
        <Function Name="SendOnChannel" Incomplete="true" Id="468" Deleted="true"/>
        <Function Name="GetInputTypeForString" Desc="Does a lua_newtable with eType, nChannel, strChatType, strCommand, strAbbrev, strArgs, bCommandSet." Incomplete="true" Id="471" Deleted="true"/>
        <Function Name="LeaveChannel" Desc="Currently has no implementation" Incomplete="true" Id="474" Deleted="true"/>
        <Function Name="CreateChannel" Desc="Currently has no implementation" Incomplete="true" Id="475" Deleted="true"/>
    </Library>
    <Library Name="CombatFloater" Incomplete="true" Id="476">
        <Function Name="ShowTextFloater" Id="477" Desc="Displays a text floater coming from the specified unit." Example="This" NeedProofread="true" NotStandard="true" InternalNotes="There&apos;s quite a few things in here that I&apos;m kinda iffy about and would like to get clarification on.">
            <Param Name="unitSource" Type="Unit" Id="478" Desc="The unit that the floater will be tied to."/>
            <Param Name="nValue" Type="Integer" Default="null" Id="479" Desc="The value that should be shown on the floater."/>
            <Param Name="strValue" Desc="The text that should be shown on the floater." Type="String" Id="15931"/>
            <Param Type="Table" Name="tOptions" Id="15932" Desc="A table that contains a laundry list of ways the text floater can be manipulated.">
                <Item Name="nColor" Desc="A hex value that contains the RGB color values that the floater should use." Type="Integer" Id="15933"/>
                <Item Type="Table" Name="arFrames" Desc="A list of each frame of an animation that the floater will do." Id="15934">
                    <Item Name="fTime" Desc="The amount of time that the frame should last, in seconds." Type="Float" Id="15935"/>
                    <Item Name="fScale" Desc="The amount that the floater&apos;s text will be scaled by for this frame." Type="Float" Id="15936"/>
                    <Item Name="nColor" Desc="A hex value that contains the RGB values that the text will use this frame." Type="Integer" Id="15937"/>
                    <Item Name="fAlpha" Desc="The floater&apos;s alpha value this frame." Type="Float" Id="15938"/>
                    <Item Name="fRotation" Desc="The amount that the floater is rotated this frame, in degrees." Type="Float" Id="15939"/>
                    <Item Name="fVelocityDirection" Desc="The direction the text will move this frame, in degrees." Type="Float" Id="15940"/>
                    <Item Name="fVelocityDirectionRange" Desc="The amount of variation allowed in the velocity&apos;s direction, in degrees." Type="Float" Id="15941"/>
                    <Item Name="fVelocityMagnitude" Desc="The speed that the float text is moving at during this frame, in pixels." Type="Float" Id="15942"/>
                    <Item Name="fVelocityMagnitudeRange" Desc="The amount of variation in the velocity&apos;s magnitude that can be used during this frame, in pixels." Type="Float" Id="15943"/>
                    <Item Name="fAccelerationDirection" Desc="The direction that the float text will accelerate in during this frame, in degrees." Type="Float" Id="15944"/>
                    <Item Name="fAccelerationDirectionRange" Desc="The amount of variation in the float text&apos;s acceleration direction, in degrees." Type="Float" Id="15945"/>
                    <Item Name="fAccelerationMagnitude" Desc="The amount that the floater will accelerate by this frame, in pixels per second." Type="Float" Id="15946"/>
                    <Item Name="fAccelerationMagnitudeRange" Desc="The variation in the acceleration&apos;s magnitude that is possible this frame, in pixels per second." Type="Float" Id="15947"/>
                </Item>
                <Item Name="nDuration" Desc="How long the floater should stay on screen, in seconds.  This is only needed if arFrames was not used." Type="Integer" Id="15948"/>
                <Item Name="fDuration" Desc="How long the floater should stay on screen, in seconds.  This is only needed if arFrames was not used." Type="Float" Id="15949"/>
                <Item Name="nFadeInDuration" Desc="How long the floater should take to fade in, in seconds.  This is only needed if arFrames was not used." Type="Integer" Id="15950"/>
                <Item Name="fFadeInDuration" Desc="How long the floater should take to fade in, in seconds.  This is only needed if arFrames was not used." Type="Float" Id="15951"/>
                <Item Name="nFadeOutDuration" Desc="How long the floater should take to fade out, in seconds.  This is only needed if arFrames was not used." Type="Integer" Id="15952"/>
                <Item Name="fFadeOutDuration" Desc="How long the floater should take to fade out, in seconds.  This is only needed if arFrames was not used." Type="Float" Id="15953"/>
                <Item Name="nEndHoldDuration" Desc="How long the floater will hold its position before despawning, in seconds.  This is only needed if arFrames was not used." Type="Integer" Id="15975"/>
                <Item Name="fEndHoldDuration" Desc="How long the floater will hold its position before despawning, in seconds.  This is only needed if arFrames was not used." Type="Float" Id="15976"/>
                <Item Name="strFontFace" Desc="The name of the font face that the floater should use." Type="String" Id="15977"/>
                <Item Name="fSpinAroundRadius" Desc="How many degrees the text will spin every second." Type="Float" Id="15978"/>
                <Item Name="fVibrate" Desc="The range that the floater will vibrate between in the X and Y directions." Type="Float" Id="15979"/>
                <Item Name="eCollisionMode" Desc="The type of collision that the floater will use.  This prevents collistion with other floaters." Type="CombatFloater.CodeEnumFloaterCollisionMode" Id="15980"/>
                <Item Name="fExpandCollisionBoxWidth" Desc="The amount that is added to the floater&apos;s width when calculating collisions, in pixels." Type="Float" Id="15981"/>
                <Item Name="fExpandCollisionBoxHeight" Desc="The amount that is added to the floater&apos;s height when calculating collisions, in pixels." Type="Float" Id="15982"/>
                <Item Name="eLocation" Desc="The location on the unit that the floater will spawn from." Type="CombatFloater.CodeEnumFloaterLocation" Id="15983"/>
                <Item Name="fOffsetDirection" Desc="The direction that the floater will be offset from its spawn location, in degrees." Type="Float" Id="15984"/>
                <Item Name="fOffset" Desc="The amount that the floater will be offset from its spawn location, in pixels." Type="Float" Id="15985"/>
                <Item Name="iUseDigitSpriteSet" Desc="The id number of the sprite set of digits that the text floater should use." Type="Integer" Id="15986"/>
                <Item Name="nDigitSpriteSpacing" Desc="The amount of space between each sprite from the sprite set." Type="Integer" Id="15987"/>
                <Item Name="iUseBGSprite" Desc="The id of the BG Sprite that the float text should use." Type="Integer" Id="15988"/>
                <Item Name="nBGSpriteMargin" Desc="The margin between the edges of the floater and the BG Sprite, in pixels." Type="Integer" Id="15989"/>
                <Item Name="nBGSpriteColor" Desc="A hex value that contains the RGB values that will be applied to the BGSprite." Type="Integer" Id="15990"/>
                <Item Name="fBGSpriteAlpha" Desc="The alpha that is applied to the floater&apos;s BGSprite." Type="Float" Id="15991"/>
                <Item Name="bUseScreenPos" Desc="Whether the floater should use screen position instead of a location on a unit to determine its position." Type="Boolean" Id="15992"/>
                <Item Name="bShowOnTop" Desc="Whether the floater will draw over the top of other combat floaters and windows." Type="Boolean" Id="15993"/>
                <Item Name="nDelay" Desc="The delay between the floater&apos;s start time and when it actually spawns." Type="Integer" Id="15994"/>
                <Item Name="bReposition" Desc="Whether the floater can be moved or not." Type="Boolean" Id="15995"/>
            </Param>
        </Function>
        <Function Name="HideTextFloater" Id="480" Desc="Hides the CombatFloater from the screen.">
            <Param Name="pTextFloater" Type="UserData" Desc="converted to a CTextFloater" Id="481" Deleted="true"/>
        </Function>
        <Function Name="ShowParticleEffect" Id="482" NeedProofread="true" InternalNotes="Either this does not work or I&apos;m doing it wrong.  I&apos;m leaning towards doing it wrong." Desc="Displays a particle effect.">
            <Param Name="unitSource" Type="Unit" Id="483" Desc="The unit that the floater is attached to."/>
            <Param Name="tSettings" Type="Table" Desc="A table that contains the various options that should be set for the particle effect." Id="484">
                <Item Name="eEffect" Desc="The type of particle effect that should be shown." Type="CombatFloater.CodeEnumFloaterEffect" Id="15927"/>
                <Item Name="nDuration" Desc="How long the particle effect should last for, in seconds." Type="Integer" Id="15928"/>
                <Item Name="fDuration" Desc="How long the particle effect should last, in seconds." Type="Float" Id="15929"/>
                <Item Name="eLocation" Desc="The location on the unit that the effect should start from." Type="CombatFloater.CodeEnumFloaterLocation" Id="15930"/>
            </Param>
        </Function>
        <Function Name="AddDigitSpriteSet" Desc="Registers a sprite set that contains digits with the combat floater system." Id="485">
            <Param Name="strSpriteSetName" Type="String" Id="486" Desc="The path and file name of the sprite set that was registered with the system."/>
            <ReturnValue Type="Integer" Desc="The index that is assigned to the sprite set that was added to the system." Id="15921"/>
        </Function>
        <Function Name="AddTextBGSprite" Desc="Registers a background sprite with the float text system." Id="487">
            <Param Name="strSpriteName" Type="String" Id="488" Desc="The path and file name of the sprite that should be registered with the system."/>
            <ReturnValue Type="Integer" Desc="The index that was assigned to the sprite after it was registered." Id="15922"/>
        </Function>
        <Function Name="TestTextFloater" Desc="Passes the information given to the function back to the game in the form of a DamageOrHealingDone event." Id="489" Remarks="This function is primarily used to test out new floaters.">
            <Param Name="eDamageType" Type="GameLib.CodeEnumDamageType" Id="490" Desc="The type of damage that should be sent with the DamageOrHealingDone event."/>
            <Param Name="nHealthChange" Type="Integer" Id="491" Desc="The amount that the player&apos;s health changed by (according to the test floater)."/>
            <Param Name="nShieldAbsorbAmount" Desc="The amount of damage that the unit&apos;s shield absorbed (according to the floater)" Type="Integer" Id="15998"/>
            <Param Name="bCritical" Desc="Whether the test floater should show a critical hit or not." Type="Boolean" Id="15999"/>
            <Param Name="bCritical" Type="Boolean" Id="492" Deleted="true"/>
        </Function>
        <Function Name="SetMaxFloaterCount" Id="493" Desc="Sets the maximum number of floaters that can be on the screen at any one time.">
            <Param Name="nMaxFloaterCount" Type="Integer" Id="494" Desc="The new maximum number of floaters."/>
        </Function>
        <Function Name="SetMaxFloaterPerUnitCount" Id="495" Desc="Sets the maximum number of floating text messages that will be shown for any single unit at the same time.">
            <Param Name="nNewMaxFloaterCount" Type="Integer" Id="496" Desc="The new maximum number of floaters per unit."/>
        </Function>
        <EnumSet Name="CodeEnumFloaterLocation" Id="2062" Desc="The location on a unit that the floating text would spawn from."/>
        <EnumSet Name="CodeEnumFloaterCollisionMode" Id="2068" Desc="The collision modes that floating combat text can be set to."/>
        <EnumSet Name="CodeEnumFloaterEffect" Id="2072" Desc="A list of particle effects that can be added to floating combat text"/>
        <EnumSet Name="CodeEnumExpReason" Id="2086" Desc="The possible sources that a player can gain experience from.">
            <Enum Name="PeriodicQuest" Id="14756"/>
        </EnumSet>
        <EnumSet Name="CodeEnumCombatMomentum" Id="3282" Desc="The different types of Combat Momentum bonuses that a player can earn."/>
        <EnumSet Name="CodeEnumCCStateApplyRulesResult" Id="3289" Desc="The possible results when something attempts to apply a Crowd Control state to a unit.">
            <Enum Name="DiminishingReturns_TriggerCap" Id="8369"/>
            <Enum Name="Target_InterruptReduced" Id="6484" Deleted="true"/>
        </EnumSet>
        <Event Name="DamageOrHealingDone" Id="7033" Desc="Fires whenever damage or healing is done to a unit within the player&apos;s area of interest.">
            <Param Name="unitCaster" Desc="The unit that used the ability that caused the damage or healing." Type="Unit" Id="15912"/>
            <Param Name="unitTarget" Desc="The unit that received the damage or healing." Type="Unit" Id="15913"/>
            <Param Name="eDamageType" Desc="The type of damage that was done to the target." Type="GameLib.CodeEnumDamageType" Id="15914"/>
            <Param Name="nHealthChange" Desc="The amount that the target&apos;s health was changed by." Type="Integer" Id="15915"/>
            <Param Name="nShieldAbsorbAmount" Desc="The amount of damage that was absorbed by the unit&apos;s shields." Type="Integer" Id="15916"/>
            <Param Name="nAbsorbedAmount" Desc="The amount of damage that was absorbed by the unit&apos;s absorption shield." Type="Integer" Id="15917"/>
            <Param Name="bIsCritical" Desc="Whether the damage or healing effect was a critical hit." Type="Boolean" Id="15918"/>
            <Param Name="strSpellName" Desc="The name of the ability that caused the damage or healing." Type="String" Id="15919"/>
        </Event>
    </Library>
    <Library Name="CommunicatorLib" Id="497" Desc="A library that provides addons a way to manipulate communicator messages sent by NPCs.">
        <Event Name="Communicator_ShowSpamMsg" Id="498" NotTested="true" InternalNotes="Does not seem to be handled by the UI.  Will it ever be fired?" Desc="Fires if a communicator message is sent to the player but does not have a valid Quest tied to it.">
            <Param Name="idMsg" Type="Integer" Id="499" Desc="The id number of the communicator message."/>
            <Param Name="idCreature" Type="Integer" Id="500" Desc="The id number of the creature that sent the message."/>
            <Param Name="strText" Type="String" Id="502" Desc="The text that should be shown in the message."/>
            <Param Name="bPriorty" Type="Boolean" Id="503" Desc="Whether the message should have priority over other messages."/>
            <Param Name="nItemId" Type="Integer" Id="501" Deleted="true"/>
        </Event>
        <Event Name="Communicator_ShowQuestMsg" Id="504">
            <Param Name="idMsg" Desc="The id number for the message." Type="Integer" Id="16030"/>
            <Param Name="idCreature" Desc="The id number for the NPC that sent the communicator message." Type="Integer" Id="16031"/>
            <Param Name="queShown" Desc="The quest that the message will offer the player." Type="Quest" Id="16032"/>
            <Param Name="strText" Desc="The quest text that the message will show." Type="String" Id="16033"/>
            <Param Name="nMsgId" Type="Integer" Id="505" Deleted="true"/>
            <Param Name="nCreatureId" Type="Integer" Id="506" Deleted="true"/>
            <Param Name="nItemId" Type="Integer" Id="507" Deleted="true"/>
            <Param Name="nQuestId" Type="Integer" Id="508" Deleted="true"/>
            <Param Name="strText" Type="String" Id="509" Deleted="true"/>
        </Event>
        <Event Name="Communicator_EndIncoming" Id="510" Desc="Fires when an incoming communicator times out and becomes a &quot;missed call&quot;"/>
        <Event Name="Communicator_UpdateCallback" Id="511" Desc="Fires whenever a communicator message gets updated in response to a player abandoning, botching, or completing a quest.">
            <Param Name="bHasCallback" Type="Boolean" Id="512" Desc="Whether the player gets an immediate communicator message or not."/>
            <Param Name="bRedeemsQuest" Type="Boolean" Id="513" Desc="Whether the callback allows the player to turn in a quest or not."/>
        </Event>
        <Event Name="Communicator_SpamVOEnded" Id="514" Desc="Fires when a communicator&apos;s voice over ends." InternalNotes="Like ShowSpamMsg, idk that this is actually used anymore."/>
        <Function Name="GetMessageLayoutForQuest" Desc="Gets information regarding the layout of the portrait portion of a communicator message that is tied to a quest." Id="515" NotStandard="true" InternalNotes="Lots of constants being used here.">
            <ReturnValue Type="Table" Id="516">
                <Item Name="ePortraitPlacement" Type="Integer" Id="517" Desc="The location on the window that the portrait is assigned to.  This value lines up with the CommunicatorLib.CommunicatorPortraitPlacement set of constants."/>
                <Item Name="eOverlay" Type="Integer" Id="518" Desc="The static overlay that should be placed over the portrait.  This lines up with the CommunicatorLib.CommunicatorOverlay set of constants."/>
                <Item Name="eBackground" Type="Integer" Id="519" Desc="The background that should be used with the portrait.  This value lines up with the CommunicatorLib.CommunicatorBackground set of constants."/>
            </ReturnValue>
            <Param Name="queSource" Type="Quest" Id="520" Desc="The quest that the communicator message is tied to."/>
        </Function>
        <Function Name="GetMessageLayoutForSpam" Desc="Gets information regarding how the background on a spam message should be layed out." Id="521" NotStandard="true" InternalNotes="Lots of constants to convert to enums.">
            <ReturnValue Type="Table" Id="522">
                <Item Name="fDuration" Type="Float" Id="523" Desc="How long the message will remain on the screen, in seconds."/>
                <Item Name="ePortraitPlacement" Type="Integer" Id="524" Desc="Where the character portrait should appear on the communicator window.  This value corresponds with the CommunicatorLib.CommunicatorPortraitPlacement set of constants."/>
                <Item Name="eOverlay" Type="Integer" Id="525" Desc="Indicated which overlay should be drawn over the portrait.  This value corresponds with the CommunicatorLib.CommunicatorOverlay set of constants."/>
                <Item Name="eBackground" Type="Integer" Id="526" Desc="Indicated which background should be used with the portrait.  This value corresponds with the CommunicatorLib.CommunicatorBackground set of constants."/>
            </ReturnValue>
            <Param Name="idMessage" Type="Integer" Id="527" Desc="The id number for the spam message being queried."/>
        </Function>
        <Function Name="IsVisible" Desc="Determines whether or not a communicator message is currently being displayed." Id="528">
            <ReturnValue Type="Boolean" Id="529" Desc="If the communicator message is being displayed, this value will be true."/>
        </Function>
        <Function Name="CallContact" Desc="Begin the communicator message with the NPC associated with the specified quest." Id="530">
            <Param Name="queCalling" Type="Quest" Id="531" Desc="The quest that the player is trying to accept or turn in via the communicator."/>
        </Function>
        <Function Name="CallbackLastContact" Desc="Begin a communicator message with the NPC that sent the most recent message." Id="532"/>
        <Function Name="IgnoreCallback" Desc="Cancel an incoming communicator message." Id="533"/>
        <Function Name="PlaySpamVo" Desc="Plays the voice over for the specified communicator message." Id="534">
            <Param Name="idMessage" Type="Integer" Id="535" Desc="The id number for the communicator message that should play its Voice Over."/>
            <ReturnValue Type="Boolean" Desc="Whether there was actually a voice over to play or not." Id="16036"/>
        </Function>
        <Function Name="Close" Desc="Closes the communicator message that is currently open." Id="536"/>
        <Function Name="QueueNextCall" Id="2523" Desc="Add the specified message to the message queue.">
            <Param Name="idMessage" Desc="The id number of the message that will be thrown on the queue." Type="Integer" Id="16037"/>
        </Function>
        <Function Name="GetPathMissionDelivered" Id="3298" InternalNotes="May be depricated?" Desc="Gets the Path Mission that the player unlocks via the communicator message.">
            <Param Name="idMessage" Desc="The id number for the communicator message." Type="Integer" Id="16034"/>
            <ReturnValue Type="PathMission" Desc="The Path Mission that is unlocked for the player via the communicator message with the specified id." Id="16035"/>
        </Function>
    </Library>
    <Library Name="GameLib" Incomplete="true" Id="537">
        <Function Name="GetPlayerTaxiUnit" Desc="Returna the taxi that the player is currently on." Incomplete="true" Id="548">
            <ReturnValue Type="Unit" Id="549" Desc="The taxi that the player is riding"/>
        </Function>
        <EnumSet Name="CodeEnumDamageType" Incomplete="true" Id="2134">
            <Enum Name="Fire" Id="2135" Deleted="true"/>
            <Enum Name="Cold" Id="2136" Deleted="true"/>
            <Enum Name="Electric" Id="2137" Deleted="true"/>
            <Enum Name="Mental" Id="2138" Deleted="true"/>
            <Enum Name="Nature" Id="2139" Deleted="true"/>
            <Enum Name="Shadow" Id="2140" Deleted="true"/>
            <Enum Name="Cut" Id="2141" Deleted="true"/>
            <Enum Name="Crush" Id="2142" Deleted="true"/>
            <Enum Name="Impale" Id="2143" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumMissType" Incomplete="true" Id="2147">
            <Enum Name="Block" Id="2149" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumStoryPanel" Incomplete="true" Id="3312">
            <Enum Name="Informational" Id="9484"/>
        </EnumSet>
        <EnumSet Name="CodeEnumTutorialAnchor" Incomplete="true" Id="3329">
            <Enum Name="HUDAlert" Id="9485"/>
            <Enum Name="PressAndHold" Id="9486"/>
            <Enum Name="RapidTapping" Id="9487"/>
            <Enum Name="PrecisionTapping" Id="9488"/>
            <Enum Name="Memory" Id="9489"/>
            <Enum Name="Keypad" Id="9490"/>
            <Enum Name="Metronome" Id="9491"/>
            <Enum Name="ShieldBar" Id="9492"/>
            <Enum Name="InnateAbility" Id="9493"/>
            <Enum Name="DashMeter" Id="9494"/>
            <Enum Name="SprintMeter" Id="9495"/>
            <Enum Name="HealthBar" Id="9496"/>
            <Enum Name="BuffFrame" Id="9497"/>
            <Enum Name="ClassResource" Id="9498"/>
            <Enum Name="QuestCommunicatorReceived" Id="9499"/>
            <Enum Name="DatachronBody" Id="9500"/>
            <Enum Name="Recall" Id="9501"/>
            <Enum Name="InterruptArmor" Id="17185"/>
            <Enum Name="Contracts" Id="17256"/>
            <Enum Name="CharacterPanel" Id="3305" Deleted="true"/>
            <Enum Name="AbilityWindow" Id="3306" Deleted="true"/>
            <Enum Name="Codex" Id="3331" Deleted="true"/>
            <Enum Name="Inventory" Id="3340" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumClass" Incomplete="true" Id="3334">
            <Enum Name="Corrupted" Id="7039" Deleted="true"/>
            <Enum Name="DarkWeaver" Id="7041" Deleted="true"/>
            <Enum Name="Charmer" Id="7042" Deleted="true"/>
            <Enum Name="TempWarrior1" Id="7043" Deleted="true"/>
            <Enum Name="TempWarrior2" Id="7044" Deleted="true"/>
            <Enum Name="TempWarrior3" Id="7045" Deleted="true"/>
            <Enum Name="TempEsper1" Id="7046" Deleted="true"/>
            <Enum Name="TempEsper2" Id="7047" Deleted="true"/>
            <Enum Name="TempSpellslinger1" Id="7048" Deleted="true"/>
            <Enum Name="TempSpellslinger2" Id="7049" Deleted="true"/>
            <Enum Name="TempMedic1" Id="7050" Deleted="true"/>
            <Enum Name="TempMedic2" Id="7051" Deleted="true"/>
            <Enum Name="TempBeserker1" Id="7052" Deleted="true"/>
            <Enum Name="TempBeserker2" Id="7053" Deleted="true"/>
            <Enum Name="TempStalker1" Id="7054" Deleted="true"/>
            <Enum Name="TempStalker2" Id="7055" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRecallCommand" Incomplete="true" Id="3344">
            <Enum Name="Illium" Id="12379"/>
            <Enum Name="Thayd" Id="12380"/>
        </EnumSet>
        <EnumSet Name="CodeEnumUserText" Incomplete="true" Id="3353">
            <Enum Name="ReadyCheck" Id="8370"/>
            <Enum Name="ChatCustomChannelPassword" Id="8371"/>
            <Enum Name="GuildMessageOfTheDay" Id="8372"/>
            <Enum Name="GuildMemberNote" Id="8373"/>
            <Enum Name="GuildRercuitDescription" Id="8374"/>
            <Enum Name="GuildInfoMessage" Id="8375"/>
            <Enum Name="FriendshipAccountName" Id="8376"/>
            <Enum Name="FriendshipAccountPrivateNote" Id="8377"/>
            <Enum Name="FriendshipAccountPublicNote" Id="8378"/>
            <Enum Name="FriendshipAccountEmail" Id="8379"/>
            <Enum Name="FriendshipInviteNote" Id="8380"/>
            <Enum Name="PlayerTicketText" Id="16414"/>
            <Enum Name="GuildRecruitDescription" Id="17050"/>
            <Enum Name="PlayerTicketSubject" Id="17051"/>
        </EnumSet>
        <EnumSet Name="CodeEnumTutorial" Incomplete="true" Id="4422">
            <Enum Name="Crafting_UI_Tutorial" Id="9502"/>
            <Enum Name="Special_Ability_Chips" Id="9503"/>
            <Enum Name="Tradeskill_Codex_Tutorial" Id="9504"/>
            <Enum Name="Crafting_Components_Tutorial" Id="9505"/>
            <Enum Name="Crafting_Station_Tutorial" Id="9506"/>
            <Enum Name="Basic_Salvaging_Tutorial" Id="9507"/>
            <Enum Name="QuestCommunicatorGiven" Id="9508"/>
            <Enum Name="QuestAccepted" Id="9509"/>
            <Enum Name="QuestAchieved" Id="9510"/>
            <Enum Name="QuestBotched" Id="9511"/>
            <Enum Name="QuestCommunicatorReceived" Id="9512"/>
            <Enum Name="ChallengeUnlocked" Id="9513"/>
            <Enum Name="ChallengeCompleted" Id="9514"/>
            <Enum Name="ChallengeRewardPanel" Id="9515"/>
            <Enum Name="AchievementCompleted" Id="9516"/>
            <Enum Name="Telegraphs" Id="9517"/>
            <Enum Name="NewBindpoint" Id="9518"/>
            <Enum Name="Path_MissionComplete" Id="9519"/>
            <Enum Name="Path_EpisodeComplete" Id="9520"/>
            <Enum Name="Soldier_MissionUnlock" Id="9521"/>
            <Enum Name="Soldier_TowerDefense" Id="9522"/>
            <Enum Name="Soldier_Assassinate" Id="9523"/>
            <Enum Name="Soldier_SWAT" Id="9524"/>
            <Enum Name="Soldier_Demolition" Id="9525"/>
            <Enum Name="Soldier_Rescue" Id="9526"/>
            <Enum Name="Explorer_MissionUnlock" Id="9527"/>
            <Enum Name="Explorer_Vista" Id="9528"/>
            <Enum Name="Explorer_ClaimTerritory" Id="9529"/>
            <Enum Name="Explorer_Door" Id="9530"/>
            <Enum Name="Explorer_ScavengerHunt" Id="9531"/>
            <Enum Name="Explorer_PowerMap" Id="9532"/>
            <Enum Name="Scientist_FieldStudy" Id="9533"/>
            <Enum Name="Settler_MissionUnlock" Id="9534"/>
            <Enum Name="Settler_Infrastructure" Id="9535"/>
            <Enum Name="Settler_DepotActivate" Id="9536"/>
            <Enum Name="Death" Id="9537"/>
            <Enum Name="Hazards" Id="9538"/>
            <Enum Name="PublicEventStart" Id="9539"/>
            <Enum Name="GalacticArchive_NewEntry" Id="9540"/>
            <Enum Name="Soldier_StopTheThieves" Id="9541"/>
            <Enum Name="Soldier_WhackAMole" Id="9542"/>
            <Enum Name="Farmer_Powershrooms" Id="9543"/>
            <Enum Name="General_Quest_SpellShortcut" Id="9544"/>
            <Enum Name="CoordinateCrafting" Id="9545"/>
            <Enum Name="CombatBuff" Id="9546"/>
            <Enum Name="General_Social" Id="9547"/>
            <Enum Name="QuestCommunicatorMissed" Id="9548"/>
            <Enum Name="MailMenu" Id="9549"/>
            <Enum Name="CSI_PressAndHold" Id="9550"/>
            <Enum Name="CSI_RapidTapping" Id="9551"/>
            <Enum Name="CSI_PrecisionTapping" Id="9552"/>
            <Enum Name="CSI_Memory" Id="9553"/>
            <Enum Name="CSI_KeyPad" Id="9554"/>
            <Enum Name="CSI_Metronome" Id="9555"/>
            <Enum Name="QuestCommunicatorDeclined" Id="9556"/>
            <Enum Name="General_Lore" Id="9557"/>
            <Enum Name="GroupFinderMenu" Id="9558"/>
            <Enum Name="Renown" Id="9559"/>
            <Enum Name="AMPs" Id="9560"/>
            <Enum Name="Reputation" Id="9561"/>
            <Enum Name="Housing_Landscape" Id="9562"/>
            <Enum Name="Housing_House" Id="9563"/>
            <Enum Name="Housing_Crate" Id="9564"/>
            <Enum Name="Housing_Vendor" Id="9565"/>
            <Enum Name="Housing_Room" Id="9566"/>
            <Enum Name="General_CREDD" Id="14757"/>
            <Enum Name="General_AccountServices" Id="14758"/>
            <Enum Name="Contracts" Id="17257"/>
            <Enum Name="Inventory" Id="7079" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumGenericError" Incomplete="true" Id="4427">
            <Enum Name="Reserved02" Id="9567"/>
            <Enum Name="Reserved03" Id="9568"/>
            <Enum Name="Reserved04" Id="9569"/>
            <Enum Name="Auction_NotReady" Id="9570"/>
            <Enum Name="Auction_CannotFillOrder" Id="9571"/>
            <Enum Name="Auction_TooManyOrders" Id="9572"/>
            <Enum Name="Auction_OrderTooBig" Id="9573"/>
            <Enum Name="Auction_NotFound" Id="9574"/>
            <Enum Name="Auction_BidTooLow" Id="9575"/>
            <Enum Name="Auction_OwnItem" Id="9576"/>
            <Enum Name="Auction_BidTooHigh" Id="9577"/>
            <Enum Name="Auction_AlreadyHasBid" Id="9578"/>
            <Enum Name="Mail_InvalidDeliverySpeed" Id="9579"/>
            <Enum Name="Housing_InvalidDecorPlacement" Id="9580"/>
            <Enum Name="Instance_LimitExceeded" Id="9581"/>
            <Enum Name="Craft_UnknownSchematic" Id="9582"/>
            <Enum Name="Craft_MicrochipInvalidSocket" Id="9583"/>
            <Enum Name="Craft_MicrochipInvalidSlot" Id="9584"/>
            <Enum Name="Craft_FailChanceTooHigh" Id="9585"/>
            <Enum Name="Instance_EncounterInProgress" Id="9586"/>
            <Enum Name="Instance_Full" Id="9587"/>
            <Enum Name="Housing_CrateFull" Id="9588"/>
            <Enum Name="TargetBusy" Id="9589"/>
            <Enum Name="Mail_CannotReturn" Id="9590"/>
            <Enum Name="Mail_CannotMailSelf" Id="9591"/>
            <Enum Name="Faction_AtMax" Id="9592"/>
            <Enum Name="Housing_MaxDecor" Id="9593"/>
            <Enum Name="Auction_ItemAuctionDisabled" Id="9594"/>
            <Enum Name="Auction_CommodityDisabled" Id="9595"/>
            <Enum Name="Mail_CannotMailTrialAccount" Id="12381"/>
            <Enum Name="MissingEntitlement" Id="12382"/>
            <Enum Name="Instance_TransferPending" Id="12383"/>
            <Enum Name="Instance_InvalidDestination" Id="12384"/>
            <Enum Name="Instance_NotInGroup" Id="12385"/>
            <Enum Name="Instance_DifferentSavedInstance" Id="12386"/>
            <Enum Name="Instance_InstanceInUse" Id="12387"/>
            <Enum Name="Item_WrongFaction" Id="12388"/>
            <Enum Name="Instance_WrongLevel" Id="14759"/>
            <Enum Name="Mail_Squelched" Id="14760"/>
            <Enum Name="LootForge_QualityMismatch" Id="17052"/>
            <Enum Name="LootForge_InvalidItem" Id="17053"/>
            <Enum Name="LootForge_CountMismatch" Id="17054"/>
            <Enum Name="LootForge_Invalid" Id="17055"/>
            <Enum Name="RewardTrack_CannotClaim" Id="17186"/>
            <Enum Name="RewardTrack_InvalidRewardChoice" Id="17187"/>
            <Enum Name="RewardTrack_InvalidTrackChoice" Id="17188"/>
            <Enum Name="RewardTrack_TrackNotActive" Id="17189"/>
            <Enum Name="RewardTrack_TrackAlreadyActive" Id="17190"/>
            <Enum Name="Item_EquipPrereqFailed" Id="17191"/>
        </EnumSet>
        <EnumSet Name="CodeEnumVital" Incomplete="true" Id="7182">
            <Enum Name="Volatility" Id="9596"/>
            <Enum Name="Resource8" Id="17056"/>
            <Enum Name="Resource9" Id="17057"/>
            <Enum Name="Resource10" Id="17058"/>
        </EnumSet>
        <EnumSet Name="CodeEnumTutorialCategory" Incomplete="true" Id="7207">
            <Enum Name="UNUSED12" Id="14761"/>
            <Enum Name="UNUSED13" Id="14762"/>
            <Enum Name="UNUSED14" Id="14763"/>
            <Enum Name="UNUSED15" Id="14764"/>
            <Enum Name="UNUSED16" Id="14765"/>
            <Enum Name="UNUSED17" Id="14766"/>
            <Enum Name="UNUSED18" Id="14767"/>
            <Enum Name="UNUSED19" Id="14768"/>
            <Enum Name="UNUSED20" Id="14769"/>
            <Enum Name="UNUSED21" Id="14770"/>
            <Enum Name="UNUSED22" Id="14771"/>
            <Enum Name="UNUSED23" Id="14772"/>
            <Enum Name="UNUSED24" Id="14773"/>
            <Enum Name="UNUSED25" Id="14774"/>
            <Enum Name="UNUSED26" Id="14775"/>
            <Enum Name="UNUSED27" Id="14776"/>
            <Enum Name="Tradeskills" Id="14777"/>
            <Enum Name="Zones" Id="14778"/>
            <Enum Name="Classes" Id="14779"/>
        </EnumSet>
        <Function Name="GetPlayerLevel" Incomplete="true" Id="8381"/>
        <Function Name="GetClassInnateAbilitySpells" Incomplete="true" Id="8382"/>
        <Function Name="GetNumClassInnateAbilitySpells" Incomplete="true" Id="8383"/>
        <Function Name="GetCurrentClassInnateAbilitySpell" Incomplete="true" Id="8384"/>
        <Function Name="GetCurrentClassInnateAbilityIndex" Incomplete="true" Id="8385"/>
        <Function Name="SetCurrentClassInnateAbilityIndex" Incomplete="true" Id="8386"/>
        <Function Name="IsCurrentInnateAbilityActive" Incomplete="true" Id="8387"/>
        <Function Name="IsSpellSurgeActive" Incomplete="true" Id="8388"/>
        <Function Name="IsOverdriveActive" Incomplete="true" Id="8389"/>
        <Function Name="GetGadgetAbility" Incomplete="true" Id="8390"/>
        <Function Name="GetServerTime" Incomplete="true" Id="8391"/>
        <Function Name="SetMouseLock" Incomplete="true" Id="8392"/>
        <Function Name="IsMouseLockOn" Incomplete="true" Id="8393"/>
        <Function Name="GetFrameRate" Incomplete="true" Id="8394"/>
        <Function Name="GetSpellThresholdTimePrcntDone" Incomplete="true" Id="8395"/>
        <Function Name="GetDyeUnlockLevel" Incomplete="true" Id="8396"/>
        <Function Name="CanDye" Incomplete="true" Id="8397"/>
        <Function Name="ShowGuildHolomark" Incomplete="true" Id="8398"/>
        <Function Name="GetGuildHolomarkVisible" Incomplete="true" Id="8399"/>
        <Function Name="SearchRelationshipStatusByCharacterName" Incomplete="true" Id="8400"/>
        <Function Name="IsInLocation" Incomplete="true" Id="8401"/>
        <Function Name="GetCurrentZonePvpRules" Incomplete="true" Id="8402"/>
        <Function Name="GetAllZoneCompletionMapZones" Incomplete="true" Id="8403"/>
        <Function Name="IsTutorialCategoryVisible" Incomplete="true" Id="8404"/>
        <Function Name="PlayTutorialSound" Incomplete="true" Id="8405"/>
        <Function Name="StopTutorialSound" Incomplete="true" Id="8406"/>
        <Function Name="HasTutorialSound" Incomplete="true" Id="8407"/>
        <Function Name="GetCostumeCount" Incomplete="true" Id="8408"/>
        <Function Name="GetCostumeUnlockLevel" Incomplete="true" Id="8409"/>
        <Function Name="GetTotalAbilityPoints" Incomplete="true" Id="8410"/>
        <Function Name="IsNeedRollAllowed" Incomplete="true" Id="8411"/>
        <Function Name="SupportStuck" Incomplete="true" Id="8412"/>
        <Function Name="GetStuckCooldowns" Incomplete="true" Id="8413"/>
        <Function Name="GetDuelState" Incomplete="true" Id="8414"/>
        <Function Name="IsPvpServer" Incomplete="true" Id="8415"/>
        <Function Name="GetTextTypeMaxLength" Incomplete="true" Id="8416"/>
        <Function Name="GetAvailableTargetMarkers" Incomplete="true" Id="8417"/>
        <Function Name="GetUnitScreenPosition" Incomplete="true" Id="8418"/>
        <Function Name="GetGameCommand" Incomplete="true" Id="8419"/>
        <Function Name="GetLevelUpUnlockTypes" Id="8420" Incomplete="true"/>
        <Function Name="GetLevelUpUnlock" Incomplete="true" Id="8421"/>
        <Function Name="GetPendingLevelUpUnlocks" Incomplete="true" Id="8422"/>
        <Function Name="GetUnlocksForLevel" Incomplete="true" Id="8423"/>
        <Function Name="IsLevelUpUnlockViewed" Incomplete="true" Id="8424"/>
        <Function Name="MarkLevelUpUnlockViewed" Incomplete="true" Id="8425"/>
        <Function Name="ResetLevelUpUnlocks" Incomplete="true" Id="8426"/>
        <Function Name="GetLevelUpFanfareDuration" Incomplete="true" Id="8427"/>
        <Function Name="GetZoneCompletionTypes" Incomplete="true" Id="8428"/>
        <Function Name="GetZoneCompletion" Incomplete="true" Id="8429"/>
        <Function Name="GetWorldCompletionPercent" Incomplete="true" Id="8430"/>
        <Function Name="GetZoneExplorationPercent" Incomplete="true" Id="8431"/>
        <Function Name="SetWorldTooltipContainer" Incomplete="true" Id="8432"/>
        <Function Name="GetWorldTooltipContainer" Incomplete="true" Id="8433"/>
        <Function Name="MarkCityDirection" Incomplete="true" Id="8434"/>
        <Function Name="ClearCityDirection" Incomplete="true" Id="8435"/>
        <Function Name="SetSharedChallengePreference" Incomplete="true" Id="8436"/>
        <EnumSet Name="CodeEnumRace" Incomplete="true" Id="8437">
            <Enum Name="Human" Id="8438"/>
            <Enum Name="Granok" Id="8439"/>
            <Enum Name="Aurin" Id="8440"/>
            <Enum Name="Draken" Id="8441"/>
            <Enum Name="Mechari" Id="8442"/>
            <Enum Name="Mordesh" Id="8443"/>
            <Enum Name="Chua" Id="8444"/>
        </EnumSet>
        <EnumSet Name="CodeEnumZonePvpRules" Incomplete="true" Id="8445">
            <Enum Name="None" Id="8446"/>
            <Enum Name="ExileStronghold" Id="8447"/>
            <Enum Name="DominionStronghold" Id="8448"/>
            <Enum Name="Sanctuary" Id="8449"/>
            <Enum Name="Pvp" Id="8450"/>
            <Enum Name="ExilePVPStronghold" Id="8451"/>
            <Enum Name="DominionPVPStronghold" Id="8452"/>
        </EnumSet>
        <EnumSet Name="CodeEnumEquippedItems" Incomplete="true" Id="8453">
            <Enum Name="Chest" Id="8454"/>
            <Enum Name="Legs" Id="8455"/>
            <Enum Name="Head" Id="8456"/>
            <Enum Name="Shoulder" Id="8457"/>
            <Enum Name="Feet" Id="8458"/>
            <Enum Name="Hands" Id="8459"/>
            <Enum Name="WeaponTool" Id="8460"/>
            <Enum Name="WeaponAttachment" Id="8461"/>
            <Enum Name="System" Id="8462"/>
            <Enum Name="Augment" Id="8463"/>
            <Enum Name="Implant" Id="8464"/>
            <Enum Name="Gadget" Id="8465"/>
            <Enum Name="Shields" Id="8466"/>
            <Enum Name="WeaponPrimary" Id="8467"/>
            <Enum Name="Bag0" Id="8468"/>
            <Enum Name="Bag1" Id="8469"/>
            <Enum Name="Bag2" Id="8470"/>
            <Enum Name="Bag3" Id="8471"/>
            <Enum Name="BankBag0" Id="8472"/>
            <Enum Name="BankBag1" Id="8473"/>
            <Enum Name="BankBag2" Id="8474"/>
            <Enum Name="BankBag3" Id="8475"/>
            <Enum Name="BankBag4" Id="8476"/>
        </EnumSet>
        <EnumSet Name="CodeEnumZoneCompletionType" Incomplete="true" Id="8477">
            <Enum Name="EpisodeQuest" Id="8478"/>
            <Enum Name="TaskQuest" Id="8479"/>
            <Enum Name="Challenge" Id="8480"/>
            <Enum Name="TaxiNode" Id="8481"/>
            <Enum Name="Datacube" Id="8482"/>
            <Enum Name="Tale" Id="8483"/>
            <Enum Name="Journal" Id="8484"/>
        </EnumSet>
        <EnumSet Name="CityDirectionType" Incomplete="true" Id="8485">
            <Enum Name="Mailbox" Id="8486"/>
            <Enum Name="Bank" Id="8487"/>
            <Enum Name="AuctionHouse" Id="8488"/>
            <Enum Name="CommodityMarket" Id="8489"/>
            <Enum Name="AbilityVendor" Id="8490"/>
            <Enum Name="Tradeskill" Id="8491"/>
            <Enum Name="General" Id="8492"/>
            <Enum Name="HousingNpc" Id="8493"/>
            <Enum Name="Transport" Id="8494"/>
        </EnumSet>
        <EnumSet Name="CodeEnumConfirmButtonType" Incomplete="true" Id="8495">
            <Enum Name="SendMail" Id="8496"/>
            <Enum Name="CommitTrade" Id="8497"/>
            <Enum Name="DeleteItem" Id="8498"/>
            <Enum Name="SalvageItem" Id="8499"/>
            <Enum Name="EquipItem" Id="14780"/>
            <Enum Name="CraftingAbandon" Id="14781"/>
            <Enum Name="MarketplaceAuctionSellSubmit" Id="14782"/>
            <Enum Name="MarketplaceAuctionBuySubmit" Id="14783"/>
            <Enum Name="MarketplaceCommoditiesSubmit" Id="14784"/>
            <Enum Name="AccountClaimItem" Id="14785"/>
            <Enum Name="AccountTakeItem" Id="14786"/>
            <Enum Name="AccountGiftItem" Id="14787"/>
            <Enum Name="AccountGiftItemReturn" Id="14788"/>
            <Enum Name="CREDDExchangeSubmit" Id="14789"/>
            <Enum Name="AccountCreddRedeem" Id="14790"/>
            <Enum Name="CopyToClipboard" Id="14791"/>
            <Enum Name="MatchingGameRespondToPending" Id="14792"/>
            <Enum Name="ReportPlayer" Id="14793"/>
            <Enum Name="GenericMapNodeChoose" Id="14794"/>
            <Enum Name="SubmitSupportTicket" Id="14795"/>
            <Enum Name="LootItem" Id="16415"/>
            <Enum Name="EldanForge" Id="17059"/>
            <Enum Name="RuneSlotReroll" Id="17060"/>
            <Enum Name="RuneSlotFinishReroll" Id="17061"/>
            <Enum Name="UnlockCostumeItem" Id="17258"/>
            <Enum Name="ForgetCostumeItem" Id="17259"/>
            <Enum Name="SaveCostumeChanges" Id="17260"/>
        </EnumSet>
        <Function Name="GetGuildHolomarkDistance" Incomplete="true" Id="9087"/>
        <Function Name="GetVersionInfo" Incomplete="true" Id="9597"/>
        <Function Name="GetKeyBindingByEnum" Incomplete="true" Id="9598"/>
        <Function Name="GetInputActionNameByEnum" Incomplete="true" Id="9599"/>
        <Function Name="Cheat_MakeMeLevel50" Incomplete="true" Id="9600"/>
        <EnumSet Name="CodeEnumMapOverlayType" Incomplete="true" Id="9601">
            <Enum Name="Unit" Id="9602"/>
            <Enum Name="Object" Id="9603"/>
            <Enum Name="PathObjective" Id="9604"/>
            <Enum Name="QuestObjective" Id="9605"/>
        </EnumSet>
        <EnumSet Name="CodeEnumInputAction" Incomplete="true" Id="9606">
            <Enum Name="Nothing" Id="9607"/>
            <Enum Name="Options" Id="9608"/>
            <Enum Name="CharacterPanel" Id="9609"/>
            <Enum Name="Inventory" Id="9610"/>
            <Enum Name="QuestLog" Id="9611"/>
            <Enum Name="Communicator" Id="9612"/>
            <Enum Name="Escape" Id="9613"/>
            <Enum Name="Shift" Id="9614"/>
            <Enum Name="Control" Id="9615"/>
            <Enum Name="Select" Id="9616"/>
            <Enum Name="MouseInteract" Id="9617"/>
            <Enum Name="Interact" Id="9618"/>
            <Enum Name="HostileInteract" Id="9619"/>
            <Enum Name="TargetSelf" Id="9620"/>
            <Enum Name="TargetParty1" Id="9621"/>
            <Enum Name="TargetParty2" Id="9622"/>
            <Enum Name="TargetParty3" Id="9623"/>
            <Enum Name="TargetParty4" Id="9624"/>
            <Enum Name="TargetNextEnemy" Id="9625"/>
            <Enum Name="TargetPreviousEnemy" Id="9626"/>
            <Enum Name="TargetNextFriend" Id="9627"/>
            <Enum Name="TargetPreviousFriend" Id="9628"/>
            <Enum Name="AssistTarget" Id="9629"/>
            <Enum Name="MoveForward" Id="9630"/>
            <Enum Name="MoveBackward" Id="9631"/>
            <Enum Name="StrafeLeft" Id="9632"/>
            <Enum Name="StrafeRight" Id="9633"/>
            <Enum Name="TurnLeft" Id="9634"/>
            <Enum Name="TurnRight" Id="9635"/>
            <Enum Name="PitchUp" Id="9636"/>
            <Enum Name="PitchDown" Id="9637"/>
            <Enum Name="MouseTurn" Id="9638"/>
            <Enum Name="SprintModifier" Id="9639"/>
            <Enum Name="VacuumLoot" Id="9640"/>
            <Enum Name="PathAction" Id="9641"/>
            <Enum Name="Jump" Id="9642"/>
            <Enum Name="Dismount" Id="9643"/>
            <Enum Name="ToggleSit" Id="9644"/>
            <Enum Name="ToggleWalk" Id="9645"/>
            <Enum Name="ToggleAutoRun" Id="9646"/>
            <Enum Name="CameraUp" Id="9647"/>
            <Enum Name="CameraDown" Id="9648"/>
            <Enum Name="CameraLeft" Id="9649"/>
            <Enum Name="CameraRight" Id="9650"/>
            <Enum Name="CameraIn" Id="9651"/>
            <Enum Name="CameraOut" Id="9652"/>
            <Enum Name="MouseLook" Id="9653"/>
            <Enum Name="CastObjectiveAbility" Id="9654"/>
            <Enum Name="LimitedActionSet1" Id="9655"/>
            <Enum Name="LimitedActionSet2" Id="9656"/>
            <Enum Name="LimitedActionSet3" Id="9657"/>
            <Enum Name="LimitedActionSet4" Id="9658"/>
            <Enum Name="LimitedActionSet5" Id="9659"/>
            <Enum Name="LimitedActionSet6" Id="9660"/>
            <Enum Name="LimitedActionSet7" Id="9661"/>
            <Enum Name="LimitedActionSet8" Id="9662"/>
            <Enum Name="CastGadgetAbility" Id="9663"/>
            <Enum Name="CastPathAbility" Id="9664"/>
            <Enum Name="ActionBar0_Unused1" Id="9665"/>
            <Enum Name="ActionBar0_Unused2" Id="9666"/>
            <Enum Name="ActionBar1_Slot1" Id="9667"/>
            <Enum Name="ActionBar1_Slot2" Id="9668"/>
            <Enum Name="ActionBar1_Slot3" Id="9669"/>
            <Enum Name="ActionBar1_Slot4" Id="9670"/>
            <Enum Name="ActionBar1_Slot5" Id="9671"/>
            <Enum Name="ActionBar1_Slot6" Id="9672"/>
            <Enum Name="ActionBar1_Slot7" Id="9673"/>
            <Enum Name="ActionBar1_Slot8" Id="9674"/>
            <Enum Name="ActionBar1_Slot9" Id="9675"/>
            <Enum Name="ActionBar1_Slot10" Id="9676"/>
            <Enum Name="ActionBar1_Slot11" Id="9677"/>
            <Enum Name="ActionBar1_Slot12" Id="9678"/>
            <Enum Name="ActionBar2_Slot1" Id="9679"/>
            <Enum Name="ActionBar2_Slot2" Id="9680"/>
            <Enum Name="ActionBar2_Slot3" Id="9681"/>
            <Enum Name="ActionBar2_Slot4" Id="9682"/>
            <Enum Name="ActionBar2_Slot5" Id="9683"/>
            <Enum Name="ActionBar2_Slot6" Id="9684"/>
            <Enum Name="ActionBar2_Slot7" Id="9685"/>
            <Enum Name="ActionBar2_Slot8" Id="9686"/>
            <Enum Name="ActionBar2_Slot9" Id="9687"/>
            <Enum Name="ActionBar2_Slot10" Id="9688"/>
            <Enum Name="ActionBar2_Slot11" Id="9689"/>
            <Enum Name="ActionBar2_Slot12" Id="9690"/>
            <Enum Name="ActionBar3_Slot1" Id="9691"/>
            <Enum Name="ActionBar3_Slot2" Id="9692"/>
            <Enum Name="ActionBar3_Slot3" Id="9693"/>
            <Enum Name="ActionBar3_Slot4" Id="9694"/>
            <Enum Name="ActionBar3_Slot5" Id="9695"/>
            <Enum Name="ActionBar3_Slot6" Id="9696"/>
            <Enum Name="ActionBar3_Slot7" Id="9697"/>
            <Enum Name="ActionBar3_Slot8" Id="9698"/>
            <Enum Name="ActionBar3_Slot9" Id="9699"/>
            <Enum Name="ActionBar3_Slot10" Id="9700"/>
            <Enum Name="ActionBar3_Slot11" Id="9701"/>
            <Enum Name="ActionBar3_Slot12" Id="9702"/>
            <Enum Name="Unused1" Id="9703"/>
            <Enum Name="Unused2" Id="9704"/>
            <Enum Name="Unused3" Id="9705"/>
            <Enum Name="Unused4" Id="9706"/>
            <Enum Name="Unused5" Id="9707"/>
            <Enum Name="Unused6" Id="9708"/>
            <Enum Name="SetStance1" Id="9709"/>
            <Enum Name="SetStance2" Id="9710"/>
            <Enum Name="SetStance3" Id="9711"/>
            <Enum Name="Unused7" Id="9712"/>
            <Enum Name="Unused20" Id="9713"/>
            <Enum Name="Unused11" Id="9714"/>
            <Enum Name="ToggleInterface" Id="9715"/>
            <Enum Name="ToggleFramerate" Id="9716"/>
            <Enum Name="Unused21" Id="9717"/>
            <Enum Name="Unused23" Id="9718"/>
            <Enum Name="Unused22" Id="9719"/>
            <Enum Name="WorldMap" Id="9720"/>
            <Enum Name="LimitedActionSetBuilder" Id="9721"/>
            <Enum Name="Unused8" Id="9722"/>
            <Enum Name="Unused9" Id="9723"/>
            <Enum Name="ExplicitMouseLook" Id="9724"/>
            <Enum Name="ToggleWeapons" Id="9725"/>
            <Enum Name="LeftMouseHold" Id="9726"/>
            <Enum Name="RightMouseHold" Id="9727"/>
            <Enum Name="CenterMouseHold" Id="9728"/>
            <Enum Name="CastInnateAbility" Id="9729"/>
            <Enum Name="MarkingMenuLeftClick" Id="9730"/>
            <Enum Name="MarkingMenuLeftHold" Id="9731"/>
            <Enum Name="MarkingMenuRightClick" Id="9732"/>
            <Enum Name="MarkingMenuRightHold" Id="9733"/>
            <Enum Name="HUDShowQuests" Id="9734"/>
            <Enum Name="ToggleCameraAngle" Id="9735"/>
            <Enum Name="ToggleScannerBot" Id="9736"/>
            <Enum Name="Codex" Id="9737"/>
            <Enum Name="PathAction2" Id="9738"/>
            <Enum Name="FloatingActionBar_Slot1" Id="9739"/>
            <Enum Name="FloatingActionBar_Slot2" Id="9740"/>
            <Enum Name="FloatingActionBar_Slot3" Id="9741"/>
            <Enum Name="FloatingActionBar_Slot4" Id="9742"/>
            <Enum Name="FloatingActionBar_Slot5" Id="9743"/>
            <Enum Name="FloatingActionBar_Slot6" Id="9744"/>
            <Enum Name="ScaleRampedMotion" Id="9745"/>
            <Enum Name="ScaleRampedRotation" Id="9746"/>
            <Enum Name="BrakeRampedMotion" Id="9747"/>
            <Enum Name="BrakeRampedRotation" Id="9748"/>
            <Enum Name="MoveDown" Id="9749"/>
            <Enum Name="GroupFinder" Id="9750"/>
            <Enum Name="CastMiscSpell" Id="9751"/>
            <Enum Name="SetTargetMark1" Id="9752"/>
            <Enum Name="SetTargetMark2" Id="9753"/>
            <Enum Name="SetTargetMark3" Id="9754"/>
            <Enum Name="SetTargetMark4" Id="9755"/>
            <Enum Name="SetTargetMark5" Id="9756"/>
            <Enum Name="SetTargetMark6" Id="9757"/>
            <Enum Name="SetTargetMark7" Id="9758"/>
            <Enum Name="SetTargetMark8" Id="9759"/>
            <Enum Name="DashForward" Id="9760"/>
            <Enum Name="DashBackward" Id="9761"/>
            <Enum Name="DashLeft" Id="9762"/>
            <Enum Name="DashRight" Id="9763"/>
            <Enum Name="Unused12" Id="9764"/>
            <Enum Name="Unused13" Id="9765"/>
            <Enum Name="ChatReply" Id="9766"/>
            <Enum Name="ChatReWhisper" Id="9767"/>
            <Enum Name="Unused14" Id="9768"/>
            <Enum Name="Unused15" Id="9769"/>
            <Enum Name="Unused16" Id="9770"/>
            <Enum Name="Unused17" Id="9771"/>
            <Enum Name="Unused18" Id="9772"/>
            <Enum Name="Unused19" Id="9773"/>
            <Enum Name="TargetNearestEnemy" Id="9774"/>
            <Enum Name="TargetNearestFriend" Id="9775"/>
            <Enum Name="Achievements" Id="9776"/>
            <Enum Name="AuctionListings" Id="9777"/>
            <Enum Name="Challenges" Id="9778"/>
            <Enum Name="Unused10" Id="9779"/>
            <Enum Name="FriendsList" Id="9780"/>
            <Enum Name="Lore" Id="9781"/>
            <Enum Name="Mail" Id="9782"/>
            <Enum Name="Path" Id="9783"/>
            <Enum Name="Reputation" Id="9784"/>
            <Enum Name="Social" Id="9785"/>
            <Enum Name="Tradeskills" Id="9786"/>
            <Enum Name="DirectionalDash" Id="9787"/>
            <Enum Name="PrimaryPetActionBar_Slot1" Id="9788"/>
            <Enum Name="PrimaryPetActionBar_Slot2" Id="9789"/>
            <Enum Name="PrimaryPetActionBar_Slot3" Id="9790"/>
            <Enum Name="PrimaryPetActionBar_Slot4" Id="9791"/>
            <Enum Name="PrimaryPetActionBar_Slot5" Id="9792"/>
            <Enum Name="PrimaryPetActionBar_Slot6" Id="9793"/>
            <Enum Name="GhostModeMap" Id="9794"/>
            <Enum Name="Mount" Id="12389"/>
            <Enum Name="UsePotion" Id="12390"/>
            <Enum Name="Guild" Id="12391"/>
            <Enum Name="StunBreakoutUp" Id="14796"/>
            <Enum Name="StunBreakoutDown" Id="14797"/>
            <Enum Name="StunBreakoutLeft" Id="14798"/>
            <Enum Name="StunBreakoutRight" Id="14799"/>
        </EnumSet>
        <EnumSet Name="CodeEnumUserTextFilterClass" Incomplete="true" Id="9795">
            <Enum Name="Strict" Id="9796"/>
            <Enum Name="Standard" Id="9797"/>
            <Enum Name="Low" Id="9798"/>
        </EnumSet>
        <EnumSet Name="CodeEnumItemSlots" Incomplete="true" Id="9799">
            <Enum Name="Chest" Id="9800"/>
            <Enum Name="Legs" Id="9801"/>
            <Enum Name="Head" Id="9802"/>
            <Enum Name="Shoulder" Id="9803"/>
            <Enum Name="Feet" Id="9804"/>
            <Enum Name="Hands" Id="9805"/>
            <Enum Name="Tool" Id="9806"/>
            <Enum Name="Weapon" Id="9807"/>
            <Enum Name="Shields" Id="9808"/>
            <Enum Name="Gadget" Id="9809"/>
            <Enum Name="Attachment" Id="9810"/>
            <Enum Name="System" Id="9811"/>
            <Enum Name="Augment" Id="9812"/>
            <Enum Name="Implant" Id="9813"/>
        </EnumSet>
        <EnumSet Name="GuildHolomark" Incomplete="true" Id="9814">
            <Enum Name="Left" Id="9815"/>
            <Enum Name="Right" Id="9816"/>
            <Enum Name="Back" Id="9817"/>
        </EnumSet>
        <EnumSet Name="DuelStateDuelState" Incomplete="true" Id="9818">
            <Enum Name="None" Id="9819"/>
            <Enum Name="WaitingToAccept" Id="9820"/>
            <Enum Name="Pending" Id="9821"/>
            <Enum Name="Dueling" Id="9822"/>
        </EnumSet>
        <EnumSet Name="MapZone" Incomplete="true" Id="9823">
            <Enum Name="PublicEventIslandStage2" Id="12940"/>
            <Enum Name="LevianBay" Id="12941"/>
            <Enum Name="Thayd" Id="12942"/>
            <Enum Name="Ellevar" Id="12943"/>
            <Enum Name="halonring" Id="12944"/>
            <Enum Name="Grimvault" Id="12945"/>
            <Enum Name="Galeras" Id="12946"/>
            <Enum Name="LevianBayStarComm1" Id="12947"/>
            <Enum Name="EasternGrimvault" Id="12948"/>
            <Enum Name="HalonRingIsland2" Id="12949"/>
            <Enum Name="Malgrave" Id="12950"/>
            <Enum Name="LevianBayStarComm3" Id="12951"/>
            <Enum Name="WesternGrimvault" Id="12952"/>
            <Enum Name="NorthernGrimvault" Id="12953"/>
            <Enum Name="EverstarGrove" Id="12954"/>
            <Enum Name="EternityIslands" Id="12955"/>
            <Enum Name="Celestion" Id="12956"/>
            <Enum Name="CrimsonIsle" Id="12957"/>
            <Enum Name="Auroria" Id="12958"/>
            <Enum Name="Illium" Id="12959"/>
            <Enum Name="NorthernWilds" Id="12960"/>
            <Enum Name="Wilderrun" Id="12961"/>
            <Enum Name="LevianBayStarComm2" Id="12962"/>
            <Enum Name="HalonRingIsland3" Id="12963"/>
            <Enum Name="Whitevale" Id="12964"/>
            <Enum Name="Algoroc" Id="12965"/>
            <Enum Name="Deradune" Id="12966"/>
            <Enum Name="TheDefileScreamingSword" Id="16478"/>
            <Enum Name="HalonRingBCChamberofNurielDom" Id="16479"/>
            <Enum Name="HalonRingBCChamberoftheEntityDom" Id="16480"/>
            <Enum Name="BlighthavenChamberEarth" Id="16481"/>
            <Enum Name="NorthernWildsExoLab729" Id="16482"/>
            <Enum Name="HalonRingBCChamberofMadocExile" Id="16483"/>
            <Enum Name="BlighthavenQueensDen" Id="16484"/>
            <Enum Name="HalonRingBCCrystalCavernsExile" Id="16485"/>
            <Enum Name="TheDefileResonanceTowerControlRoomDominion" Id="16486"/>
            <Enum Name="TheDefileResonanceTowerControlRoomExile" Id="16487"/>
            <Enum Name="HalonRingBCCrystalCavernsDominion" Id="16488"/>
            <Enum Name="BlighthavenDecrepitExoLab" Id="16489"/>
            <Enum Name="HalonRingBCDoomfarer" Id="16490"/>
            <Enum Name="SouthernGrimvaultCreepingCaverns" Id="16491"/>
            <Enum Name="HalonRingBCTerminiteMound" Id="16492"/>
            <Enum Name="BlighthavenTransfusionChamber" Id="16493"/>
            <Enum Name="BlighthavenChamberAir" Id="16494"/>
            <Enum Name="BlighthavenRecontaminationRoom" Id="16495"/>
            <Enum Name="HalonRingBCChamberofAradelExile" Id="16496"/>
            <Enum Name="BlighthavenEmpyrealCaverns" Id="16497"/>
            <Enum Name="HalonRingBCCaptainKrull" Id="16498"/>
            <Enum Name="HalonRingBloodCrater" Id="16499"/>
            <Enum Name="HalonRingBCChamberofAradelDom" Id="16500"/>
            <Enum Name="SouthernGrimvaultEtherealCavity" Id="16501"/>
            <Enum Name="HalonRingBCChamberofEnochDom" Id="16502"/>
            <Enum Name="HalonRingBCChamberofEnochExile" Id="16503"/>
            <Enum Name="TheDefileEmperorsDaughter" Id="16504"/>
            <Enum Name="HalonRingBCRoughrockUnderground" Id="16505"/>
            <Enum Name="HalonRingBCChamberofEshiaDom" Id="16506"/>
            <Enum Name="BlighthavenDecontaminationRoom" Id="16507"/>
            <Enum Name="TheDefileStrainMaw" Id="16508"/>
            <Enum Name="SouthernGrimvaultStrainTunnels" Id="16509"/>
            <Enum Name="SouthernGrimvaultEtherealHollow" Id="16510"/>
            <Enum Name="BlighthavenGenesisChamber" Id="16511"/>
            <Enum Name="BlighthavenChamberLife" Id="16512"/>
            <Enum Name="HalonRingBCChamberoftheEntityExile" Id="16513"/>
            <Enum Name="HalongRingBCCraterofCarnage" Id="16514"/>
            <Enum Name="BlighthavenChamberWater" Id="16515"/>
            <Enum Name="BlighthavenChamberLogic" Id="16516"/>
            <Enum Name="BlighthavenChamberFire" Id="16517"/>
            <Enum Name="HalonRingBCChamberofMadocDom" Id="16518"/>
            <Enum Name="BlighthavenNurseryObservationRoom" Id="16519"/>
            <Enum Name="HalonRingBCBlightmuckAbscess" Id="16520"/>
            <Enum Name="BlighthavenNurseryChecpoint" Id="16521"/>
            <Enum Name="BlighthavenMindoftheGlobellum" Id="16522"/>
            <Enum Name="HalonRingBCChamberofEshiaExile" Id="16523"/>
            <Enum Name="BlighthavenEtherealCaverns" Id="16524"/>
            <Enum Name="BlighthavenAbandonedExoLab" Id="16525"/>
            <Enum Name="HalonRingBCGoldenhandsReach" Id="16526"/>
            <Enum Name="HalonRingBCChamberofNurielExile" Id="16527"/>
            <Enum Name="HalonRingBCGrimvoidDreadvault" Id="16528"/>
            <Enum Name="TheDefileBlackFocusEvacuationHub" Id="16529"/>
            <Enum Name="HalonRingBCChamberofYuriaExile" Id="16530"/>
            <Enum Name="NorthernWildsColdburrowCavern" Id="16531"/>
            <Enum Name="HalonRingBCChamberofYuriaDom" Id="16532"/>
        </EnumSet>
        <Function Name="GetCredits" Incomplete="true" Id="12392"/>
        <Function Name="GetEmptyInventorySlots" Incomplete="true" Id="12393"/>
        <Function Name="GetTotalInventorySlots" Incomplete="true" Id="12394"/>
        <Function Name="DoAnyItemsBeginQuest" Incomplete="true" Id="12395"/>
        <Function Name="AreAnyItemsNew" Incomplete="true" Id="12396"/>
        <Function Name="GetPendingRemovalWarningRemaining" Incomplete="true" Id="12397"/>
        <Function Name="LeavePendingRemovalInstance" Incomplete="true" Id="12398"/>
        <Function Name="GetTeleportIlliumSpell" Incomplete="true" Id="12399"/>
        <Function Name="GetTeleportThaydSpell" Incomplete="true" Id="12400"/>
        <Function Name="GetCostumeItem" Incomplete="true" Id="12401"/>
        <Function Name="GetInstanceSettings" Incomplete="true" Id="12402"/>
        <Function Name="ResetSingleInstance" Incomplete="true" Id="12403"/>
        <Function Name="SetShortcutMount" Incomplete="true" Id="12404"/>
        <Function Name="GetShortcutMount" Incomplete="true" Id="12405"/>
        <Function Name="SetShortcutPotion" Incomplete="true" Id="12406"/>
        <Function Name="GetShortcutPotion" Incomplete="true" Id="12407"/>
        <EnumSet Name="CodeEnumWhoResult" Incomplete="true" Id="12408">
            <Enum Name="OK" Id="12409"/>
            <Enum Name="Partial" Id="12410"/>
            <Enum Name="UnderCooldown" Id="12411"/>
        </EnumSet>
        <EnumSet Name="CodeEnumGameCommandType" Incomplete="true" Id="12412">
            <Enum Name="GadgetAbility" Id="12413"/>
            <Enum Name="DefaultAttack" Id="12414"/>
            <Enum Name="ClassInnateAbility" Id="12415"/>
            <Enum Name="ActivateTarget" Id="12416"/>
            <Enum Name="FollowTarget" Id="12417"/>
            <Enum Name="Sprint" Id="12418"/>
            <Enum Name="ToggleWalk" Id="12419"/>
            <Enum Name="Dismount" Id="12420"/>
            <Enum Name="Vacuum" Id="12421"/>
            <Enum Name="PathAction" Id="12422"/>
            <Enum Name="ToggleScannerBot" Id="12423"/>
            <Enum Name="DashForward" Id="12424"/>
            <Enum Name="DashBackward" Id="12425"/>
            <Enum Name="DashLeft" Id="12426"/>
            <Enum Name="DashRight" Id="12427"/>
            <Enum Name="PathAction2" Id="12428"/>
            <Enum Name="Interact" Id="12429"/>
            <Enum Name="GoToBind" Id="12430"/>
            <Enum Name="GoToHouse" Id="12431"/>
            <Enum Name="EscapeHouse" Id="12432"/>
            <Enum Name="GoToWarplot" Id="12433"/>
            <Enum Name="WarplotBossTokenUI" Id="12434"/>
            <Enum Name="SummonMount" Id="12435"/>
            <Enum Name="UsePotion" Id="12436"/>
            <Enum Name="GoToIllium" Id="12437"/>
            <Enum Name="GoToThayd" Id="12438"/>
            <Enum Name="HousingLandscape" Id="14800"/>
            <Enum Name="HousingRemodel" Id="14801"/>
            <Enum Name="HousingCrate" Id="14802"/>
            <Enum Name="HousingVendor" Id="14803"/>
            <Enum Name="HousingList" Id="14804"/>
            <Enum Name="HousingEditMode" Id="14805"/>
        </EnumSet>
        <EnumSet Name="SharedChallengePreference" Incomplete="true" Id="12967">
            <Enum Name="AutoAccept" Id="12968"/>
            <Enum Name="Prompt" Id="12969"/>
            <Enum Name="AutoReject" Id="12970"/>
        </EnumSet>
        <EnumSet Name="LevelUpUnlockType" Incomplete="true" Id="12971">
            <Enum Name="Dungeon_New" Id="12972"/>
            <Enum Name="Raid_40" Id="12973"/>
            <Enum Name="Adventure_New" Id="12974"/>
            <Enum Name="Content_Capital" Id="12975"/>
            <Enum Name="Content_Feature" Id="12976"/>
            <Enum Name="Class_LAS_Slot" Id="12977"/>
            <Enum Name="General_Expanded_Feature" Id="12978"/>
            <Enum Name="Class_Feature" Id="12979"/>
            <Enum Name="Class_Attribute" Id="12980"/>
            <Enum Name="Path_ScanBot" Id="12981"/>
            <Enum Name="Path_Spell" Id="12982"/>
            <Enum Name="Path_Title" Id="12983"/>
            <Enum Name="Gear_Slot" Id="12984"/>
            <Enum Name="Path_Quest" Id="12985"/>
            <Enum Name="Social_Feature" Id="12986"/>
            <Enum Name="Class_Improvement" Id="12987"/>
            <Enum Name="Raid_20" Id="12988"/>
            <Enum Name="Path_Item" Id="12989"/>
            <Enum Name="Class_Tier" Id="12990"/>
            <Enum Name="Class_Ability" Id="12991"/>
            <Enum Name="PvP_Battleground" Id="12992"/>
            <Enum Name="General_Feature" Id="12993"/>
            <Enum Name="Content_Zone" Id="12994"/>
            <Enum Name="PvP_Feature" Id="12995"/>
        </EnumSet>
        <EnumSet Name="LevelUpUnlockSystem" Incomplete="true" Id="12996">
            <Enum Name="Path" Id="12997"/>
            <Enum Name="Level" Id="12998"/>
        </EnumSet>
        <EnumSet Name="LevelUpUnlock" Incomplete="true" Id="12999">
            <Enum Name="Builder_NewTierPoint" Id="13000"/>
            <Enum Name="Builder_LASSlot2" Id="13001"/>
            <Enum Name="Character_GearSlot_Shield" Id="13002"/>
            <Enum Name="WorldMapNewZone_Deradune" Id="13003"/>
            <Enum Name="WorldMapAdventure_Astrovoid" Id="13004"/>
            <Enum Name="Character_GearSlot_Implants" Id="13005"/>
            <Enum Name="GroupFinder_Dungeons" Id="13006"/>
            <Enum Name="Character_CostumeSlot6" Id="13007"/>
            <Enum Name="Builder_AMPPoint" Id="13008"/>
            <Enum Name="Customization_Mount" Id="13009"/>
            <Enum Name="WorldMapNewZone_Ellevar" Id="13010"/>
            <Enum Name="Inventory_Salvage" Id="13011"/>
            <Enum Name="Character_GearSlot_Gloves" Id="13012"/>
            <Enum Name="GroupFinder_Warplots" Id="13013"/>
            <Enum Name="WorldMapNewZone_Malgrave" Id="13014"/>
            <Enum Name="Builder_LASSlot8" Id="13015"/>
            <Enum Name="Builder_LASSlot7" Id="13016"/>
            <Enum Name="Builder_LASSlot4" Id="13017"/>
            <Enum Name="Builder_AbilityTier2" Id="13018"/>
            <Enum Name="WorldMapDungeon_Stormtalon" Id="13019"/>
            <Enum Name="WorldMapAdventure_Galeras" Id="13020"/>
            <Enum Name="Character_GearSlot_Shoulders" Id="13021"/>
            <Enum Name="WorldMapDungeon_KelVoreth" Id="13022"/>
            <Enum Name="GroupFinder_Arenas" Id="13023"/>
            <Enum Name="Character_GearSlot_Gadgets" Id="13024"/>
            <Enum Name="Customization_Scanbot" Id="13025"/>
            <Enum Name="WorldMapNewZone_Grimvault" Id="13026"/>
            <Enum Name="Character_CostumeSlot2" Id="13027"/>
            <Enum Name="WorldMapNewZone_Wilderrun" Id="13028"/>
            <Enum Name="Character_CostumeSlot4" Id="13029"/>
            <Enum Name="WorldMapAdventure_Whitevale" Id="13030"/>
            <Enum Name="Character_GearSlot_Helm" Id="13031"/>
            <Enum Name="WorldMapNewZone_Farside" Id="13032"/>
            <Enum Name="WorldMapNewZone_Algoroc" Id="13033"/>
            <Enum Name="Builder_LASSlot6" Id="13034"/>
            <Enum Name="WorldMapNewZone_NorthernWilds" Id="13035"/>
            <Enum Name="Builder_AbilityTier8" Id="13036"/>
            <Enum Name="WorldMapNewZone_EverstarGrove" Id="13037"/>
            <Enum Name="WorldMapNewZone_Whitevale" Id="13038"/>
            <Enum Name="Character_GearSlot_WeaponAttachment" Id="13039"/>
            <Enum Name="GroupFinder_General" Id="13040"/>
            <Enum Name="WorldMapDungeon_Skullcano" Id="13041"/>
            <Enum Name="WorldMapNewZone_CrimsonIsle" Id="13042"/>
            <Enum Name="WorldMapCapital_Illium" Id="13043"/>
            <Enum Name="Builder_LASSlot5" Id="13044"/>
            <Enum Name="Builder_AbilityTier5" Id="13045"/>
            <Enum Name="Character_GearSlot_SupportSystem" Id="13046"/>
            <Enum Name="WorldMapAdventure_Hycrest" Id="13047"/>
            <Enum Name="Character_CostumeSlot3" Id="13048"/>
            <Enum Name="WorldMapNewZone_LevianBay" Id="13049"/>
            <Enum Name="Builder_AbilityTier6" Id="13050"/>
            <Enum Name="WorldMapNewZone_Celestion" Id="13051"/>
            <Enum Name="WorldMapNewZone_Auroria" Id="13052"/>
            <Enum Name="WorldMapAdventure_NorthernWilds" Id="13053"/>
            <Enum Name="Builder_AbilityTier4" Id="13054"/>
            <Enum Name="WorldMapNewZone_Galeras" Id="13055"/>
            <Enum Name="Builder_AbilityTier3" Id="13056"/>
            <Enum Name="Character_CostumeSystem" Id="13057"/>
            <Enum Name="WorldMapCapital_Thayd" Id="13058"/>
            <Enum Name="Builder_LASSlot3" Id="13059"/>
            <Enum Name="WorldMapAdventure_Malgrave" Id="13060"/>
            <Enum Name="Builder_AMPSystem" Id="13061"/>
            <Enum Name="Character_CostumeSlot5" Id="13062"/>
            <Enum Name="Builder_TierPointSystem" Id="13063"/>
            <Enum Name="Builder_AbilityTier7" Id="13064"/>
            <Enum Name="WorldMapDungeon_SwordMaiden" Id="13065"/>
            <Enum Name="GroupFinder_Adventures" Id="13066"/>
            <Enum Name="Character_GearSlot_RaidKey" Id="13067"/>
        </EnumSet>
        <EnumSet Name="SupportStuckAction" Incomplete="true" Id="13068">
            <Enum Name="RecallBind" Id="13069"/>
            <Enum Name="RecallDeath" Id="13070"/>
            <Enum Name="RecallHouse" Id="13071"/>
        </EnumSet>
        <Function Name="GetPetDismissCommand" Incomplete="true" Id="14806"/>
        <Function Name="GetLatency" Incomplete="true" Id="14807"/>
        <Function Name="GetPingTime" Incomplete="true" Id="14808"/>
        <Function Name="GetZoneMap" Incomplete="true" Id="14809"/>
        <Function Name="InvokePreOrder" Incomplete="true" Id="14810"/>
        <Function Name="GetLevelCap" Incomplete="true" Id="14811"/>
        <Function Name="GetUnlockedLevelCap" Incomplete="true" Id="14812"/>
        <Function Name="PrepareInfractionReport" Incomplete="true" Id="14813"/>
        <Function Name="GetLastTargetedPlayerName" Incomplete="true" Id="14814"/>
        <EnumSet Name="CodeEnumInputKeyLookupGroup" Incomplete="true" Id="14815">
            <Enum Name="Main" Id="14816"/>
            <Enum Name="StunBreakoutGameplay" Id="14817"/>
            <Enum Name="Count" Id="14818"/>
            <Enum Name="First" Id="14819"/>
            <Enum Name="Last" Id="14820"/>
        </EnumSet>
        <Function Name="CurrencyCap" Incomplete="true" Id="16416"/>
        <Function Name="InRatedPvpMatch" Incomplete="true" Id="16417"/>
        <Function Name="GetBagItem" Incomplete="true" Id="16418"/>
        <Function Name="EquipBagItem" Incomplete="true" Id="16419"/>
        <Function Name="CanEquipBagItem" Incomplete="true" Id="16420"/>
        <Function Name="SwapBagItems" Incomplete="true" Id="16421"/>
        <Function Name="RefreshCustomTelegraphColors" Incomplete="true" Id="16422"/>
        <EnumSet Name="CodeEnumEquipItemResult" Incomplete="true" Id="16423">
            <Enum Name="Ok" Id="16424"/>
            <Enum Name="Cooldown" Id="16425"/>
            <Enum Name="Invalid" Id="16426"/>
            <Enum Name="LevelTooLow" Id="16427"/>
            <Enum Name="WrongClass" Id="16428"/>
            <Enum Name="WrongRace" Id="16429"/>
        </EnumSet>
        <EnumSet Name="TelegraphColorSet" Incomplete="true" Id="16430">
            <Enum Name="Default" Id="16431"/>
            <Enum Name="Deuteranopia" Id="16432"/>
            <Enum Name="Protanopia" Id="16433"/>
            <Enum Name="Tritanopia" Id="16434"/>
            <Enum Name="Custom1" Id="16435"/>
            <Enum Name="Custom2" Id="16436"/>
        </EnumSet>
        <Function Name="ReplayLevelUp" Incomplete="true" Id="17062"/>
        <EnumSet Name="CharacterRecustomizationResultCharacterRecustomizationResult" Incomplete="true" Id="17063">
            <Enum Name="Success" Id="17064"/>
            <Enum Name="UnknownError" Id="17065"/>
            <Enum Name="NoChanges" Id="17066"/>
            <Enum Name="InsufficientFunds" Id="17067"/>
            <Enum Name="OutOfRange" Id="17068"/>
        </EnumSet>
        <Function Name="ToggleSettlerStructureCallouts" Incomplete="true" Id="17192"/>
        <Function Name="AreSettlerStructureCalloutsVisible" Incomplete="true" Id="17193"/>
        <Function Name="GetMountList" Incomplete="true" Id="17194"/>
        <Function Name="GetVanityPetList" Incomplete="true" Id="17195"/>
        <Function Name="GetGameMode" Incomplete="true" Id="17261"/>
        <EnumSet Name="CodeEnumGameMode" Incomplete="true" Id="17262">
            <Enum Name="West" Id="17263"/>
            <Enum Name="China" Id="17264"/>
        </EnumSet>
        <Function Name="GetPlayerMoney" Desc="Deprecated" Incomplete="true" Id="562" Deleted="true"/>
        <Function Name="GetPvpGraveyards" Desc="Does a lua_newtable with infoId and available of PvpObjectiveType_Graveyard." Incomplete="true" Id="583" Deleted="true"/>
        <Function Name="RecallShardGetInfo" Desc="return the RecallShardGetInfo" Incomplete="true" Id="597" Deleted="true"/>
        <Function Name="RecallShardBind" Desc="not implemented
bind should receive an id of a shard location" Incomplete="true" Id="604" Deleted="true"/>
        <Function Name="RecallShardUse" Desc="not implemented" Incomplete="true" Id="605" Deleted="true"/>
        <EnumSet Name="CodeEnumMapObjectType" Incomplete="true" Id="3302" Deleted="true"/>
        <Function Name="GetWorldGameMode" Incomplete="true" Id="3358" Deleted="true"/>
        <Function Name="GetClassInnateAbility" Incomplete="true" Id="3362" Deleted="true"/>
        <Function Name="CodeEnumGenericError" Incomplete="true" Id="3364" Deleted="true"/>
        <Function Name="GetSpellThresholdTimePrcntLeft" Incomplete="true" Id="3369" Deleted="true"/>
    </Library>
    <Library Name="GroupLib" Incomplete="true" Id="606">
        <EnumSet Name="Result" Incomplete="true" Id="2160">
            <Enum Name="ExpiredInvitee" Id="8500"/>
            <Enum Name="ServerControlled" Id="8501"/>
            <Enum Name="GroupNotFound" Id="8502"/>
            <Enum Name="NotAcceptingRequests" Id="8503"/>
            <Enum Name="Busy" Id="8504"/>
            <Enum Name="SentToLeader" Id="8505"/>
            <Enum Name="LeaderOffline" Id="8506"/>
            <Enum Name="WrongFaction" Id="12439"/>
            <Enum Name="PrivilegeRestricted" Id="14821"/>
            <Enum Name="Ok" Id="2161" Deleted="true"/>
            <Enum Name="PlayerAlreadyGrouped" Id="2163" Deleted="true"/>
            <Enum Name="InviteExpired" Id="2164" Deleted="true"/>
            <Enum Name="AlreadyHasPendingInvite" Id="2166" Deleted="true"/>
            <Enum Name="InviteSuccessful" Id="2167" Deleted="true"/>
            <Enum Name="NoPermission" Id="2168" Deleted="true"/>
            <Enum Name="InviteOtherExpired" Id="2169" Deleted="true"/>
            <Enum Name="AlreadyInvitedYou" Id="2170" Deleted="true"/>
            <Enum Name="InvitorNoPermission" Id="2171" Deleted="true"/>
            <Enum Name="ExpriedInvitee" Id="3408" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="LootThreshold" Incomplete="true" Id="3412">
            <Enum Name="Artifact" Id="8507"/>
            <Enum Name="Exquisite" Id="7241" Deleted="true"/>
            <Enum Name="Phenomenal" Id="7242" Deleted="true"/>
            <Enum Name="Extraordinary" Id="7243" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="ActionResult" Incomplete="true" Id="3433">
            <Enum Name="OrderInvalidMember" Id="8508"/>
            <Enum Name="OrderFailedLeader" Id="8509"/>
            <Enum Name="AlreadyInGroupInstance" Id="12440"/>
            <Enum Name="OrderFailedInUse" Id="17069"/>
        </EnumSet>
        <EnumSet Name="Difficulty" Incomplete="true" Id="3454">
            <Enum Name="Count" Id="12441"/>
        </EnumSet>
        <Function Name="Join" Incomplete="true" Id="8513"/>
        <Function Name="AcceptRequest" Incomplete="true" Id="8514"/>
        <Function Name="DenyRequest" Incomplete="true" Id="8515"/>
        <Function Name="CloseMentoringAOIDialog" Incomplete="true" Id="8516"/>
        <Function Name="SetJoinRequestMethod" Incomplete="true" Id="8517"/>
        <Function Name="GetJoinRequestMethod" Incomplete="true" Id="8518"/>
        <Function Name="SetReferralMethod" Incomplete="true" Id="8519"/>
        <Function Name="GetReferralMethod" Incomplete="true" Id="8520"/>
        <Function Name="SwapOrder" Incomplete="true" Id="8521"/>
        <EnumSet Name="HarvestLootRule" Incomplete="true" Id="8523">
            <Enum Name="RoundRobin" Id="8524"/>
            <Enum Name="FirstTagger" Id="8525"/>
        </EnumSet>
        <EnumSet Name="InvitationMethod" Incomplete="true" Id="8526">
            <Enum Name="Open" Id="8527"/>
            <Enum Name="Neutral" Id="8528"/>
            <Enum Name="Closed" Id="8529"/>
        </EnumSet>
        <Function Name="GotoGroupInstance" Incomplete="true" Id="12442"/>
        <Function Name="IsMemberInGroupInstance" Incomplete="true" Id="12443"/>
        <Function Name="InInstanceWithMember" Incomplete="true" Id="12444"/>
        <Function Name="IsReadyCheckOnCooldown" Incomplete="true" Id="14822"/>
        <Function Name="CanGotoGroupInstance" Incomplete="true" Id="14823"/>
        <Function Name="GetMemberVisibility" Incomplete="true" Id="14824"/>
        <Function Name="PrepareInfractionReportInvite" Incomplete="true" Id="14825"/>
        <Function Name="SetOrder" Incomplete="true" Id="17070"/>
        <Function Name="GetInviteReceivedString" Desc="Does a lua_pushwstring of GetInviteReceivedString." Incomplete="true" Id="640" Deleted="true"/>
        <Function Name="CreateGroup" Desc="Runs m_clientGroup&apos;s RequestGroupCreate method." Incomplete="true" Id="641" Deleted="true"/>
        <Function Name="DenyInvite" Desc="Runs m_clientGroup&apos;s DenyInvite method with strMessage." Incomplete="true" Id="655" Deleted="true"/>
        <Function Name="RequestToJoin" Desc="Runs m_clientGroup&apos;s RequestToJoin method specified by nGroupId." Incomplete="true" Id="657" Deleted="true"/>
        <Function Name="GetLootThreshold" Desc="Does a lua_pushinteger of LootThreshold." Incomplete="true" Id="661" Deleted="true"/>
        <Function Name="SetLootThreshold" Desc="Sets m_clientGroup&apos;s SetLootThreshold to nThresh." Incomplete="true" Id="662" Deleted="true"/>
        <Function Name="GetLootDistribution" Desc="Does a lua_pushinteger of GetLootDistribution." Incomplete="true" Id="664" Deleted="true"/>
        <Function Name="SetLootDistribution" Desc="Sets m_clientGroup&apos;s SetLootDistribution to nLootDist." Incomplete="true" Id="665" Deleted="true"/>
        <Function Name="JoinWorldZonePhase" Desc="Runs m_clientGroup&apos;s JoinWorldZonePhase." Incomplete="true" Id="667" Deleted="true"/>
        <Function Name="LeaveWorldZonePhase" Desc="Runs m_clientGroup&apos;s LeaveWorldPhase." Incomplete="true" Id="668" Deleted="true"/>
        <Function Name="Group_GetMemberQuests" Desc="Runs m_clientGroup&apos;s GetMemberQuests specified by nIndex." Incomplete="true" Id="669" Deleted="true"/>
        <Function Name="Group_RequestQuest" Desc="Runs m_clientGroup&apos;s RequestQuest specified by unitP&apos;s unitId and questQ&apos;s Id." Incomplete="true" Id="671" Deleted="true"/>
        <Function Name="Bag_GetSharedItems" Desc="Does a lua_newtable of shared group member items with itemId, icon, name, stackCount, ownerName, guid." Incomplete="true" Id="674" Deleted="true"/>
        <Function Name="Bag_GetLoot" Desc="Does a lua_newtable of group loot with an index and then the LootItem." Incomplete="true" Id="675" Deleted="true"/>
        <Function Name="Bag_VoteForItem" Desc="Runs m_clientGroup&apos;s VoteOnBagItem on nIdItem with eVote." Incomplete="true" Id="676" Deleted="true"/>
        <Function Name="Bag_ShareItem" Desc="Runs m_clientGroup&apos;s AddSharedItem with location specified by nInventoryId." Incomplete="true" Id="679" Deleted="true"/>
        <Function Name="Bag_GetItemByGuid" Desc="Does a lua_newtable of an item from GroupBag specified by nGuid." Incomplete="true" Id="681" Deleted="true"/>
        <EnumSet Name="CodeEnumLootThreshoold" Incomplete="true" Id="2150" Deleted="true"/>
        <EnumSet Name="LeaveReason" Incomplete="true" Id="2172" Deleted="true"/>
        <EnumSet Name="GameMode" Incomplete="true" Id="3449" Deleted="true"/>
        <Function Name="CanLeave" Incomplete="true" Id="3462" Deleted="true"/>
        <Function Name="GetInstanceGameMode" Incomplete="true" Id="3467" Deleted="true"/>
        <Function Name="SetInstanceGameMode" Incomplete="true" Id="3468" Deleted="true"/>
        <Function Name="GetMemberQuests" Incomplete="true" Id="3469" Deleted="true"/>
        <Function Name="RequestQuest" Incomplete="true" Id="3470" Deleted="true"/>
    </Library>
    <Library Name="MailSystemLib" Incomplete="true" Id="707">
        <Function Name="DeleteMultipleMessages" Incomplete="true" Id="8530"/>
        <Method Name="GetSenderType" Incomplete="true" Id="9088"/>
        <Method Name="PrepareInfractionReport" Incomplete="true" Id="14826"/>
        <Function Name="TakeAllAttachmentsFromMultipleMessages" Incomplete="true" Id="17071"/>
        <Function Name="MarkMultipleMessagesAsRead" Incomplete="true" Id="17072"/>
        <Function Name="SendMail" Desc="Runs either g_game&apos;s MailSend or MailSendWithAttachments." Incomplete="true" Id="713" Deleted="true"/>
        <Function Name="GetId" Desc="Does a lua_pushinteger of the email&apos;s id, or nil if null." Incomplete="true" Id="724" Deleted="true"/>
        <Function Name="RejectCOD" Desc="Runs pEmail&apos;s ReturnToSender." Incomplete="true" Id="735" Deleted="true"/>
        <Method Name="TakeGiftPayCoD" Incomplete="true" Id="3089" Deleted="true"/>
    </Library>
    <Library Name="P2PTrading" Incomplete="true" Id="741">
        <Function Name="SetMoney" Incomplete="true" Id="9824"/>
        <Function Name="UnCommit" Incomplete="true" Id="9825"/>
        <Function Name="GetMyTradeMoney" Incomplete="true" Id="9826"/>
        <Function Name="GetPartnerTradeMoney" Incomplete="true" Id="9827"/>
        <Function Name="PrepareInfractionReport" Incomplete="true" Id="14827"/>
        <Function Name="AddMoney" Desc="Does a lua_pushinteger of the result of P2PTradeAddMoney with nMoney." Incomplete="true" Id="758" Deleted="true"/>
        <Function Name="RemoveMoney" Desc="Does a lua_pushinteger of the result of P2PTradeRemoveMoney with nMoney." Incomplete="true" Id="760" Deleted="true"/>
        <Function Name="Commit" Desc="Does a lua_pushinteger of the result of P2PTradeCommit." Incomplete="true" Id="762" Deleted="true"/>
    </Library>
    <Library Name="PlayerPathLib" Incomplete="true" Id="767">
        <Function Name="GetScannerName" Incomplete="true" Id="8531"/>
        <Function Name="GetPathLevelCap" Incomplete="true" Id="14828"/>
        <Function Name="GetUnlockedPathLevelCap" Incomplete="true" Id="14829"/>
        <Function Name="GetEpisode" Desc="Does a PushEpisodeInfo of" Incomplete="true" Id="791" Deleted="true"/>
        <Function Name="ExplorerScanArea" Desc="Does a lua_pushboolean of CreateExplorerArrow&apos;s success." Incomplete="true" Id="794" Deleted="true"/>
        <Function Name="CanExplorerScanArea" Desc="Does a lua_pushboolean of GetExplorerArrowMatrix&apos;s success." Incomplete="true" Id="795" Deleted="true"/>
        <Function Name="ExplorerPlaceBeacon" Desc="Runs PathAction() if possible (e.g. making sure the path is explorer)" Incomplete="true" Id="796" Deleted="true"/>
        <Function Name="GetExplorerNodeInfo" Desc="Does a lua_newtable describing many (10+) fields relating to the explorer node." Incomplete="true" Id="797" Deleted="true"/>
        <Function Name="SoldierGetHoldoutHealth" Desc="Does a lua_pushnumber of SoldierUnitHealth, or 0 if null." Incomplete="true" Id="798" Deleted="true"/>
        <Function Name="ScientistScan" Desc="Runs PathAction if PlayerPathType is Scientist and other requirements are valid." Incomplete="true" Id="799" Deleted="true"/>
        <Function Name="GetRewardMissions" Incomplete="true" Id="2530" Deleted="true"/>
        <Function Name="ScientistScanBotInDespawnRange" Incomplete="true" Id="2535" Deleted="true"/>
    </Library>
    <Object Name="DialogResponse" Id="802" Prefix="dr" Desc="DialogResponses are the various options that the player can select when conversing with NPCs and turning in quests.">
        <Method Name="GetText" Desc="Gets the text for this DialogResponse." Id="803">
            <ReturnValue Type="String" Desc="The DialogResponse&apos;s text." Id="16924"/>
        </Method>
        <Method Name="GetType" Desc="Gets the DialogResponse&apos;s type." Id="804">
            <ReturnValue Type="Integer" Desc="The response&apos;s type.  This value corresponds with the DialogResponse.DialogResponseType enum." Id="16926"/>
        </Method>
        <Method Name="GetUniqueId" Desc="Gets the dialog&apos;s unique id number." Id="805">
            <ReturnValue Type="Integer" Desc="The dialog&apos;s unique id number." Id="16921"/>
        </Method>
        <Method Name="GetQuestId" Desc="Gets the id of the quest associated with this dialog." Id="806">
            <ReturnValue Type="Integer" Desc="The id number of the quest associated with this dialog response." Id="16922"/>
        </Method>
        <Method Name="GetRewardId" Desc="Gets the id of the reward associated with this dialog response." Id="807">
            <ReturnValue Type="Integer" Desc="The id number of the reward associated with this response." Id="16923"/>
        </Method>
        <Method Name="Select" Desc="Tells the client that the player has chosen this DialogResponse" Id="808"/>
        <Function Name="is" Id="2541" Desc="Determines whether a variable is a DialogResponse or not.">
            <Param Name="oVariable" Desc="The object that the function will check." Type="Variable" Id="16919"/>
            <ReturnValue Type="Boolean" Desc="Whether the object is a dialog response or not." Id="16920"/>
        </Function>
        <Method Name="__gc" Id="13072" Desc="Forces the garbage collector to be called on this variable."/>
    </Object>
    <Object Name="Episode" Id="809" Prefix="epi" Desc="Episodes are a set of quests that are linked by a storyline or area.">
        <Method Name="GetId" Desc="Gets the Episode&apos;s id." Id="810">
            <ReturnValue Type="Integer" Desc="The Episode&apos;s id." Id="16953"/>
        </Method>
        <Method Name="GetState" Desc="Gets the Episode&apos;s current state." Id="811" InternalNotes="Episode.EpisodeState constants should be enums">
            <ReturnValue Type="Integer" Desc="The Episode&apos;s current state.  This value corresponds with the Episode.EpisodeState set of constants." Id="16964"/>
        </Method>
        <Method Name="GetTitle" Desc="Gets the Episode&apos;s title." Id="812">
            <ReturnValue Type="String" Desc="The Episode&apos;s title." Id="16967"/>
        </Method>
        <Method Name="GetDesc" Desc="Gets the description that should be shown for the Episode when it is incomplete." Id="813">
            <ReturnValue Type="String" Desc="The string that should be used as the Episode&apos;s description while it is incomplete." Id="16952"/>
        </Method>
        <Method Name="GetSummary" Desc="Gets the description that should be shown for the Episode once it&apos;s complete." Id="814">
            <ReturnValue Type="String" Desc="The string that should be shown for the Episode&apos;s description once it&apos;s in the Completed state." Id="16965"/>
        </Method>
        <Method Name="GetConLevel" Desc="Gets the level that the player is expected to be in order to complete the Episode." Id="815" InternalNotes="This doesn&apos;t seem to be used anymore.  Maybe it&apos;s depricated?" NotTested="true">
            <ReturnValue Type="Integer" Desc="The level that the player is expected to be to complete the Episode." Id="16951"/>
        </Method>
        <Method Name="IsTaskOnly" Desc="Determines if the Episode only has Tasks.  Tasks are Quests that are not part of any larger chain." Id="816">
            <ReturnValue Type="Boolean" Desc="Whether the Episode&apos;s Quests are all Tasks or not." Id="16982"/>
        </Method>
        <Method Name="GetZoneId" Desc="Gets the id number of the zone that the Episode takes place in." Id="817">
            <ReturnValue Type="Integer" Desc="The id number of the zone that the Episode is in." Id="16975"/>
        </Method>
        <Method Name="GetZoneName" Desc="Gets the name of the zone that the Episode is found in." Id="818">
            <ReturnValue Type="String" Desc="The name of the zone that the episode is in." Id="16977"/>
        </Method>
        <Method Name="GetVisibleQuests" Desc="Gets a list of Quests that are part of the Episode and match the filters that are flagged with the variables that are passed in" Id="819">
            <Param Name="bShowCompleted" Type="Boolean" Id="820" Desc="Whether completed quests should be added to the list or not."/>
            <Param Name="bShowOutLeveled" Type="Boolean" Id="821" Desc="Whether Quests whose con level are 10 below the player&apos;s effective level should be added to the list or not."/>
            <Param Name="bSortByName" Type="Boolean" Id="823" Desc="Whether the list should be sorted alphabetically by name or not."/>
            <Param Name="idQuestCategory" Desc="The Quests that are returned will be filtered by this QuestCategory id." Type="Integer" Id="16973"/>
            <ReturnValue Type="Quest" Desc="An array of Quests that has been filtered and possibly sorted by the variables that were passed into the function." Array="true" Id="16974"/>
            <Param Name="bShowMentioned" Type="Boolean" Id="822" Deleted="true"/>
        </Method>
        <Method Name="GetTrackedQuests" Desc="Gets a list of tracked quests that have the specified QuestCategory and are part of the Episode." Id="824">
            <Param Name="idQuestCategory" Desc="The id of the QuestCategory that the function will use to filter the results." Type="Integer" Id="16968"/>
            <Param Name="bSortByDistance" Desc="Whether the function should sort the results by distance, with the closest quests coming first in the list." Type="Boolean" Id="16969"/>
            <ReturnValue Type="Quest" Desc="An array of Quests that are part of the Episode and have a QuestCategory whose id matches the one passed in." Array="true" Id="16970"/>
        </Method>
        <Method Name="GetQuest" Desc="Gets the Quest with the specified id if it is in this Episode." Id="825">
            <Param Name="idQuest" Desc="The id of the Quest that the function will look for." Type="Integer" Id="16962"/>
            <ReturnValue Type="Quest" Desc="The Quest whose id matches the one passed in." Id="16963"/>
            <Param Name="nQuestId" Type="Integer" Id="826" Deleted="true"/>
        </Method>
        <Method Name="GetProgress" Desc="Gets information on the player&apos;s progress towards completing every quest of a specific category in this Episode." Id="827">
            <Param Name="idQuestCategory" Desc="The function will get the Episode&apos;s progress for Quests whose category uses this id." Type="Integer" Id="16958"/>
            <ReturnValue Type="Table" Desc="A count of how many Quests the player has completed and how many the Episode has for the specified category." Id="16959">
                <Item Name="nTotal" Desc="The total number of Quests of the specified category that are in the Episode." Type="Integer" Id="16960"/>
                <Item Name="nCompleted" Desc="The number of Quests of the specified category that the player has completed." Type="Integer" Id="16961"/>
            </ReturnValue>
        </Method>
        <Function Name="is" Id="2542" Desc="Checks whether the variable that is passed in is an Episode or not.">
            <Param Name="oVariable" Desc="The variable that the function will check.  This variable can be of any type." Type="Variable" Id="16944"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable that was passed in is an Episode or not." Id="16945"/>
        </Function>
        <Method Name="GetCategories" Incomplete="true" Id="3476" Desc="Gets a list of all of the QuestCategories that are used by quests in the Episode.">
            <ReturnValue Type="QuestCategory" Desc="An array of QuestCategories that are used by quests in the Episode." Array="true" Id="16950"/>
        </Method>
        <Method Name="GetAllQuests" Id="3477" Desc="Gets a list of all of the quests in the Episode that match the passed in category id and that have been unlocked by the player.">
            <Param Name="idQuestCategory" Desc="The function will return all quests with this category." Type="Integer" Id="16948"/>
            <ReturnValue Type="Quest" Desc="An array of quests that have the same category as the one that was passed in and have been unlocked by the player." Array="true" Id="16949"/>
        </Method>
        <Method Name="IsWorldStory" Incomplete="true" Id="12445" Desc="Determines if the Episode is a World Story or not.  World Stories are quest chains that span multiple zones.">
            <ReturnValue Type="Boolean" Desc="Whether the Episode is a World Story or not." Id="16983"/>
        </Method>
        <Method Name="IsZoneStory" Id="12446" Desc="Determines if the Episode is a Zone Story or not.  Zone Stories are Episodes that span an entire zone.">
            <ReturnValue Type="Boolean" Desc="Whether the Episode is a Zone Story or not." Id="16984"/>
        </Method>
        <Method Name="IsRegionalStory" Id="12447" Desc="Checks if the Episode is a Regional Story.  Regional Stories are Episodes that take place in a specific region within a zone, but do not breadcrumb to other areas.">
            <ReturnValue Type="Boolean" Desc="Whether the Episode is a Regional Story or not." Id="16981"/>
        </Method>
        <Method Name="__gc" Id="13073" Desc="Manually calls the garbage collector on this Episode."/>
        <Method Name="__eq" Id="13074" Desc="Determines if two Episodes are the same.">
            <Param Name="epiCompare" Desc="The episode being compared to this Episode." Type="Episode" Id="16946"/>
            <ReturnValue Type="Boolean" Desc="Whether the two Episodes are the same or not." Id="16947"/>
        </Method>
    </Object>
    <Object Name="Item" Incomplete="true" Id="828" Prefix="item">
        <EnumSet Name="CodeEnumItemType" Incomplete="true" Id="2176">
            <Enum Name="WeaponMHClawsAttached" Id="8532"/>
            <Enum Name="WeaponMHPowerGlove" Id="2255" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumItemQuality" Incomplete="true" Id="2305">
            <Enum Name="Artifact" Id="8533"/>
            <Enum Name="Exquisite" Id="2310" Deleted="true"/>
            <Enum Name="Phenomenal" Id="2311" Deleted="true"/>
            <Enum Name="Extraordinary" Id="2312" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumItemUpdateReason" Incomplete="true" Id="3531">
            <Enum Name="GM" Id="17073"/>
            <Enum Name="Expired" Id="17074"/>
            <Enum Name="Gadget" Id="17075"/>
            <Enum Name="AltSpell" Id="17076"/>
            <Enum Name="Challenge" Id="17077"/>
            <Enum Name="SettlerImprovementConsumeResource" Id="17078"/>
            <Enum Name="HousingContribution" Id="17079"/>
            <Enum Name="HousingUpkeep" Id="17080"/>
            <Enum Name="TradeskillAdditiveCost" Id="17081"/>
            <Enum Name="TradeskillGlyph" Id="17082"/>
            <Enum Name="UniqueCleanup" Id="17083"/>
            <Enum Name="PathExplorerReward" Id="17084"/>
            <Enum Name="CharacterRecustomization" Id="17085"/>
            <Enum Name="LootForge" Id="17086"/>
            <Enum Name="RewardTrack" Id="17196"/>
            <Enum Name="MatchingReward" Id="17197"/>
            <Enum Name="DyeCostume" Id="17265"/>
        </EnumSet>
        <EnumSet Name="CodeEnumMicrochipType" Incomplete="true" Id="4990">
            <Enum Name="Resistor" Id="8534"/>
            <Enum Name="Inductor" Id="8535"/>
            <Enum Name="Capacitor" Id="8536"/>
        </EnumSet>
        <EnumSet Name="CodeEnumSigilType" Incomplete="true" Id="8537">
            <Enum Name="Air" Id="8538"/>
            <Enum Name="Fire" Id="8539"/>
            <Enum Name="Water" Id="8540"/>
            <Enum Name="Earth" Id="8541"/>
            <Enum Name="Logic" Id="8542"/>
            <Enum Name="Life" Id="8543"/>
            <Enum Name="Fusion" Id="8544"/>
            <Enum Name="Omni" Id="8545"/>
        </EnumSet>
        <Method Name="isGlyphData" Incomplete="true" Id="9828"/>
        <Method Name="isModdableData" Incomplete="true" Id="9829"/>
        <Method Name="GetSigils" Incomplete="true" Id="9830"/>
        <Function Name="GetPropertyName" Incomplete="true" Id="9831"/>
        <Method Name="GetDetailedInfo" Incomplete="true" Id="9833"/>
        <Method Name="IsSoulbound" Incomplete="true" Id="9834"/>
        <Method Name="GetChatLinkString" Incomplete="true" Id="9835"/>
        <Method Name="GetGlobalCatalystInfo" Incomplete="true" Id="9836"/>
        <Method Name="GetGlyphInfo" Incomplete="true" Id="9837"/>
        <Method Name="PlayEquipSound" Incomplete="true" Id="9840"/>
        <Method Name="GetAvailableDyeChannel" Incomplete="true" Id="9841"/>
        <Method Name="GetGlyphBonus" Incomplete="true" Id="9845"/>
        <Method Name="GetReturnTimeRemaining" Incomplete="true" Id="9847"/>
        <EnumSet Name="CodeEnumItemDetailedTooltip" Incomplete="true" Id="9848">
            <Enum Name="Basic" Id="9849"/>
            <Enum Name="Spells" Id="9850"/>
            <Enum Name="Economics" Id="9851"/>
            <Enum Name="Sigils" Id="9852"/>
            <Enum Name="Imbuements" Id="9853"/>
            <Enum Name="Stats" Id="9854"/>
            <Enum Name="Restrictions" Id="9855"/>
            <Enum Name="Specifics" Id="9856"/>
        </EnumSet>
        <Function Name="isInstance" Incomplete="true" Id="12448"/>
        <Function Name="isData" Incomplete="true" Id="12449"/>
        <Function Name="isGlyphData" Incomplete="true" Id="12450"/>
        <Function Name="isModdableData" Incomplete="true" Id="12451"/>
        <Method Name="HasRestockingFee" Incomplete="true" Id="12452"/>
        <Method Name="CanDelete" Incomplete="true" Id="12453"/>
        <Method Name="GetRequiredFaction" Incomplete="true" Id="12454"/>
        <Function Name="CanMoveToSupplySatchel" Incomplete="true" Id="13075"/>
        <Function Name="GetSetBonuses" Incomplete="true" Id="13076"/>
        <Function Name="CanAutoSalvage" Incomplete="true" Id="13077"/>
        <Function Name="GetBackpackCount" Incomplete="true" Id="13078"/>
        <Function Name="GetRequiredRace" Incomplete="true" Id="13079"/>
        <Function Name="GetWeaponDamageMin" Incomplete="true" Id="13080"/>
        <Function Name="GetDurationRemaining" Incomplete="true" Id="13081"/>
        <Function Name="GetMaxDurability" Incomplete="true" Id="13082"/>
        <Function Name="GetHousingDecorInfoId" Incomplete="true" Id="13083"/>
        <Function Name="GetBuyPrice" Incomplete="true" Id="13084"/>
        <Function Name="GetGlyphBonus" Incomplete="true" Id="13085"/>
        <Function Name="GetItemType" Incomplete="true" Id="13086"/>
        <Function Name="IsDestroyOnLogout" Incomplete="true" Id="13087"/>
        <Function Name="GetItemTypeName" Incomplete="true" Id="13088"/>
        <Function Name="GetDetailedInfo" Incomplete="true" Id="13089"/>
        <Function Name="GetDurationTotal" Incomplete="true" Id="13090"/>
        <Function Name="GetPowerLevel" Incomplete="true" Id="13091"/>
        <Function Name="CanDelete" Incomplete="true" Id="13092"/>
        <Function Name="GetEmptySockets" Incomplete="true" Id="13093"/>
        <Function Name="GetSellPrice" Incomplete="true" Id="13094"/>
        <Function Name="IsSoulbound" Incomplete="true" Id="13095"/>
        <Function Name="GetItemFamilyName" Incomplete="true" Id="13096"/>
        <Function Name="GetReturnTimeRemaining" Incomplete="true" Id="13097"/>
        <Function Name="IsAuctionable" Incomplete="true" Id="13098"/>
        <Function Name="GetItemCategoryName" Incomplete="true" Id="13099"/>
        <Function Name="GetGivenQuest" Incomplete="true" Id="13100"/>
        <Function Name="GetChatLinkString" Incomplete="true" Id="13101"/>
        <Function Name="GetBagSlots" Incomplete="true" Id="13102"/>
        <Function Name="GetRequiredLevel" Incomplete="true" Id="13103"/>
        <Function Name="GetRequiredClass" Incomplete="true" Id="13104"/>
        <Function Name="GetItemQuality" Incomplete="true" Id="13105"/>
        <Function Name="CanEquip" Incomplete="true" Id="13106"/>
        <Function Name="CanSalvage" Incomplete="true" Id="13107"/>
        <Function Name="GetWeaponPower" Incomplete="true" Id="13108"/>
        <Function Name="GetItemCategory" Incomplete="true" Id="13109"/>
        <Function Name="MoveToSupplySatchel" Incomplete="true" Id="13110"/>
        <Function Name="GetActivateSpell" Incomplete="true" Id="13111"/>
        <Function Name="GetName" Incomplete="true" Id="13112"/>
        <Function Name="GetSlotName" Incomplete="true" Id="13113"/>
        <Function Name="IsCommodity" Incomplete="true" Id="13114"/>
        <Function Name="GetInventoryId" Incomplete="true" Id="13115"/>
        <Function Name="GetIcon" Incomplete="true" Id="13116"/>
        <Function Name="GetAdditiveInfo" Incomplete="true" Id="13117"/>
        <Function Name="GetCharges" Incomplete="true" Id="13118"/>
        <Function Name="CanTakeFromSupplySatchel" Incomplete="true" Id="13119"/>
        <Function Name="GetEquippedItemForItemType" Incomplete="true" Id="13120"/>
        <Function Name="GetWeaponSpeed" Incomplete="true" Id="13121"/>
        <Function Name="GetItemPower" Incomplete="true" Id="13122"/>
        <Function Name="TakeFromSupplySatchel" Incomplete="true" Id="13123"/>
        <Function Name="GetWeaponDamageMax" Incomplete="true" Id="13124"/>
        <Function Name="GetMicrochipInfo" Incomplete="true" Id="13125"/>
        <Function Name="IsDestroyOnZone" Incomplete="true" Id="13126"/>
        <Function Name="PlayEquipSound" Incomplete="true" Id="13127"/>
        <Function Name="IsUnique" Incomplete="true" Id="13128"/>
        <Function Name="GetMaxCharges" Incomplete="true" Id="13129"/>
        <Function Name="GetAvailableDyeChannel" Incomplete="true" Id="13130"/>
        <Function Name="IsEquippable" Incomplete="true" Id="13131"/>
        <Function Name="GetDurability" Incomplete="true" Id="13132"/>
        <Function Name="GetRepairCost" Incomplete="true" Id="13133"/>
        <Function Name="GetSlot" Incomplete="true" Id="13134"/>
        <Function Name="GetGlyphInfo" Incomplete="true" Id="13135"/>
        <Function Name="GetProcSpell" Incomplete="true" Id="13136"/>
        <Function Name="GetProficiencyInfo" Incomplete="true" Id="13137"/>
        <Function Name="GetEquippedCount" Incomplete="true" Id="13138"/>
        <Function Name="GetGlobalCatalystInfo" Incomplete="true" Id="13139"/>
        <Function Name="HasRestockingFee" Incomplete="true" Id="13140"/>
        <Function Name="GetArmor" Incomplete="true" Id="13141"/>
        <Function Name="GetMaxStackCount" Incomplete="true" Id="13142"/>
        <Function Name="GetItemFamily" Incomplete="true" Id="13143"/>
        <Function Name="GetItemFlavor" Incomplete="true" Id="13144"/>
        <Function Name="GetEquipSpell" Incomplete="true" Id="13145"/>
        <Function Name="GetItemId" Incomplete="true" Id="13146"/>
        <Function Name="GetRequiredFaction" Incomplete="true" Id="13147"/>
        <Function Name="GetStackCount" Incomplete="true" Id="13148"/>
        <Method Name="__eq" Incomplete="true" Id="13149"/>
        <Method Name="__gc" Incomplete="true" Id="13150"/>
        <Method Name="GetTradeskillSchematicId" Incomplete="true" Id="14830"/>
        <EnumSet Name="CodeEnumLootItemType" Incomplete="true" Id="14831">
            <Enum Name="StaticItem" Id="14832"/>
            <Enum Name="AltTable" Id="14833"/>
            <Enum Name="Cash" Id="14834"/>
            <Enum Name="Spell" Id="14835"/>
            <Enum Name="CurrencyExchange" Id="14836"/>
            <Enum Name="VirtualItem" Id="14837"/>
            <Enum Name="AdventureSpell" Id="14838"/>
        </EnumSet>
        <Method Name="isRuneData" Incomplete="true" Id="16437"/>
        <Method Name="GetRuneSlots" Incomplete="true" Id="16438"/>
        <Function Name="isRuneData" Incomplete="true" Id="16439"/>
        <Method Name="GetRuneInfo" Incomplete="true" Id="16440"/>
        <Method Name="GetBankCount" Incomplete="true" Id="16441"/>
        <EnumSet Name="CodeEnumRuneType" Incomplete="true" Id="16442">
            <Enum Name="Air" Id="16443"/>
            <Enum Name="Fire" Id="16444"/>
            <Enum Name="Water" Id="16445"/>
            <Enum Name="Earth" Id="16446"/>
            <Enum Name="Logic" Id="16447"/>
            <Enum Name="Life" Id="16448"/>
            <Enum Name="Fusion" Id="16449"/>
            <Enum Name="Omni" Id="16450"/>
        </EnumSet>
        <Function Name="GetBankCount" Incomplete="true" Id="16533"/>
        <Function Name="GetRuneInfo" Incomplete="true" Id="16534"/>
        <Function Name="GetTradeskillSchematicId" Incomplete="true" Id="16535"/>
        <Function Name="CanCombineInEldanForge" Incomplete="true" Id="17087"/>
        <Function Name="IsAtEldanForge" Incomplete="true" Id="17088"/>
        <Method Name="GetEffectiveLevel" Incomplete="true" Id="17089"/>
        <Method Name="IsTradeable" Incomplete="true" Id="17090"/>
        <Method Name="IsAlwaysTradeable" Incomplete="true" Id="17266"/>
        <Method Name="IsTradeableTo" Incomplete="true" Id="17267"/>
        <Method Name="GetEffectiveLevel" Desc="Does a lua_pushinteger of itemData&apos;s effective level, or niil if null." Incomplete="true" Id="830" Deleted="true"/>
        <Method Name="GetBinding" Desc="Does a localized lua_pushwstring of either Soulbound, Bind of Pickup, or Bind on Equip specified by itemData, or nil if null." Incomplete="true" Id="835" Deleted="true"/>
        <Method Name="GetGenericString" Desc="Does a lua_pushwstring of a formatted string (to &apos;$1c $1n&apos;) with an actor corresponding to strName and fVal.
uses as library" Incomplete="true" Id="837" Deleted="true"/>
        <Method Name="GetCompareString" Desc="Does a lua_pushwstring of a CompareString of strName, fBefore, and fAfter.
uses as library" Incomplete="true" Id="840" Deleted="true"/>
        <Method Name="GetPropertiesSequential" Desc="Does a lua_newtable with an index, id, and value of properties specified by itemData, or nil if null." Incomplete="true" Id="847" Deleted="true"/>
        <Method Name="GetPropertiesKeyed" Desc="Does a lua_newtable with an index, id, and offset of properties specified by itemData, or nil if null." Incomplete="true" Id="848" Deleted="true"/>
        <Method Name="GetPropertyName" Desc="Does a lua_pushwstring of the localized property name specified by itemId, or nil if null." Incomplete="true" Id="849" Deleted="true"/>
        <Method Name="GetPropertyString" Desc="Does a lua_pushwstring of the localized property value specified by itemId, or nil if null." Incomplete="true" Id="851" Deleted="true"/>
        <Method Name="GetPropertyCompareString" Desc="Does a lua_pushwstring of the compare result of a property value specified by itemId, or nil if null." Incomplete="true" Id="853" Deleted="true"/>
        <Method Name="GetResistances" Desc="Currently has no implementation" Incomplete="true" NotImplemented="true" Id="855" Deleted="true"/>
        <Method Name="GetResistancesSequential" Desc="Currently has no implementation" Incomplete="true" NotImplemented="true" Id="856" Deleted="true"/>
        <Method Name="GetResistanceName" Desc="Currently has no implementation" Incomplete="true" NotImplemented="true" Id="857" Deleted="true"/>
        <Method Name="GetResistanceCategoryName" Desc="Currently has no implementation" Incomplete="true" NotImplemented="true" Id="858" Deleted="true"/>
        <Method Name="GetUniqueStatus" Desc="Does a lua_pushwstring of the localized Unique or Unique Equipped item status, or nil if null." Incomplete="true" Id="865" Deleted="true"/>
        <Method Name="GetQuestItem" Desc="Does a lua_pushwstring of &apos;Quest Item&apos; if applicable to itemData, or nil if null." Incomplete="true" Id="866" Deleted="true"/>
        <Method Name="GetQuestDrop" Desc="Does a lua_pushwstring of &apos;Quest Drop&apos; if applicable to itemData, or nil if null." Incomplete="true" Id="867" Deleted="true"/>
        <Method Name="GetConsumable" Desc="Does a lua_pushwstring of &apos;Consumable&apos; if applicable to itemData, or nil if null." Incomplete="true" Id="868" Deleted="true"/>
        <Method Name="GetNoRequiredLevel" Desc="Does a lua_pushwstring of &apos;No required level&apos; if applicable to itemData, or nil if null." Incomplete="true" Id="871" Deleted="true"/>
        <Method Name="GetInnateHP" Desc="Does a lua_pushnumber of playerHealthBonus specified by itemData, or 0.0f if null." Incomplete="true" Id="879" Deleted="true"/>
        <Method Name="GetSpecial" Desc="Does a lua_newtable describing many (10+) fields relating to the item specified by itemData." Incomplete="true" Id="882" Deleted="true"/>
        <Method Name="GetLevelOffset" Incomplete="true" Id="3104" Deleted="true"/>
        <Method Name="GetModdableData" Incomplete="true" Id="3108" Deleted="true"/>
        <Method Name="GetSchematicId" Incomplete="true" Id="3109" Deleted="true"/>
        <Method Name="GetBaseItemPower" Incomplete="true" Id="3480" Deleted="true"/>
        <Method Name="GetAmplifierPower" Incomplete="true" Id="3481" Deleted="true"/>
        <Method Name="GetRequiredItemPower" Incomplete="true" Id="3482" Deleted="true"/>
        <Method Name="GetRequiredSocketPower" Incomplete="true" Id="3483" Deleted="true"/>
        <Method Name="GetMicrochipSpells" Incomplete="true" Id="3486" Deleted="true"/>
        <Method Name="CanMod" Incomplete="true" Id="3488" Deleted="true"/>
        <Method Name="CanExtract" Incomplete="true" Id="3489" Deleted="true"/>
        <Method Name="GetItemChallenges" Incomplete="true" Id="3494" Deleted="true"/>
    </Object>
    <Object Name="Money" Incomplete="true" Id="885" Prefix="mon">
        <EnumSet Name="CodeEnumCurrencyType" Incomplete="true" Id="3503">
            <Enum Name="GroupCurrency" Id="8546"/>
            <Enum Name="ShadeSilver" Id="16451"/>
            <Enum Name="Glory" Id="17091"/>
        </EnumSet>
        <Method Name="GetAltType" Incomplete="true" Id="8547"/>
        <Method Name="SetAltType" Incomplete="true" Id="8548"/>
        <Method Name="Multiply" Incomplete="true" Id="8549"/>
        <EnumSet Name="CodeEnumGroupCurrencyType" Incomplete="true" Id="8550">
            <Enum Name="None" Id="8551"/>
            <Enum Name="WarCoins" Id="8552"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13151"/>
        <Method Name="GetExchangeItem" Incomplete="true" Id="17092"/>
        <Method Name="SetExchangeItem" Incomplete="true" Id="17093"/>
    </Object>
    <Object Name="Quest" Incomplete="true" Id="914" Prefix="que">
        <Method Name="IsAbleToAdvanceInRaid" Incomplete="true" Id="8553"/>
        <Method Name="DisplayObjectiveProgressBar" Incomplete="true" Id="8554"/>
        <Method Name="GetChatLinkString" Incomplete="true" Id="8555"/>
        <Method Name="GetMapRegions" Incomplete="true" Id="9857"/>
        <Method Name="__lt" Incomplete="true" Id="13152"/>
        <Method Name="__gt" Incomplete="true" Id="13153"/>
        <Method Name="__eq" Incomplete="true" Id="13154"/>
        <Method Name="__gc" Incomplete="true" Id="13155"/>
        <Method Name="IsOptionalForEpisode" Incomplete="true" Id="14839"/>
        <Method Name="IsImbuementQuest" Incomplete="true" Id="17094"/>
        <Method Name="IsContract" Incomplete="true" Id="17095"/>
        <Method Name="GetRepeatPeriod" Incomplete="true" Id="17096"/>
        <Method Name="GetZoneId" Incomplete="true" Id="17198"/>
        <Method Name="GetTrackerIndex" Desc="Currently has no implementation" Incomplete="true" Id="950" Deleted="true"/>
        <Method Name="AcceptSubMission" Desc="Runs AcceptMission with the quest id and pUnit&apos;s id." Incomplete="true" Id="961" Deleted="true"/>
        <Method Name="IsSubMission" Desc="Does a lua_pushboolean of IsPathSubMission." Incomplete="true" Id="963" Deleted="true"/>
        <Method Name="GetSubMissionType" Desc="Does a lua_pushinteger of PlayerPathTypeForceInt or SubMissionPathType if pLuaQuest is specified." Incomplete="true" Id="964" Deleted="true"/>
        <Method Name="GetCompletedShortSummary" Incomplete="true" Id="2569" Deleted="true"/>
        <Method Name="GetEpisodes" Incomplete="true" Id="3514" Deleted="true"/>
    </Object>
    <Object Name="Spell" Incomplete="true" Id="975" Prefix="spl">
        <EnumSet Name="CodeEnumCastMethod" Incomplete="true" Id="2319">
            <Enum Name="UNUSED04" Id="8556"/>
            <Enum Name="Aura" Id="8557"/>
            <Enum Name="Focused" Id="2322" Deleted="true"/>
            <Enum Name="Talent" Id="2324" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumSchool" Incomplete="true" Id="2326">
            <Enum Name="Unarmed" Id="9858"/>
        </EnumSet>
        <EnumSet Name="CombatMessageType" Incomplete="true" Id="3521">
            <Enum Name="UNUSED04" Id="9859"/>
            <Enum Name="UNUSED03" Id="9860"/>
            <Enum Name="LootArtifact" Id="9861"/>
            <Enum Name="LootExquisite" Id="7359" Deleted="true"/>
            <Enum Name="LootPhenomenal" Id="7360" Deleted="true"/>
            <Enum Name="LootExtraordinary" Id="7361" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumSpellClass" Incomplete="true" Id="6567">
            <Enum Name="BuffNonDispelRightClickOk" Id="9862"/>
        </EnumSet>
        <EnumSet Name="CodeEnumCastResult" Incomplete="true" Id="5071">
            <Enum Name="SpellUnknown" Id="9863"/>
            <Enum Name="ItemAchievementComplete" Id="9864"/>
            <Enum Name="Caster_CannotBeInCombat" Id="9865"/>
            <Enum Name="Caster_MustBeInCombat" Id="9866"/>
            <Enum Name="Target_CannotBeInCombat" Id="9867"/>
            <Enum Name="Target_MustBeInCombat" Id="9868"/>
            <Enum Name="CCDisableCinematic" Id="9869"/>
            <Enum Name="Caster_MustBe_DisableCinematic" Id="9870"/>
            <Enum Name="Target_MustBe_DisableCinematic" Id="9871"/>
            <Enum Name="Caster_CannotBe_DisableCinematic" Id="9872"/>
            <Enum Name="Target_CannotBe_DisableCinematic" Id="9873"/>
            <Enum Name="CCAbilityRestriction" Id="9874"/>
            <Enum Name="Caster_MustBe_AbilityRestriction" Id="9875"/>
            <Enum Name="Target_MustBe_AbilityRestriction" Id="9876"/>
            <Enum Name="Caster_CannotBe_AbilityRestriction" Id="9877"/>
            <Enum Name="Target_CannotBe_AbilityRestriction" Id="9878"/>
            <Enum Name="Target_VehicleBenefitRestricted" Id="9879"/>
            <Enum Name="TargetCannotBePet" Id="9880"/>
            <Enum Name="Target_HostileInvulnerability" Id="9881"/>
            <Enum Name="Target_InvulnerableToOther" Id="9882"/>
            <Enum Name="Target_BeneficialInvulnerability" Id="9883"/>
            <Enum Name="Caster_MustBe_Falling" Id="9884"/>
            <Enum Name="Caster_CannotBe_Falling" Id="9885"/>
            <Enum Name="Target_CannotBe_Falling" Id="9886"/>
            <Enum Name="Target_MustBe_Falling" Id="9887"/>
            <Enum Name="Caster_MustBe_Sprinting" Id="9888"/>
            <Enum Name="Caster_CannotBe_Sprinting" Id="9889"/>
            <Enum Name="Target_CannotBe_Sprinting" Id="9890"/>
            <Enum Name="Target_MustBe_Sprinting" Id="9891"/>
            <Enum Name="Queued" Id="9892"/>
            <Enum Name="ItemWrongRace" Id="9893"/>
            <Enum Name="ItemWrongClass" Id="9894"/>
            <Enum Name="ItemAlreadyUnlocked" Id="9895"/>
            <Enum Name="PlayerSpellPending" Id="12455"/>
            <Enum Name="Target_MustBe_PvpFlagged" Id="12456"/>
            <Enum Name="Caster_MustBe_PvpFlagged" Id="12457"/>
            <Enum Name="Target_OutsideTelegraph" Id="12458"/>
            <Enum Name="ShieldsOverloaded" Id="12459"/>
            <Enum Name="CasterVitalCostResource8" Id="17097"/>
            <Enum Name="CasterVitalCostResource9" Id="17098"/>
            <Enum Name="CasterVitalCostResource10" Id="17099"/>
            <Enum Name="SpellUnkown" Id="7396" Deleted="true"/>
            <Enum Name="ItemAchievmentComplete" Id="7419" Deleted="true"/>
            <Enum Name="Caster_CannotBeInCombatPVE" Id="7451" Deleted="true"/>
            <Enum Name="Caster_MustBeInCombatPVE" Id="7452" Deleted="true"/>
            <Enum Name="Caster_CannotBe_InCombatPVP" Id="7453" Deleted="true"/>
            <Enum Name="Caster_MustBe_InCombatPVP" Id="7454" Deleted="true"/>
            <Enum Name="Target_CannotBeInCombatPVE" Id="7500" Deleted="true"/>
            <Enum Name="Target_MustBeInCombatPVE" Id="7501" Deleted="true"/>
            <Enum Name="Target_CannotBe_InCombatPVP" Id="7502" Deleted="true"/>
            <Enum Name="Target_MustBe_InCombatPVP" Id="7503" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumSpellEffectType" Incomplete="true" Id="7687">
            <Enum Name="UnlockActionBar" Id="9896"/>
            <Enum Name="UNUSED040" Id="9897"/>
            <Enum Name="ModifyCreatureFlags" Id="9898"/>
            <Enum Name="UNUSED061" Id="9899"/>
            <Enum Name="UNUSED063" Id="9900"/>
            <Enum Name="ApplyLASChanges" Id="9901"/>
            <Enum Name="GiveAbilityPointsToPlayer" Id="9902"/>
            <Enum Name="ModifyAbilityCharges" Id="9903"/>
            <Enum Name="UNUSED091" Id="9904"/>
            <Enum Name="UNUSED104" Id="9905"/>
            <Enum Name="UnlockMount" Id="9906"/>
            <Enum Name="UnlockInlaidAugment" Id="9907"/>
            <Enum Name="GiveAugmentPowerToPlayer" Id="9908"/>
            <Enum Name="TemporarilyUnflagPvp" Id="9909"/>
            <Enum Name="SupportStuck" Id="9910"/>
            <Enum Name="MiniMapIcon" Id="9911"/>
            <Enum Name="Disembark" Id="9912"/>
            <Enum Name="ChangePlane" Id="9913"/>
            <Enum Name="ModifyRestedXP" Id="12460"/>
            <Enum Name="HousingPlantSeed" Id="17100"/>
            <Enum Name="UnlockVanityPet" Id="17101"/>
            <Enum Name="SummonVanityPet" Id="17102"/>
            <Enum Name="UNUSED114" Id="17199"/>
            <Enum Name="UNUSED115" Id="17200"/>
            <Enum Name="UNUSED011" Id="17268"/>
            <Enum Name="UNUSED039" Id="17269"/>
            <Enum Name="UNUSED050" Id="17270"/>
            <Enum Name="UNUSED054" Id="17271"/>
            <Enum Name="UNUSED070" Id="17272"/>
            <Enum Name="UNUSED072" Id="17273"/>
            <Enum Name="UNUSED074" Id="17274"/>
            <Enum Name="UNUSED102" Id="17275"/>
            <Enum Name="UNUSED103" Id="17276"/>
            <Enum Name="CharmCreature" Id="7746" Deleted="true"/>
            <Enum Name="NpcSetAIState" Id="7747" Deleted="true"/>
            <Enum Name="RecalculateSpellModifications" Id="7749" Deleted="true"/>
            <Enum Name="GrantCharmerPet" Id="7755" Deleted="true"/>
            <Enum Name="HobbyWrangleCreature" Id="7764" Deleted="true"/>
            <Enum Name="DEPRECATED01" Id="7776" Deleted="true"/>
            <Enum Name="DEPRECATED02" Id="7777" Deleted="true"/>
        </EnumSet>
        <Method Name="GetBaseSpellId" Incomplete="true" Id="8558"/>
        <Method Name="GetCastTimeOverride" Incomplete="true" Id="8559"/>
        <Method Name="GetCastInfoString" Incomplete="true" Id="8560"/>
        <Method Name="GetProxyChannelData" Incomplete="true" Id="8561"/>
        <Method Name="GetCooldownRemaining" Incomplete="true" Id="8562"/>
        <Method Name="GetLasTierDesc" Incomplete="true" Id="8563"/>
        <Method Name="GetLasBonusEachTierDesc" Incomplete="true" Id="8564"/>
        <Method Name="GetGCDTime" Incomplete="true" Id="9914"/>
        <EnumSet Name="CodeEnumSpellTag" Incomplete="true" Id="9915">
            <Enum Name="Assault" Id="9916"/>
            <Enum Name="Support" Id="9917"/>
            <Enum Name="Path" Id="9918"/>
            <Enum Name="Misc" Id="9919"/>
            <Enum Name="Mount" Id="9920"/>
            <Enum Name="DoesNotUseSpecIndex" Id="9921"/>
            <Enum Name="Utility" Id="9922"/>
            <Enum Name="NotAutoActivated" Id="12461"/>
            <Enum Name="Conditional" Id="17103"/>
            <Enum Name="VanityPet" Id="17104"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13156"/>
        <Method Name="__gc" Incomplete="true" Id="13157"/>
        <Method Name="GetCostInfoString" Incomplete="true" Id="17105"/>
        <Method Name="ShouldHideCooldownInTooltip" Incomplete="true" Id="17106"/>
        <Method Name="GetInstanceMaxCount" Desc="Does a lua_pushinteger of pSpell&apos;s maxSpellInstanceCount." Incomplete="true" Id="998" Deleted="true"/>
        <Function Name="ShortcutCast" Desc="Runs g_game&apos;s CastShortcutSpell with pSpell&apos;s id." Incomplete="true" Id="1024" Deleted="true"/>
    </Object>
    <Object Name="Unit" Incomplete="true" Id="1058" Prefix="unit" Desc="Any character in game, including players, NPCs, Banks, summoned Pets and Mounts, Vendors, and Ability Vendors">
        <Event Name="UnitCreated" Incomplete="true" Id="1059" Desc="An event that is fired whenever a unit is spawned or a player enters the world">
            <Param Name="unitSpawned" Type="Unit" Id="1060" Desc="The newly created unit"/>
        </Event>
        <Event Name="UnitDestroyed" Incomplete="true" Id="1061" Desc="An event that gets fired whenever a unit is despawned or a player leaves the game world">
            <Param Name="unitDestroyed" Type="Unit" Id="1062" Desc="The unit that has left this world"/>
        </Event>
        <Event Name="UnitNameChanged" Incomplete="true" Id="1063" Desc="An event that gets fired whenever the unit&apos;s name gets changed">
            <Param Name="unitChanged" Type="Unit" Id="1064" Desc="The unit whose name was changed"/>
            <Param Name="strNewName" Type="String" Id="1065" Desc="The unit&apos;s new name"/>
        </Event>
        <Event Name="UnitEnteredCombat" Incomplete="true" Id="1066" Desc="An event that gets fired whenever a unit enters or leaves combat">
            <Param Name="unitInCombat" Type="Unit" Id="1067" Desc="The unit that just entered combat"/>
            <Param Name="bInCombat" Type="Boolean" Id="1068" Desc="A boolean stating whether or not the unit has entered or left combat"/>
        </Event>
        <Event Name="UnitActivationTypeChanged" Incomplete="true" Id="1074" Desc="An event that gets fired whenever the effect that happens when you interact with the object changes." Example="Examples of when this event is fired include:
- When a friendly player dies and can be revived by right clicking the corpse
- When an object becomes interactive due to a quest or some other prerequisite
- When an NPC offers a quest when they did not have one previously.
">
            <Param Name="unitChanged" Type="Unit" Id="1075" Desc="The unit who has a new activation type"/>
        </Event>
        <Event Name="UnitMiniMapMarkerChanged" Incomplete="true" Id="1076" Desc="An event that is fired whenever a player whose location shows on the map/minimap moves">
            <Param Name="unitMoving" Type="Unit" Id="1077" Desc="The unit who has changed position"/>
        </Event>
        <Event Name="TargetUnitChanged" Incomplete="true" Id="1078" Desc="An event that is fired whenever the player changes their target">
            <Param Name="unitTarget" Type="Unit" Id="1079" Desc="The unit&apos;s new target"/>
        </Event>
        <Event Name="InteractiveUnitChanged" Incomplete="true" Id="1080" Desc="This event is fired when the player targets an interactive unit, such as vendors, quest givers, and quest objective NPCs/props.">
            <Param Name="unitNewTarget" Type="Unit" Id="1081" Desc="The interactive unit that the player is now targeting"/>
            <Param Name="strContext" Type="String" Id="1082" Desc="A brief description of how the player can interact with the unit"/>
        </Event>
        <Event Name="Mount" Incomplete="true" Id="1083" Desc="An event that gets fired when the player mounts or dismounts">
            <Param Name="bMounted" Type="Boolean" Id="1084" Desc="A boolean that states whether the player is mounting or dismounting"/>
        </Event>
        <Event Name="LootedItem" Incomplete="true" Id="1088" Desc="This event is fired when the player loots an item that was dropped by an NPC">
            <Param Name="itemLoot" Type="Item" Id="1089" Desc="The item that was looted"/>
            <Param Name="nCount" Type="Integer" Id="1090" Desc="The number of items in the stack that was looted"/>
        </Event>
        <Event Name="LootedMoney" Incomplete="true" Id="1091" Desc="This event is fired when the player loots currency that was dropped by an NPC">
            <Param Name="monLoot" Type="Money" Id="1092" Desc="The currency that the player looted"/>
        </Event>
        <Event Name="SpellCastFailed" Id="1093" Desc="An event that fires whenever a spell is canceled by any means" InternalNotes="Need to give Lua access to ECombatMessageType and 
ESpell4CastResul" NotImplemented="true">
            <Param Name="eMessageType" Type="Integer" Id="1094" Desc="An enum representing how long it will be before the unit can cast again. 
This value is currently set to ECombatMessageType, which is not available to 
the Lua API at the moment."/>
            <Param Name="eCastResult" Type="Integer" Id="1095" Desc="An enum representing why the cast failed.  This value uses the
ESpell4CastResult enum, which is not available to players at the moment."/>
            <Param Name="unitTarget" Type="Unit" Id="1096" Desc="The target of the failed spell"/>
            <Param Name="unitSource" Type="Unit" Id="1097" Desc="The caster of the failed spell"/>
            <Param Name="strMessage" Type="String" Id="1098" Desc="A string describing why the spell failed"/>
            <Param Name="strSpellName" Desc="The name of the spell that failed" Type="string" Id="8872"/>
        </Event>
        <Event Name="DamageOrHealingDone" Incomplete="true" Id="1099" Desc="An event that gets fired whenever a unit takes damage or gets healed.  ">
            <Param Name="unitCaster" Type="Unit" Id="1100" Desc="The unit who used the spell that caused the damage/healing"/>
            <Param Name="unitTarget" Type="Unit" Id="1101" Desc="The unit that received the damage/healing"/>
            <Param Name="eDamageType" Type="Integer" Id="1102" Desc="The type of damage done to the unit.  This enum corresponds with 
GameLib.CodeEnumDamageType"/>
            <Param Name="nHealth" Type="Integer" Id="1103" Desc="The amount of damage or healing done to the target&apos;s health"/>
            <Param Name="nShields" Desc="The amount of damage or healing done to the target&apos;s shields" Type="Integer" Id="8868"/>
            <Param Name="nAbsorb" Desc="The amount of damage or healing done to the target&apos;s absorption" Type="Integer" Id="8869"/>
            <Param Name="bIsCritical" Desc="Whether or not the attack was a critical hit" Type="Boolean" Id="8870"/>
            <Param Name="splUsed" Desc="The spell that did the damage / healing to the target" Type="Spell" Id="8871"/>
            <Param Name="IsCritical" Type="Boolean" Id="1104" Deleted="true"/>
        </Event>
        <Event Name="AttackMissed" Incomplete="true" Id="1108" Desc="An event that is fired when a unit dodges an attack from another unit">
            <Param Name="unitCaster" Type="Unit" Id="1109" Desc="The unit that performed the attack"/>
            <Param Name="unitTarget" Type="Unit" Id="1110" Desc="The unit that was the target of the attack"/>
            <Param Name="eMissType" Type="Integer" Id="1111" Desc="An enum that describes why the attack missed.  Uses the 
GameLib.CodeEnumMissType enum list"/>
        </Event>
        <Event Name="ExperienceGained" Incomplete="true" Id="1112" Desc="An event fired when a unit gains experience">
            <Param Name="unitTarget" Type="Unit" Id="1114" Desc="The unit that gained the experience"/>
            <Param Name="strText" Type="String" Id="1115" Desc="A localized string containing the amount of XP gained and any relevant notes
on why the unit gained the XP.  Current modiefiers include &quot;Bonus XP&quot; for 
killing clusters of NPCs, &quot;Explorer&apos;s XP&quot; for discovering new areas for the first
time, and Rested XP for XP gained while the user had the Rested bonus."/>
            <Param Name="nDelay" Type="Integer" Id="1116" Desc="The delay before the unit gains XP from the event.  This is usually set for
some time during an NPC&apos;s death animation."/>
        </Event>
        <Method Name="GetId" Desc="Returns the unit&apos;s ID" Incomplete="true" Id="1117">
            <ReturnValue Type="Integer" Desc="The unit&apos;s ID" Id="9155"/>
        </Method>
        <Method Name="IsValid" Desc="Determines whether or not the unit is valid.  Invalid units do not exist in the world." Incomplete="true" Id="1118"/>
        <Method Name="GetType" Desc="Returns the unit&apos;s type" Incomplete="true" Id="1119" Remarks="There are several possible values that can be returned here, such as
&quot;NonPlayer&quot;,
&quot;Chest&quot;,
&quot;Destructible&quot;,
&quot;Vehicle&quot;,
&quot;Door&quot;,
&quot;Harvest&quot;,
&quot;Corpse&quot;,
&quot;Mount&quot;,
&quot;Collectible&quot;,
&quot;Taxi&quot;,
&quot;Simple&quot;,
&quot;Platform&quot;,
&quot;Mailbox&quot;,
&quot;Turret&quot;,
&quot;InstancePortal&quot;,
&quot;Plug&quot;,
&quot;Residence&quot;,
&quot;StructuredPlug&quot;,
&quot;PinataLoot&quot;,
&quot;BindPoint&quot;,
&quot;Player&quot;,
&quot;HiddenSpell&quot;,
&quot;Trigger&quot;,
&quot;Ghost&quot;,
&quot;Pet&quot;,
&quot;Esper Pet&quot;,
&quot;World object&quot;,
&quot;Scanner&quot;,
&quot;Camera&quot;,
&quot;Trap&quot;,
&quot;DestructibleDoor&quot;,
&quot;Pickup&quot;,
&quot;SimpleCollidable&quot;,
&quot;HousingMannequin&quot;,
and &quot;Unknown&quot;">
            <ReturnValue Type="String" Desc="The unit&apos;s type" Id="9342"/>
        </Method>
        <Method Name="GetRaceId" Desc="Returns a number representing the unit&apos;s race" Incomplete="true" Id="1120" InternalNotes="Why do we have a GetRaceID and GetUnitRaceId?">
            <ReturnValue Type="Integer" Desc="A number representing the unit&apos;s race.  This value corresponds with the GameLib.CodeEnumRace enum" Id="9235"/>
        </Method>
        <Method Name="GetClassId" Desc="Returns the unit&apos;s class ID" Incomplete="true" Id="1121">
            <ReturnValue Type="Integer" Desc="The unit&apos;s class ID.  This value corresponds with the GameLib.CodeEnumClass enum." Id="9003"/>
        </Method>
        <Method Name="GetSpellMechanicId" Desc="Returns the unit&apos;s spell mechanic ID number" Incomplete="true" Id="1122" InternalNotes="Depricated?">
            <ReturnValue Type="Integer" Desc="The unit&apos;s spell mechanic ID number" Id="9313"/>
        </Method>
        <Method Name="GetHealth" Desc="Returns the unit&apos;s current HP" Incomplete="true" Id="1123">
            <ReturnValue Type="Integer" Desc="The unit&apos;s current HP" Id="9154"/>
        </Method>
        <Method Name="GetMaxHealth" Desc="Returns the unit&apos;s maximum health" Incomplete="true" Id="1124">
            <ReturnValue Type="Integer" Desc="The unit&apos;s maximum health" Id="9204"/>
        </Method>
        <Method Name="GetMana" Desc="Returns the unit&apos;s current amount of mana" Incomplete="true" Id="1125">
            <ReturnValue Type="Float" Id="9199" Desc="The unit&apos;s current amount of mana"/>
        </Method>
        <Method Name="GetMaxMana" Desc="Returns the unit&apos;s maximum Focus" Incomplete="true" Id="1126">
            <ReturnValue Type="Integer" Desc="The unit&apos;s maximum Focus" Id="9206"/>
        </Method>
        <Method Name="GetShieldCapacity" Desc="Returns the unit&apos;s current shield value" Incomplete="true" Id="1127">
            <ReturnValue Type="Integer" Desc="The unit&apos;s current shield value" Id="9308"/>
        </Method>
        <Method Name="GetShieldCapacityMax" Desc="Returns the unit&apos;s maximum shield value" Incomplete="true" Id="1128">
            <ReturnValue Type="Integer" Desc="The unit&apos;s maximum shield value" Id="9309"/>
        </Method>
        <Method Name="GetResource" Desc="Returns the amount of the specified resource that the unit has" Incomplete="true" Id="1129" Remarks="Resource0 = Endurance.  Endurance is the resource used while sprinting.


Resource1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers

Resource2 - 3 = Unused
Resource4 = Suit Power (stalkers)
Resource5-7 = Unused
">
            <Param Name="nResource" Type="Integer" Id="1130" Desc="The Resource number that the player is polling"/>
            <ReturnValue Type="Integer" Desc="The amount of the given resource that the unit has" Id="9261"/>
        </Method>
        <Method Name="GetSpellMechanicPercentage" Desc="Returns the percentage of the given resource the unit has." Incomplete="true" Id="1131" InternalNotes="Depricated?" Remarks="Resource0 = Endurance.  Endurance is the resource used while sprinting.


Resource1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers

Resource2 - 3 = Unused
Resource4 = Suit Power (stalkers)
Resource5-7 = Unused
">
            <Param Name="nResource" Type="Integer" Id="1132" Desc="The resource that is being polled"/>
            <ReturnValue Type="Float" Desc="The percentage of the given resource the unit has" Id="9315"/>
        </Method>
        <Method Name="GetResourceIcon" Desc="Returns the name of a resource&apos;s icon" Incomplete="true" Id="1133" InternalNotes="Not currently used in UI" Remarks="Resource0 = Endurance.  Endurance is the resource used while sprinting.


Resource1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers

Resource2 - 3 = Unused
Resource4 = Suit Power (stalkers)
Resource5-7 = Unused
">
            <Param Name="nResource" Type="Integer" Id="1134" Desc="The Resource being polled."/>
            <ReturnValue Type="String" Desc="The name of the given resource&apos;s icon." Id="9273"/>
        </Method>
        <Method Name="GetResourceTooltip" Desc="Returns the tooltip string for the given resource" Incomplete="true" Id="1135" Remarks="Resource0 = Endurance.  Endurance is the resource used while sprinting.


Resource1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers

Resource2 - 3 = Unused
Resource4 = Suit Power (stalkers)
Resource5-7 = Unused
" InternalNotes="Not called by UI">
            <Param Name="nResource" Type="Integer" Id="1136" Desc="The resource being polled for its tooltip"/>
            <ReturnValue Type="String" Desc="The tooltip string for the given resource" Id="9275"/>
        </Method>
        <Method Name="GetMaxResource" Desc="The maximum value for the specified resource" Incomplete="true" Id="1137">
            <Param Name="iResource" Type="Integer" Id="1138" Desc="An integer representing the various resources.

0 = Endurance.  Endurance is the resource used while sprinting.

1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers


2 - 3 = Unused

4 = Suit Power (stalkers) 5-7 = Unused
"/>
            <ReturnValue Type="Integer" Desc="The maximum value for the specified resource" Id="9207"/>
        </Method>
        <Method Name="GetMinResource" Desc="Returns the minimum amount of the given resource that the unit can have" Incomplete="true" Id="1139">
            <Param Name="iResource" Type="Integer" Id="1140" Desc="An integer representing the various resources.

0 = Endurance.  Endurance is the resource used while sprinting.

1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers


2 - 3 = Unused

4 = Suit Power (stalkers) 5-7 = Unused
"/>
            <ReturnValue Type="Integer" Desc="The minimum amount of a given resource that the unit can have" Id="9209"/>
        </Method>
        <Method Name="GetBasicStats" Desc="Returns a table containing a unit&apos;s most basic information" Incomplete="true" Id="1141" Remarks="Resource0 = Endurance.  Endurance is the resource used while sprinting.


Resource1 = Kinetic Energy (Warriors), Volatility (Engineers), Psi Points (Esper), Power Cores (Medic), and is not used for stalkers

Resource2 - 3 = Unused
Resource4 = Suit Power (stalkers)
Resource5-7 = Unused
">
            <ReturnValue Type="Table" Id="8941">
                <Item Name="strName" Desc="The unit&apos;s name" Type="String" Id="8942"/>
                <Item Name="nLevel" Desc="The unit&apos;s true level.  This value may be nil for some units" Type="Integer" Id="8943"/>
                <Item Name="nEffectiveLevel" Desc="The unit&apos;s effective level.  Effective level is only used when being leveled
down (mentoring) or leveled up (rallying).  This value will be nil for units
without a modified level." Type="Integer" Id="8944"/>
                <Item Name="nHealth" Desc="The unit&apos;s current health.  This value is nil for simple units." Type="Integer" Id="8945"/>
                <Item Name="nMaxHealth" Desc="The unit&apos;s max health.  This value is nil for simple units." Type="Integer" Id="8946"/>
                <Item Name="bShouldShowDeathPenalty" Desc="Whether or not the unit is affected by a death penalty timer" Type="Boolean" Id="8947"/>
                <Item Name="nPercentageOfDeathPenaltyTimer" Desc="The percent of the death penalty timer that is remaining for the unit" Type="Integer" Id="8948"/>
                <Item Name="nDeathPenaltyMinutes" Desc="The minute value of the unit&apos;s remaining death penalty timer" Type="Integer" Id="8949"/>
                <Item Name="nDeathPenaltySeconds" Desc="The seconds value of the unit&apos;s remaining death penalty timer.  This value
only counts the seconds and only goes from 0-59" Type="Integer" Id="8950"/>
                <Item Name="nResource0" Desc="The unit&apos;s current amount of Resource0" Type="Integer" Id="8951"/>
                <Item Name="nResource0min" Desc="The minimum amount of Resource0 a unit can have" Type="Integer" Id="8952"/>
                <Item Name="nResource0max" Desc="The maximum amount of Resource0 a unit can have" Type="Integer" Id="8953"/>
                <Item Name="nResource1" Type="Integer" Desc="The unit&apos;s current amount of Resource1" Id="8954"/>
                <Item Name="nResource1min" Type="Integer" Desc="The minimum amount of Resource1 a unit can have" Id="8955"/>
                <Item Name="nResource1max" Type="Integer" Desc="The maximum amount of Resource1 a unit can have" Id="8956"/>
                <Item Name="nResource2" Type="Integer" Desc="The unit&apos;s current amount of Resource2" Id="8957"/>
                <Item Name="nResource2min" Type="Integer" Desc="The minimum amount of Resource2 a unit can have" Id="8958"/>
                <Item Name="nResource2max" Type="Integer" Desc="The maximum amount of Resource2 a unit can have" Id="8959"/>
                <Item Name="nResource3" Type="Integer" Desc="The unit&apos;s current amount of Resource3" Id="8960"/>
                <Item Name="nResource3min" Type="Integer" Desc="The minimum amount of Resource3 a unit can have" Id="8961"/>
                <Item Name="nResource3max" Type="Integer" Desc="The maximum amount of Resource3 a unit can have" Id="8962"/>
                <Item Name="nResource4" Type="Integer" Desc="The unit&apos;s current amount of Resource4" Id="8963"/>
                <Item Name="nResource4min" Type="Integer" Desc="The minimum amount of Resource4 a unit can have" Id="8964"/>
                <Item Name="nResource4max" Type="Integer" Desc="The maximum amount of Resource4 a unit can have" Id="8965"/>
                <Item Name="nResource5" Type="Integer" Desc="The unit&apos;s current amount of Resource5" Id="8966"/>
                <Item Name="nResource5min" Type="Integer" Desc="The minimum amount of Resource5 a unit can have" Id="8967"/>
                <Item Name="nResource5max" Type="Integer" Desc="The maximum amount of Resource5 a unit can have" Id="8968"/>
                <Item Name="nResource6" Type="Integer" Desc="The unit&apos;s current amount of Resource6" Id="8969"/>
                <Item Name="nResource6min" Type="Integer" Desc="The minimum amount of Resource6 a unit can have" Id="8970"/>
                <Item Name="nResource6max" Type="Integer" Desc="The maximum amount of Resource6 a unit can have" Id="8971"/>
                <Item Name="nResource7" Type="Integer" Desc="The unit&apos;s current amount of Resource7" Id="8972"/>
                <Item Name="nResource7min" Type="Integer" Desc="The minimum amount of Resource7 a unit can have" Id="8973"/>
                <Item Name="nResource7max" Type="Integer" Desc="The maximum amount of Resource7 a unit can have" Id="8974"/>
            </ReturnValue>
        </Method>
        <Method Name="GetUnitProperty" Desc="Returns information on the specified property for the unit" Incomplete="true" Id="1144">
            <Param Name="eProperty" Type="Integer" Id="1145" Desc="This value corresponds with the Unit.CodeEnumProperties table"/>
            <ReturnValue Type="Table" Id="9352">
                <Item Name="idProperty" Desc="The ID number of the property" Type="Integer" Id="9353"/>
                <Item Name="fValue" Desc="The unit&apos;s current value for the property" Type="Float" Id="9354"/>
                <Item Name="fBase" Desc="The unit&apos;s base value for the property" Type="Float" Id="9355"/>
                <Item Name="strDisplayName" Desc="The name of the property" Type="String" Id="9356"/>
                <Item Name="nTooltipDisplayOrder" Desc="Where this should be displayed on item tooltips.  Lower values should be shown towards the top" Type="Integer" Id="9357"/>
            </ReturnValue>
        </Method>
        <Method Name="GetUnitProperties" Desc="Returns a table with information on each of the unit&apos;s properties" Incomplete="true" Id="1146">
            <ReturnValue Type="Table" Id="9346" Array="true">
                <Item Name="idProperty" Desc="The id number for the property" Type="Integer" Id="9347"/>
                <Item Name="fValue" Desc="The value of the property for the unit" Type="Float" Id="9348"/>
                <Item Name="fBase" Desc="The unit&apos;s base value for the property" Type="Float" Id="9349"/>
                <Item Name="strDisplayName" Desc="The name of the property" Type="String" Id="9350"/>
                <Item Name="nTooltipDisplayOrder" Desc="Where this property should be displayed in item tooltips, with lower numbers being towards the top of the tooltip" Type="Integer" Id="9351"/>
            </ReturnValue>
        </Method>
        <Method Name="GetName" Desc="Returns the name of the unit" Incomplete="true" Id="1148">
            <ReturnValue Type="String" Desc="The unit&apos;s name" Id="9214"/>
        </Method>
        <Method Name="GetPosition" Desc="Returns a table with the unit&apos;s position in x, y, and z coordinates" Incomplete="true" Id="1149">
            <ReturnValue Type="Table" Desc="The unit&apos;s position in x, y, and z coordinates" Id="9222">
                <Item Name="x" Type="Float" Id="9223"/>
                <Item Name="y" Type="Float" Id="9224"/>
                <Item Name="z" Type="False" Id="9225"/>
            </ReturnValue>
        </Method>
        <Method Name="GetAffiliationName" Desc="Returns the name of the faction that the character is affiliated with" Incomplete="true" Id="1150">
            <ReturnValue Type="String" Desc="The name of the faction that the unit is affiliated with" Id="8890"/>
        </Method>
        <Method Name="HasTitle" Desc="Determines whether or not the unit is displaying a title" Incomplete="true" Id="1151">
            <ReturnValue Type="Boolean" Id="9390"/>
        </Method>
        <Method Name="GetTitle" Desc="Returns the title that the unit is displaying" Incomplete="true" Id="1152">
            <ReturnValue Type="String" Desc="The title that the unit is displaying" Id="9330"/>
        </Method>
        <Method Name="GetLevel" Desc="Returns the unit&apos;s level" Incomplete="true" Id="1153">
            <ReturnValue Type="Integer" Desc="The unit&apos;s level" Id="9173"/>
        </Method>
        <Method Name="GetLevelString" Desc="Returns a localized string that includes a label and the unit&apos;s effective level" Incomplete="true" Id="1154">
            <ReturnValue Type="String" Desc="A string containing a label (&quot;Level: &quot; in English) and the unit&apos;s effective level" Id="9178"/>
        </Method>
        <Method Name="GetFaction" Desc="Gets the ID for the faction that the unit belongs to" Incomplete="true" Id="1155" Example="It&apos;s worth noting that the player&apos;s faction changes in certain PvP match types, such as Arenas and Hold the Line.">
            <ReturnValue Type="Unit.CodeEnumFaction" Desc="The ID for the faction that the unit belongs to" Id="9126"/>
        </Method>
        <Method Name="GetTarget" Desc="Returns the unit&apos;s current target" Incomplete="true" Id="1156">
            <ReturnValue Type="Unit" Desc="The unit&apos;s current target" Id="9324"/>
        </Method>
        <Method Name="GetClusterUnits" Desc="Returns a list of units in the unit&apos;s cluster" Incomplete="true" Id="1157">
            <ReturnValue Type="Unit" Desc="An array of the units in the cluster" Array="true" Id="9009"/>
        </Method>
        <Method Name="GetClusterInformation" Desc="Returns information on the cluster that the unit belongs to" Incomplete="true" Id="1158" InternalNotes="This function needs an enum for cluster difficulty">
            <ReturnValue Type="Table" Id="9004">
                <Item Name="eDifficulty" Desc="The cluster&apos;s difficulty.  This corresponds with the XXX enum" Type="Integer" Id="9005"/>
                <Item Name="nCount" Desc="The number of units in the cluster" Type="Integer" Id="9006"/>
                <Item Name="nIconCount" Desc="The number of enemies in the cluster" Type="Integer" Id="9007"/>
                <Item Name="tUnits" Desc="The units in the cluster" Type="Unit" Array="true" Id="9008"/>
            </ReturnValue>
        </Method>
        <Method Name="GetArchetype" Desc="Returns an NPC&apos;s archetype" Incomplete="true" Id="1159" InternalNotes="This needs TCreature2ArcheTypeId to be accessible by Lua">
            <ReturnValue Type="Table" Id="8892">
                <Item Name="idArchetype" Desc="An enum representing the NPC&apos;s archetype" Type="Integer" Id="8893"/>
                <Item Name="strIcon" Desc="The name of the icon that corresponds with a particular archetype" Type="String" Id="8894"/>
            </ReturnValue>
        </Method>
        <Method Name="GetEliteness" Desc="Returns an enum representing the unit&apos;s eliteness level" Incomplete="true" Id="1160">
            <ReturnValue Type="Integer" Desc="The unit&apos;s eliteness level.  This number corresponds with CodeEnumEliteness" Id="9119"/>
        </Method>
        <Method Name="GetRank" Desc="Returns an integer representing the unit&apos;s difficulty rank" Incomplete="true" Id="1161">
            <ReturnValue Type="Integer" Desc="An integer representing the unit&apos;s difficulty rank.  This value corresponds with the 
Unit.CodeEnumRank enum" Id="9236"/>
        </Method>
        <Method Name="GetActivationState" Desc="Passes a table with information on whether a unit can be interacted with, as well as who can interact with them." Incomplete="true" Id="1162" InternalNotes="Not all elements in the return table have descriptions at 
the moment">
            <ReturnValue Type="Table" Id="1163" Desc="This table is indexed by CUnit&apos;s s_ActivationInfo array">
                <Item Name="bActive" Type="Boolean" Id="1164"/>
                <Item Name="bCanInteract" Type="Boolean" Id="1165" Desc="Whether or not the player can interact with the unit"/>
                <Item Name="bUseableWhenDead" Type="Boolean" Id="1166" Desc="Whether or not the unit can be interacted with when dead.  This includes
dead players that can be revived"/>
                <Item Name="bUseableWhenHostile" Type="Boolean" Id="1167" Desc="Pretty self explanitory, really"/>
                <Item Name="bShowCallout" Type="Boolean" Id="1168" Desc="Whether the HUDAlert should be shown for the unit&apos;s interaction"/>
                <Item Name="bClickToMove" Type="Boolean" Id="1169"/>
                <Item Name="bIsHighlightable" Type="Boolean" Id="1170"/>
                <Item Name="bShowOverhead" Type="Boolean" Id="1171"/>
                <Item Name="bUsePlayerPath" Type="Boolean" Desc="The unit can only be interacted with by players with the appropriate path 
if this is set to true" Id="8889"/>
                <Item Name="playerPathType" Type="Integer" Id="1172" Deleted="true"/>
            </ReturnValue>
        </Method>
        <Method Name="GetMiniMapMarker" Desc="Returns the name for the character&apos;s marker on the minimap" Incomplete="true" Id="1173" InternalNotes="Is this even being used correctly?">
            <ReturnValue Type="String" Desc="A string representing the character&apos;s position on the minimap" Id="9208"/>
        </Method>
        <Method Name="IsDead" Desc="Determines whether or not the unit is dead or not" Incomplete="true" Id="1174">
            <ReturnValue Type="Boolean" Id="9399"/>
        </Method>
        <Method Name="IsCasting" Desc="Determines whether or not the unit is casting" Incomplete="true" Id="1175">
            <ReturnValue Type="Boolean" Id="9395"/>
        </Method>
        <Method Name="IsThePlayer" Desc="Determines whether or not the targeted unit is the player" Incomplete="true" Id="1176">
            <ReturnValue Type="Boolean" Id="9429"/>
        </Method>
        <Method Name="IsACharacter" Desc="Determines whether the unit is a player or not." Incomplete="true" Id="1177"/>
        <Method Name="IsElite" Desc="Not currently returning anything" Incomplete="true" Id="1178" InternalNotes="Does this have a use anymore?"/>
        <Method Name="IsInCCState" Desc="Determines whether or not the unit is being affected by crowd control" Incomplete="true" Id="1179">
            <ReturnValue Type="Boolean" Id="9407"/>
        </Method>
        <Method Name="GetCastName" Desc="Returns the name of the spell that the unit is currently casting.  Returns an empty string if the character is not casting." Incomplete="true" Id="1180">
            <ReturnValue Type="String" Desc="Returns the name of the spell that the unit is casting." Id="8998"/>
        </Method>
        <Method Name="GetCastDuration" Desc="Returns the cast time of the spell that the unit is currently attempting to cast.  If no spell is being cast, this returns 0." Incomplete="true" Id="1181">
            <ReturnValue Type="Integer" Desc="The cast time of the spell that the unit is currently attempting to cast (in milliseconds)" Id="8996"/>
        </Method>
        <Method Name="GetCastElapsed" Desc="Returns the amount of time since the unit began to cast an ability.  If the unit is not currently casting an ability, this returns 0." Incomplete="true" Id="1182">
            <ReturnValue Type="Integer" Desc="The amount of time since the the unit began to cast the ability (in milliseconds)" Id="8997"/>
        </Method>
        <Method Name="GetCastTotalPercent" Desc="Returns the percentage of the cast time that has elapsed for the spell that the unit is casting" Incomplete="true" Id="1183">
            <ReturnValue Type="Integer" Desc="The percentage of the cast time that is completed" Id="8999"/>
        </Method>
        <Method Name="GetCastBarType" Desc="Returns the player&apos;s current cast bar type from the Unit.CodeEnumCastBarType table" Incomplete="true" Id="1184">
            <ReturnValue Type="Integer" Desc="The type of cast bar that should be displayed when the unit uses an ability" Id="8995"/>
        </Method>
        <Method Name="GetMouseOverType" Desc="Returns a string describing the unit&apos;s target frame type" Incomplete="true" Id="1185">
            <ReturnValue Type="String" Desc="Returns &quot;Simple&quot; for units that have no HP and cannot be attacked or &quot;Normal&quot; for the rest" Id="9213"/>
        </Method>
        <Method Name="GetStandState" Desc="Returns the unit&apos;s stand state" Incomplete="true" Id="1186" Remarks="The states this function can return are &quot;Stand&quot;, &quot;Sit&quot;, &quot;LyingDown&quot;, &quot;State0&quot;, &quot;State1&quot;, &quot;State2&quot;, &quot;Looting&quot;, &quot;Emote&quot;, &quot;StillPose&quot;, &quot;DeathPose&quot;, &quot;Burrowed&quot;, &quot;State3&quot;, &quot;Chair&quot;, &quot;Mannequin&quot;">
            <ReturnValue Type="String" Desc="The unit&apos;s stand state." Id="9316"/>
        </Method>
        <Method Name="GetNameplateColor" Desc="Returns an ApolloColor for the unit&apos;s nameplate" Incomplete="true" Id="1188">
            <ReturnValue Type="ApolloColor" Desc="The current color of the unit&apos;s nameplate" Id="9215"/>
        </Method>
        <Method Name="ShouldShowCastBar" Desc="Determines whether or not the unit&apos;s cast bar should be shown." Incomplete="true" Id="1189">
            <ReturnValue Type="Boolean" Desc="Whether or not the unit&apos;s cast bar should be shown." Id="9437"/>
        </Method>
        <Method Name="ShouldShowBreathBar" Desc="Determines whether the player&apos;s breath bar should be shown.  This function will return false if it is called for any unit other than the current player." Incomplete="true" Id="1191">
            <ReturnValue Type="Boolean" Desc="Whether or not the player&apos;s breath bar should be shown." Id="9436"/>
        </Method>
        <Method Name="ShouldShowCraftingBar" Desc="Determines whether or not the unit&apos;s crafting progress bar should be shown.  This function returns false if called for any unit other than the current player." Incomplete="true" Id="1192">
            <ReturnValue Type="Boolean" Desc="Whether or not the unit&apos;s crafting progress bar should be shown" Id="9438"/>
        </Method>
        <Method Name="Resurrect" Desc="Resurrect&apos;s the player based on the parameters passed " Incomplete="true" Id="1194" InternalNotes="Need enum for RezType.  Currently hardcoded in Death.lua.
Need explanation for RezData.">
            <Param Name="nRezTypeChoice" Type="Integer" Id="1195" Desc="Where the player should be resurrected"/>
        </Method>
        <Method Name="FloatLootText" Desc="Spawns a floating display for the items the character loots" Incomplete="true" Id="1197">
            <Param Name="itemLooted" Type="Item" Id="1198" Desc="The item that was looted"/>
            <Param Name="nCount" Type="Integer" Id="1199" Desc="The number of items in the stack that was looted"/>
        </Method>
        <Method Name="GetOverheadAnchor" Desc="Returns a table with the x, y, and z positions for the unit&apos;s nameplate (in relation to the model)" Incomplete="true" Id="1200">
            <ReturnValue Type="Table" Desc="A table containing the x, y, and z positions for the unit&apos;s nameplate" Id="9216">
                <Item Name="x" Type="Integer" Id="9217"/>
                <Item Name="y" Type="Integer" Id="9218"/>
                <Item Name="z" Type="Integer" Id="9219"/>
            </ReturnValue>
        </Method>
        <Method Name="GetVendorItems" Desc="Returns an array containing information on each item the vendor sells" Incomplete="true" Id="1201">
            <ReturnValue Type="Table" Array="true" Id="9368">
                <Item Name="idUnique" Desc="The unique ID for the item" Type="Integer" Id="9369"/>
                <Item Name="idItem" Desc="The static ID number for the item" Type="Integer" Id="9370"/>
                <Item Name="eType" Desc="The type of thing being purchased.  This value corresponds with the 
CodeEnumLootItemType enum." Type="Integer" Id="9371"/>
                <Item Name="nStackSize" Desc="The number of items that are purchased at once" Type="Integer" Id="9372"/>
                <Item Name="nStockCount" Desc="The number of the item that the vendor has in stock.  " Type="Integer" Id="9373"/>
                <Item Name="bMeetsPrereq" Desc="Whether or not the player meets the prerequisites to use the item" Type="Boolean" Id="9374"/>
                <Item Name="idPrereq" Desc="An id representing the set of prerequisites needed to use the item" Type="Integer" Id="9375"/>
                <Item Name="idGroup" Desc="The ID number of the group that the item belongs to.  This value lines
up with one of the groups from the GetVendorGroups function" Type="Integer" Id="9376"/>
                <Item Name="bIsSpecial" Desc="Whether or not there is a special price for the item at the moment" Type="Boolean" Id="9377"/>
                <Item Name="bFutureStock" Desc="Whether or not the unit will have more of the item in stock in the future." Type="Boolean" Id="9378"/>
                <Item Type="Table" Name="tPriceInfo" Id="9379">
                    <Item Name="nAmount1" Desc="The amount that the item costs" Type="Integer" Id="9380"/>
                    <Item Name="eCurrencyType1" Desc="The primary currency type used to purchase the item" Type="Integer" Id="9381"/>
                    <Item Name="eAltType1" Desc="The alternate type of currency used to purchase the item" Type="Integer" Id="9382"/>
                    <Item Name="nAmount2" Desc="The amount the item costs of the secondary currency" Type="Integer" Id="9383"/>
                    <Item Name="eCurrencyType2" Desc="The secondary currency used to purchase the item" Type="Integer" Id="9384"/>
                    <Item Name="eAltType2" Desc="The secondary alternate type of currency used to purchase the item" Type="Integer" Id="9385"/>
                </Item>
                <Item Name="itemData" Desc="The item being purchased" Type="Item" Id="9386"/>
                <Item Name="splData" Desc="A spell effect being purchased." Type="Spell" Id="9387"/>
                <Item Name="strName" Desc="The name of the item" Type="String" Id="9388"/>
            </ReturnValue>
        </Method>
        <Method Name="GetBuybackItems" Desc="Returns a list with info on the items that the players can buy back from a vendor" Incomplete="true" Id="1202">
            <ReturnValue Type="Table" Array="true" Id="8976">
                <Item Name="idUnique" Desc="The unique ID of the item.  This ID belongs to this one instance of the item." Type="Integer" Id="8977"/>
                <Item Name="idItem" Desc="The ID number of the item.  Every copy of this item has the same ID for this value." Type="Integer" Id="8978"/>
                <Item Name="nStackSize" Desc="The number of instances of the item that can be bought back" Type="Integer" Id="8979"/>
                <Item Name="nStockCount" Desc="The number of an item that the vendor has on them" Type="Integer" Id="8980"/>
                <Item Name="bMeetsPrereq" Desc="Whether or not the character can use the item" Type="Boolean" Id="8981"/>
                <Item Type="Table" Name="tPriceInfo" Id="8982">
                    <Item Name="nAmount1" Desc="The amount of the primary currency used to buy back the item" Type="Integer" Id="8983"/>
                    <Item Name="eCurrencyType1" Desc="The type of the primary currency used to purchase an item" Type="Integer" Id="8984"/>
                    <Item Name="eAltType1" Desc="The secondary type of currency that can be used to purchase the item" Type="Integer" Id="8985"/>
                    <Item Name="nAmount2" Desc="The amount of the second type of currency used to purchase an item" Type="Integer" Id="8986"/>
                    <Item Name="eCurrencyType2" Desc="The second type of currency used to purchase the item" Type="Integer" Id="8987"/>
                    <Item Name="eAltType2" Desc="The alternat form of currency that can be used for the secondary cost of the item" Type="Integer" Id="8988"/>
                </Item>
                <Item Name="itemData" Desc="The item that the player can buy back" Type="Item" Id="8989"/>
                <Item Name="arGlyphIds" Desc="An array of ID numbers for the glyphs on the item (if there are any)" Type="Integer" Array="true" Id="8990"/>
                <Item Name="itemGlyphData" Desc="The glyph slots on the item, if any" Type="item" Id="8991"/>
                <Item Name="itemModData" Desc="Modifications to the item (if any)" Type="Item" Id="8992"/>
                <Item Name="strIcon" Desc="The string containing the icon name" Type="String" Id="8993"/>
                <Item Name="strMaker" Desc="The name of the player that made the item" Type="String" Id="8994"/>
            </ReturnValue>
        </Method>
        <Method Name="GetRepairableItems" Desc="Returns a list with information on the items that the unit owns that can be repaired" Incomplete="true" Id="1203">
            <ReturnValue Type="Table" Array="true" Id="9237">
                <Item Name="idLocation" Desc="The item&apos;s location in the character&apos;s inventory or equipment" Type="Integer" Id="9238"/>
                <Item Name="idItem" Desc="The item&apos;s id number" Type="Integer" Id="9239"/>
                <Item Name="nStackSize" Desc="The number of items in the stack" Type="Integer" Id="9240"/>
                <Item Name="nStockCount" Desc="The number of the item the vendor has in stock" Type="Integer" Id="9241"/>
                <Item Name="bMeetsPrereq" Desc="Whether or not the unit meets the prerequisites to equip the item.  For
the sake of this function, this value will always be true." Type="Boolean" Id="9242"/>
                <Item Type="Table" Name="tPriceInfo" Desc="The cost of repairing the item" Id="9243">
                    <Item Name="nAmount1" Desc="The primary cost of repairing the item" Type="Integer" Id="9244"/>
                    <Item Name="eCurrencyType1" Desc="The primary type of currency used to repair the item.  This value
corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9245"/>
                    <Item Name="eAltType1" Desc="The primary alternate form of currency used for repairing the item.  This
value corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9246"/>
                    <Item Name="nAmount2" Desc="The secondary cost of repairing the item" Type="Integer" Id="9247"/>
                    <Item Name="eCurrencyType2" Desc="The secondary type of currency used to repair the item" Type="Integer" Id="9248"/>
                    <Item Name="eAltType2" Desc="The secondary alternate form of currency used to repair the item.  This
value corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9249"/>
                </Item>
                <Item Name="itemData" Desc="The item needing repairs" Type="Item" Id="9250"/>
                <Item Name="strIcon" Desc="The name of the item&apos;s icon" Type="String" Id="9251"/>
                <Item Name="strName" Desc="The item&apos;s name" Type="String" Id="9252"/>
            </ReturnValue>
        </Method>
        <Method Name="GetConColor" Desc="Returns a color that corresponds with the unit&apos;s difficulty in relation to the player&apos;s." Incomplete="true" Id="1205" InternalNotes="This needs to be changed to ApolloColor">
            <ReturnValue Type="CColor" Desc="The color value representing the level difference between the player and the unit." Id="9012"/>
        </Method>
        <Method Name="GetDifficulty" Desc="Returns the difficulty of the cluster" Incomplete="true" Id="1206" InternalNotes="This should be depricated.  We get the same info (and more) in 
GetClusterInformation">
            <ReturnValue Type="Integer" Desc="The cluster&apos;s difficulty." Id="9116"/>
        </Method>
        <Method Name="GetRewardInfo" Desc="Returns a table containing information on all of the active quests, missions, challenges, and public events that this unit is the target of" Incomplete="true" Id="1208">
            <ReturnValue Type="Table" Desc="An array containing information on each thing that the unit is the objective of.  Each type has its own variables." Array="true" Id="9276">
                <Item Type="Table" Desc="If the unit is part of a mission objective, this table will be one of the ones returned" Id="9277">
                    <Item Name="strType" Desc="The type of objective contained in this table" Type="String" Id="9278"/>
                    <Item Name="idQuest" Desc="The ID number of the quest that the unit is a target of" Type="Integer" Id="9279"/>
                    <Item Name="strTitle" Desc="The name of the quest that the unit is a target of" Type="String" Id="9280"/>
                    <Item Name="nCompleted" Desc="The number of the unit that has been killed for the quest or the percentage of completion that the player has reached" Type="Integer" Id="9281"/>
                    <Item Name="nNeeded" Desc="The number of the unit that the player needs to interact with for the quest.  If nCompleted is a percent, then this value is 100." Type="Integer" Id="9282"/>
                    <Item Name="splAbility" Desc="A spell granted for use in the quest" Type="Spell" Id="9283"/>
                    <Item Name="splObjective" Desc="A spell that needs to be used as one of the objectives of the quest" Type="Spell" Id="9284"/>
                    <Item Name="bShowCount" Desc="Whether or not the number interacted with and required should be shown" Type="Boolean" Id="9285"/>
                </Item>
                <Item Type="Table" Desc="If the unit is part of a challenge, then the table will use these values" Id="9286">
                    <Item Name="strType" Desc="The type of objective.  In this case, the value is &quot;Challenge&quot;" Type="String" Id="9287"/>
                    <Item Name="idChallenge" Desc="The ID number of the challenge that the unit is the target of" Type="Integer" Id="9288"/>
                    <Item Name="strTitle" Desc="The name of the challenge targeting the unit" Type="String" Id="9289"/>
                    <Item Name="nCompleted" Desc="The number of the unit that has been interacted with for the challenge" Type="Integer" Id="9290"/>
                    <Item Name="nNeeded" Desc="The number of the unit that the player must interact with for the challenge" Type="Integer" Id="9291"/>
                </Item>
                <Item Type="Table" Desc="If the unit is the target of a public event, the table will look like this" Id="9292">
                    <Item Name="strType" Desc="The type of objective that the unit is a part of.  In this case, the value is &quot;PublicEvent&quot;" Type="String" Id="9293"/>
                    <Item Name="peoObjective" Desc="The specific Public Event Objective that the unit is the target of" Type="Public Event Objective" Id="9294"/>
                </Item>
                <Item Desc="If the unit is the target of a path mission, the table will look like this" Type="Table" Id="9295">
                    <Item Name="strType" Desc="The type of mission that the unit is the target of.  This may be either &quot;Scientist&quot;, &quot;Soldier&quot;, or &quot;Explorer&quot; in this case" Type="String" Id="9296"/>
                    <Item Name="pmMission" Desc="The PathMission that the unit is the target of" Type="PathMission" Id="9297"/>
                    <Item Name="splReward" Desc="Any spell tied to interacting with the unit, such as drops from scanning the unit with a Scientist or items tied to the mission that the player needs to use on the unit" Type="Spell" Id="9298"/>
                    <Item Name="bIsActivated" Desc="Whether or not the player has interacted with the object that starts the mission.  This value only exists for Soldier missions" Type="Boolean" Id="9299"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="GetDispositionTo" Desc="Returns a unit&apos;s disposition to another unit" Incomplete="true" Id="1209">
            <Param Desc="The unit that the calling unit is being compared to" Type="Unit" Id="9117"/>
            <ReturnValue Type="Integer" Desc="A number representing the calling unit&apos;s disposition to another unit.  This number correlates to
CodeEnumDisposition." Id="9118"/>
            <Param Name="pUnit2" Type="CUnit" Id="1210" Deleted="true"/>
        </Method>
        <Method Name="InviteToGroup" Desc="Sends a group invitation request to the target player" Incomplete="true" Id="1211">
            <Param Name="strMessage" Type="String" Id="1212" Deleted="true"/>
        </Method>
        <EnumSet Name="CodeEnumCCState" Incomplete="true" Id="2348" Desc="An enum representing the various crowd control effects, including Taunt">
            <Enum Name="DisableCinematic" Id="9923"/>
            <Enum Name="AbilityRestriction" Id="9924"/>
        </EnumSet>
        <EnumSet Name="CodeEnumEliteness" Incomplete="true" Id="2359" Desc="An enum representing the estimated group size needed to kill the NPC." InternalNotes="What&apos;s the difference between this and the Rank enum?">
            <Enum Name="Standard" Id="2360" Deleted="true"/>
            <Enum Name="Elite" Id="2361" Deleted="true"/>
            <Enum Name="Boss" Id="2362" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRank" Incomplete="true" Id="2363" Desc="An enum representing the difficulty of an NPC in relation to other NPCs of the same level" InternalNotes="What&apos;s the difference between this and the &quot;Eliteness&quot; enum?"/>
        <EnumSet Name="CodeEnumProperties" Incomplete="true" Id="2390" Desc="An enum representing various unit properties.  These properties are generally seen on the Character and Inspect screens in the default UI" InternalNotes="Are we even using all of these anymore? We should look into
removing depricated values." NeedProofread="true">
            <Enum Name="ManaBase" Id="9925"/>
            <Enum Name="InterruptArmor_AfterCCRechargeTime" Id="9926"/>
            <Enum Name="InterruptArmor_AfterCCRechargeCount" Id="9927"/>
            <Enum Name="PvPOffensiveRating" Id="9928"/>
            <Enum Name="PvPDefensiveRating" Id="9929"/>
            <Enum Name="DamageMitigationPctOffset" Id="9930"/>
            <Enum Name="BaseAvoidReduceChance" Id="9931"/>
            <Enum Name="BaseAvoidCritChance" Id="9932"/>
            <Enum Name="StealthDetectionModifier" Id="9933"/>
            <Enum Name="ManaRegenInCombat" Id="9934"/>
            <Enum Name="ManaRegenOutOfCombat" Id="9935"/>
            <Enum Name="SeeThroughStealth" Id="9936"/>
            <Enum Name="FrictionMax" Id="9937"/>
            <Enum Name="Deprecated1" Id="9938"/>
            <Enum Name="Deprecated2" Id="9939"/>
            <Enum Name="RenownGainMultiplier" Id="9940"/>
            <Enum Name="MoneyDropMultiplier" Id="9941"/>
            <Enum Name="SpellMechanicEnergyRegenOrDecayMultiplier" Id="9942"/>
            <Enum Name="SpellMechanicEnergyDecayOverdriveMultiplier" Id="9943"/>
            <Enum Name="ItemArmor" Id="9944"/>
            <Enum Name="ItemAssaultPower" Id="9945"/>
            <Enum Name="ItemSupportPower" Id="9946"/>
            <Enum Name="IgnoreArmorBase" Id="9947"/>
            <Enum Name="IgnoreShieldBase" Id="9948"/>
            <Enum Name="MaxThreatVsCreature" Id="9949"/>
            <Enum Name="ManaCostModifier" Id="9950"/>
            <Enum Name="CooldownReductionModifier" Id="9951"/>
            <Enum Name="BaseLifesteal" Id="9952"/>
            <Enum Name="DamageMitigationPctOffsetPhysical" Id="9953"/>
            <Enum Name="DamageMitigationPctOffsetTech" Id="9954"/>
            <Enum Name="DamageMitigationPctOffsetMagic" Id="9955"/>
            <Enum Name="PvPOffensePctOffset" Id="9956"/>
            <Enum Name="PvPDefensePctOffset" Id="9957"/>
            <Enum Name="ShieldTickTime" Id="9958"/>
            <Enum Name="ShieldRebootTime" Id="9959"/>
            <Enum Name="ScientistScanBotHealthRegenMultiplier" Id="9960"/>
            <Enum Name="ScientistScanBotCooldownMultiplier" Id="9961"/>
            <Enum Name="MountSpeedMultiplier" Id="9962"/>
            <Enum Name="MoneyQuestMultiplier" Id="12462"/>
            <Enum Name="XpQuestMultiplier" Id="12463"/>
            <Enum Name="ReputationQuestMultiplier" Id="12464"/>
            <Enum Name="PrestigeQuestMultiplier" Id="12465"/>
            <Enum Name="NPCSpellExecutionFreqMultiplier" Id="16452"/>
            <Enum Name="ResourceMax_8" Id="17107"/>
            <Enum Name="ResourceRegenMultiplier_8" Id="17108"/>
            <Enum Name="ResourceMax_9" Id="17109"/>
            <Enum Name="ResourceRegenMultiplier_9" Id="17110"/>
            <Enum Name="ResourceMax_10" Id="17111"/>
            <Enum Name="ResourceRegenMultiplier_10" Id="17112"/>
            <Enum Name="AbilityPowerBase" Id="2413" Deleted="true"/>
            <Enum Name="AbilityPowerBaseRanged" Id="2414" Deleted="true"/>
            <Enum Name="AbilityPowerBaseSpell" Id="2415" Deleted="true"/>
            <Enum Name="Rating_Haste" Id="2418" Deleted="true"/>
            <Enum Name="Rating_GlancingBlowReduce" Id="2422" Deleted="true"/>
            <Enum Name="Rating_CritHitSeverity" Id="2423" Deleted="true"/>
            <Enum Name="Rating_CritSeverityReduce" Id="2424" Deleted="true"/>
            <Enum Name="MoveSpeedMultiplier" Id="2465" Deleted="true"/>
            <Enum Name="RegenManaInCombat" Id="2468" Deleted="true"/>
            <Enum Name="RegenManaNonCombat" Id="2469" Deleted="true"/>
            <Enum Name="PvPOffenseRating" Id="2470" Deleted="true"/>
            <Enum Name="PvPDefenseRating" Id="2471" Deleted="true"/>
            <Enum Name="AbilityMultiplierBase" Id="2484" Deleted="true"/>
            <Enum Name="AbilityPowerMultiplierWeapon" Id="2485" Deleted="true"/>
            <Enum Name="AbilityPowerMultiplierAttributes" Id="2486" Deleted="true"/>
            <Enum Name="FinalAbilityPowerOffset" Id="2503" Deleted="true"/>
            <Enum Name="FinalAbilityPowerMultiplier" Id="2504" Deleted="true"/>
            <Enum Name="ScientistScanBotHealtRegenhMultiplier" Id="3630" Deleted="true"/>
        </EnumSet>
        <EnumSet Name="CodeEnumResourceConversionType" Incomplete="true" Id="2513" Desc="An enum representing the various types of resource conversion.  Item2Item: One type of item for another type
Item2Rep: One type of item for reputation with a faction
Prereq2Rep: ???" NeedProofread="true"/>
        <Method Name="GetTitleOrName" Incomplete="true" Id="2589" Desc="If the unit has a title set, this returns it.  If it doesn&apos;t, this returns the name of the unit">
            <ReturnValue Type="String" Desc="The title of the unit if it has one set.  The name of the unit if it doesn&apos;t." Id="9331"/>
        </Method>
        <Method Name="GetPlayerPathType" Incomplete="true" Id="2590" Desc="Returns the unit&apos;s path.  If the unit is not a player, returns nil.">
            <ReturnValue Type="Integer" Desc="A number representing the unit&apos;s path.  This value corresponds with the 
PlayerPathLib.PlayerPathType int constants." Id="9221"/>
        </Method>
        <Method Name="IsCurrentBindPoint" Incomplete="true" Id="2591" Desc="Determines whether or not the specified bind point is the user&apos;s current bind point.">
            <ReturnValue Type="Boolean" Id="9397"/>
        </Method>
        <Method Name="GetBindPointString" Incomplete="true" Id="2592" Desc="Returns the name of the last place the character set their bind point.">
            <ReturnValue Type="String" Desc="The name of the character&apos;s current bind point" Id="8975"/>
        </Method>
        <Method Name="GetEquippedItems" Incomplete="true" Id="2593" Desc="Returns an array containing all of the unit&apos;s equipped items.">
            <ReturnValue Type="Item" Desc="An array of all of the items the unit has equipped" Array="true" Id="9120"/>
        </Method>
        <Method Name="GetResourceConversions" Incomplete="true" Id="2594" Desc="Returns a list of resource conversions that the unit is able to perform.  If the unit is not able to perform resource conversions, this returns nil.">
            <ReturnValue Type="Table" Desc="An array containing each of the conversions available through the NPC" Array="true" Id="9262">
                <Item Name="idConversion" Desc="The ID number for this conversion type" Type="Integer" Id="9263"/>
                <Item Name="itemSource" Desc="The item the player needs to trade in this conversion.  This value does
not exist for conversions that do not require items" Type="Item" Id="9264"/>
                <Item Name="idSource" Desc="The ID number for the object that can be converted into reputation.  This
value does not exist if the conversion requires items" Type="Integer" Id="9265"/>
                <Item Name="nSourceCount" Desc="The number of the object required for the conversion" Type="Integer" Id="9266"/>
                <Item Name="nAvailableCount" Desc="The number of the object required for the conversion that are in the player&apos;s inventory" Type="Integer" Id="9267"/>
                <Item Name="eType" Desc="The type of conversion.  This value corresponds with the 
Unit.CodeEnumResourceConversionType enum" Type="Integer" Id="9268"/>
                <Item Name="itemTarget" Desc="The item that is given to the player by the conversion.  This variable only exists if the conversion gives items" Type="Item" Id="9269"/>
                <Item Name="idTarget" Desc="The ID number of the faction who the player gains reputation with through this conversion.  This value does not exist if the conversion does not grant reputation" Type="Integer" Id="9270"/>
                <Item Name="strName" Desc="The name of the faction that the player gains reputation with through the conversion.  This variable does not exist if the conversion does not grant reputation" Type="String" Id="9271"/>
                <Item Name="nTargetCount" Desc="The amount of the reward that is granted to the player through this conversion" Type="Integer" Id="9272"/>
            </ReturnValue>
        </Method>
        <Method Name="ConvertResource" Incomplete="true" Id="2595" Desc="Perform this unit&apos;s resource conversion operation if it has one">
            <Param Name="idConversion" Desc="The id number for the resource conversion.  This value will generally come 
from unit:GetResourceConversions()" Type="Integer" Id="8883"/>
        </Method>
        <Function Name="GetVitalTable" Incomplete="true" Id="2597" Desc="A function that returns a list of several of the character&apos;s vital statistics.  This table is indexed by the CodeEnumVital enum.">
            <Param Type="Table" Desc="A table containing a list of the character&apos;s vitals, sorted by index, using the values from CodeEnumVitals as indexes" Id="8873">
                <Item Desc="Some of the values are integers" Type="Integer" Id="8874"/>
                <Item Desc="Others are strings" Type="String" Id="8875"/>
                <Item Desc="And others are floats" Type="Float" Id="8876"/>
            </Param>
        </Function>
        <EnumSet Name="CodeEnumFlightPathType" Incomplete="true" Id="3112" Desc="An enum representing different types of flight paths
Local: Traveling from one place to another within the same worldId
Transfer: Traveling from one worldId to another"/>
        <Method Name="GetAttachmentPosition" Incomplete="true" Id="3115" Desc="Gets the position of the selected attachment">
            <ReturnValue Type="Table" Id="8898">
                <Item Name="bFound" Desc="Whether any attachment was found on the unit" Type="Boolean" Id="8899"/>
                <Item Name="tLocation" Desc="The location of the attachment in x, y, z coordinates" Type="Table" Id="8900">
                    <Item Name="x" Type="Float" Id="8901"/>
                    <Item Name="y" Type="Float" Id="8902"/>
                    <Item Name="z" Type="Float" Id="8903"/>
                </Item>
            </ReturnValue>
            <Param Name="nAttachmentIdx" Desc="The attachment you want to find the position for" Type="Integer" Id="8904"/>
        </Method>
        <Method Name="GetFlightPaths" Incomplete="true" Id="3116" Desc="Returns a list of flight paths that are available from a Taxi NPC. Returns nil if the unit isn&apos;t a Taxi NPC">
            <ReturnValue Type="Table" Desc="An array containing information for each of the Taxi&apos;s connections." Array="true" Id="9127">
                <Item Name="idNode" Desc="The ID number for this flight path" Type="Integer" Id="9128"/>
                <Item Name="eType" Desc="The flight path&apos;s type.  This corresponds with the CodeEnumFlightPathType enum" Type="Integer" Id="9129"/>
                <Item Name="strName" Desc="The name of the flight path" Type="String" Id="9130"/>
                <Item Type="Table" Name="tLocation" Desc="The destination&apos;s x, y, and z coordinates" Id="9131">
                    <Item Name="x" Type="Float" Id="9132"/>
                    <Item Name="y" Type="Float" Id="9133"/>
                    <Item Name="z" Type="Float" Id="9134"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="GetFlightPathToPoint" Incomplete="true" Id="3117" Desc="Returns a table containing the price of the flight and each node that the path passes through">
            <ReturnValue Type="Table" Id="9135">
                <Item Type="Table" Name="tPriceInfo" Desc="A table containing price information for the flight path" Id="9136">
                    <Item Name="nAmount1" Desc="The cost of the flight path" Type="Integer" Id="9137"/>
                    <Item Name="eCurrencyType1" Desc="The primary currency type used to purchase the flight path.  This value corresponds with 
Money.CodeEnumCurrencyType enum" Type="Integer" Id="9138"/>
                    <Item Name="eAltType1" Desc="The alternate type of currency used to purchase the flight path.  This value 
corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9139"/>
                    <Item Name="nAmount2" Desc="The amount of alternate currency used to activate the flight path" Type="Integer" Id="9140"/>
                    <Item Name="eCurrencyType2" Desc="The type of currency used as an alternate way to activate the flight path.
This value corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9141"/>
                    <Item Name="eAltType2" Desc="The alternate type of currency used for the alternate purchase cost 
for the flight path.  This corresponds with the Money.CodeEnumCurrencyType enum" Type="Integer" Id="9142"/>
                </Item>
                <Item Name="tRoute" Desc="An array of node IDs that are accessible from the taxi" Type="Table" Id="9143">
                    <Item Name="idNode" Desc="The ID number of the flight path" Type="Integer" Id="9144"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="PurchaseFlightPath" Incomplete="true" Id="3118" Desc="Purchases the flight path to the specified destination">
            <Param Name="idDestination" Desc="The ID number of the flight path&apos;s destination." Type="Integer" Id="9433"/>
        </Method>
        <Method Name="TakeShuttle" Incomplete="true" Id="3119" Desc="When called from a taxi NPC, this will summon the taxi for the player."/>
        <Method Name="GetTransferDestination" Incomplete="true" Id="3120" Desc="Returns the destination of a taxi route that transfers the player to another zone">
            <ReturnValue Type="String" Desc="The name of the destination" Id="9341"/>
        </Method>
        <Method Name="GetPrereqInfo" Incomplete="true" Id="3121" Desc="Validates that the player meets the prerequisites for an item and returns a table with the results">
            <Param Name="idPrereq" Desc="The ID number for the item whose prerequisites are being checked" Type="Integer" Id="9226"/>
            <ReturnValue Type="Table" Id="9227">
                <Item Name="bIsMet" Desc="Whether or not the unit meets the prerequisites" Type="Boolean" Id="9228"/>
                <Item Name="strText" Desc="A string containing the prerequisite for the item" Type="String" Id="9229"/>
            </ReturnValue>
        </Method>
        <EnumSet Name="CodeEnumGender" Incomplete="true" Id="3667" Desc="An enum representing a unit&apos;s gender.  For the sake of this enum, Chua are male."/>
        <EnumSet Name="CodeEnumSpellMechanic" Incomplete="true" Id="3671" Desc="An enum representing the spell mechanics of each class" InternalNotes="Do we still care about Empathy? (pun very much intended)">
            <Enum Name="Unused03" Id="17201"/>
        </EnumSet>
        <Method Name="GetGender" Incomplete="true" Id="3677" Desc="Returns an integer representing the unit&apos;s gender.">
            <ReturnValue Type="Integer" Desc="Returns an integer representing the unit&apos;s gender.  This corresponds with the CodeEnumGender enum" Id="9145"/>
        </Method>
        <Method Name="GetManaRegenInCombat" Incomplete="true" Id="3678" Desc="Returns the amount of Focus the unit regens during combat">
            <ReturnValue Type="Float" Desc="The amount of Focus the unit regens in combat" Id="9201"/>
        </Method>
        <Method Name="GetManaRegenNonCombat" Incomplete="true" Id="3679" Desc="The amount of Focus the unit regens outside of combat">
            <ReturnValue Type="Float" Desc="The amount of Focus the unit regens outside of combat" Id="9203"/>
        </Method>
        <Method Name="GetAbsorptionValue" Incomplete="true" Id="3680" Desc="Returns the character&apos;s current absorption value.  If the unit loses whatever effect gave them absorption, this will return any unused absorption even
though the max absorption value is 0.">
            <ReturnValue Type="Integer" Desc="The character&apos;s current absorption value." Id="8887"/>
        </Method>
        <Method Name="GetAbsorptionMax" Incomplete="true" Id="3681" Desc="Returns the current maximum absorption amount for the character.  
If the character has nothing giving them absorption, this returns 0.  
If the unit has no health bar, this returns nil.">
            <ReturnValue Type="Integer" Desc="The character&apos;s maximum absorption amount" Id="8884"/>
        </Method>
        <Method Name="GetGroupValue" Incomplete="true" Id="3683" InternalNotes="How is this different from the cluster&apos;s difficulty? 
What does the return value correspond with?" Desc="Returns the cluster&apos;s difficulty value">
            <ReturnValue Type="Integer" Id="9146"/>
        </Method>
        <Method Name="GetClusterContributionValue" Incomplete="true" Id="3684" InternalNotes="Unknown.  Will have to speak with designers on this one"/>
        <Method Name="GetAchievementPoints" Incomplete="true" Id="3685" Desc="Returns the character&apos;s achievement points.">
            <ReturnValue Type="Integer" Desc="The number of achievement points the character has earned." Id="8888"/>
        </Method>
        <Method Name="HasTextBubble" Incomplete="true" Id="3686" Desc="A function that determines whether or not the unit has a text bubble over their head">
            <ReturnValue Type="Boolean" Desc="Whether or not the unit has a text bubble over their head" Id="9389"/>
        </Method>
        <Method Name="AddTextBubble" Incomplete="true" Id="3687" Desc="Adds a text bubble above the unit with the specified text">
            <Param Desc="The text to put in the text bubble" Type="String" Id="8877"/>
        </Method>
        <Method Name="IsOccluded" Incomplete="true" Id="3688" Desc="Determines whether or not the unit is currently hidden behind an object or terrain">
            <ReturnValue Type="Boolean" Id="9418"/>
        </Method>
        <Method Name="GetCCStateTimeRemaining" Incomplete="true" Id="3689" Desc="Returns the remaining time that the unit is under crowd control effects">
            <ReturnValue Type="Integer" Desc="The remaining time the unit has to spend in a crowd control state (in milliseconds)" Id="9002"/>
        </Method>
        <Method Name="GetBuffs" Incomplete="true" Id="3690" Desc="Returns a table containing all of the positive and negative buffs on the unit">
            <ReturnValue Type="Table" Desc="A table containing information on all of the positive and negative buffs on the unit" Id="8855">
                <Item Name="arHarmful" Desc="An array containing info on all of the debuffs on the unit" Type="Table" Id="8856" Array="true">
                    <Item Type="Table" Id="8857">
                        <Item Name="idBuff" Desc="The id number for the buff itself.  This is not to be confused with the id number of the spell containing the buff&apos;s effect" Type="Integer" Id="8858"/>
                        <Item Name="splEffect" Desc="The spell containing the buff&apos;s effect.  " Type="Spell" Id="8859"/>
                        <Item Name="fTimeRemaining" Desc="The amount of time (in milliseconds) left before the buff ends" Type="Float" Id="8860"/>
                        <Item Name="nCount" Desc="The number of stacks of the buff on the player" Type="Integer" Id="8861"/>
                    </Item>
                </Item>
                <Item Name="arBeneficial" Desc="An array containing info on all of the beneficial buffs on the unit" Type="Table" Id="8862" Array="true">
                    <Item Type="Table" Id="8863">
                        <Item Name="idBuff" Desc="The id number for the buff.  This is not to be confused with the id number for the spell containing the buff&apos;s effect" Type="Integer" Id="8864"/>
                        <Item Name="splEffect" Desc="The spell containing the buff&apos;s effect" Type="Spell" Id="8865"/>
                        <Item Name="fTimeRemaining" Desc="The time remaining before the buff ends in milliseconds" Type="Float" Id="8866"/>
                        <Item Name="nCount" Desc="The number of stacks of a buff that are on the unit" Type="Integer" Id="8867"/>
                    </Item>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="GetInterruptArmorValue" Incomplete="true" Id="3691" Desc="The amount of interrupt armor currently on the unit">
            <ReturnValue Type="Integer" Desc="The amount of interrupt armor currently on the unit" Id="9169"/>
        </Method>
        <Method Name="GetInterruptArmorMax" Incomplete="true" Id="3692" Desc="Returns the maximum amount of interrupt armor the unit can have">
            <ReturnValue Type="Integer" Desc="The maximum amount of interrupt armor for the unit" Id="9168"/>
        </Method>
        <Method Name="ShouldShowNamePlate" Incomplete="true" Id="3694" Desc="Determines whether or not the unit&apos;s nameplate should be shown.">
            <ReturnValue Type="Boolean" Desc="Determines whether or not the unit&apos;s nameplate should be shown" Id="9439"/>
        </Method>
        <Method Name="GetVendorGroups" Incomplete="true" Id="3695" Desc="Returns a table with item categories for a vendor.  If this unit is not a vendor, this table is empty">
            <ReturnValue Type="Table" Array="true" Id="9365">
                <Item Name="idGroup" Desc="The group&apos;s ID number" Type="Integer" Id="9366"/>
                <Item Name="strName" Desc="The group&apos;s name" Type="String" Id="9367"/>
            </ReturnValue>
        </Method>
        <Method Name="GetRepTurninItems" Incomplete="true" Id="3696" Desc="Returns information on what items the player is carrying that can count as reputation for the given unit&apos;s faction" InternalNotes="Not currently used in UI">
            <ReturnValue Type="Table" Desc="An array containing information on each of the items that the player is holding that can be turned in for reputation" Array="true" Id="9257">
                <Item Name="idRep" Desc="The faction the player would gain reputation with" Type="Integer" Id="9258"/>
                <Item Name="nRepAmount" Desc="The amount of reputation the item is worth" Type="Integer" Id="9259"/>
                <Item Name="itemRequired" Desc="The item that can be turned in for reputation" Type="Item" Id="9260"/>
            </ReturnValue>
        </Method>
        <Method Name="GetTrainerTradeskills" Incomplete="true" Id="3697" Desc="Returns a list of tradeskills available at the trainer.  If the unit is not a tradeskill trainer, this returns nil.">
            <ReturnValue Type="Table" Desc="The name and ID of each tradeskill available" Array="true" Id="9338">
                <Item Name="eTradeskillId" Desc="The ID number of the tradeskill.  This number corresponds with the CraftingLib.CodeEnumTradeskill" Type="Integer" Id="9339"/>
                <Item Name="strName" Desc="The name of the tradeskill" Type="String" Id="9340"/>
            </ReturnValue>
        </Method>
        <Method Name="GetCraftingStationTradeskills" Incomplete="true" Id="3698" Desc="Returns a list of tradeskills that can be used at this crafting station.  Returns nil if the unit is not a crafting station">
            <ReturnValue Type="Table" Desc="This array will contain info on every tradeskill that can be used at this station" Array="true" Id="9015">
                <Item Name="eTradeskillId" Desc="The ID number of the tradeskill. This value corresponds with the 
CraftingLib.CodeEnumTradeskill enum" Type="Integer" Id="9016"/>
                <Item Name="strName" Desc="The name of the tradeskill" Type="String" Id="9017"/>
            </ReturnValue>
        </Method>
        <Method Name="GetLevelDifferential" Incomplete="true" Id="3699" Desc="Returns an integer representing the unit&apos;s level differential with the specified unit">
            <Param Name="unitTarget" Desc="The unit that the source unit is being compared to" Type="unit" Id="9176"/>
            <ReturnValue Type="Integer" Desc="An integer representing the level differential between the source unit and the target.  This value
corresponds with the CodeEnumLevelDifferential enum" Id="9177"/>
        </Method>
        <Method Name="GetConValue" Incomplete="true" Id="3700" Desc="Returns the integer representing the level difference between the player and the unit">
            <ReturnValue Type="Integer" Desc="The integer representing the level difference between the player and the unit. 
This value corresponds with the CodeEnumLevelDifferentialAttribute enum" Id="9013"/>
        </Method>
        <Method Name="GetInventoryItems" Incomplete="true" Id="3701" Desc="Returns a list of the player&apos;s inventory items.  Calling this on anyone but the current player returns an empty table.">
            <ReturnValue Type="Table" Desc="An array containing player&apos;s items and the corresponding bag slot that they are found in" Array="true" Id="9170">
                <Item Name="nBagSlot" Desc="The bag slot where the item is found" Type="Integer" Id="9171"/>
                <Item Name="itemInBag" Desc="The item in the player&apos;s inventory" Type="Item" Id="9172"/>
            </ReturnValue>
        </Method>
        <Method Name="LockInventorySlot" Incomplete="true" Id="3702" Desc="Locks the specified inventory slot for the current player">
            <Param Name="nLocation" Desc="The inventory slot that should be locked" Type="Integer" Id="9432"/>
        </Method>
        <Method Name="UnlockInventorySlot" Incomplete="true" Id="3703" Desc="Unlocks the specified inventory slot for the player.  ">
            <Param Name="nInventoryLocation" Desc="The inventory slot number that should be unlocked" Type="Integer" Id="9440"/>
        </Method>
        <Method Name="IsInventorySlotLocked" Incomplete="true" Id="3704" Desc="Determines whether or not the specified inventory slot is locked">
            <Param Name="nLocation" Desc="The inventory location of the item" Type="Integer" Id="9408"/>
            <ReturnValue Type="Boolean" Id="9409"/>
        </Method>
        <Method Name="UnlockAllInventorySlots" Incomplete="true" Id="3705" Desc="Removes the locked state from all of the player&apos;s inventory slots."/>
        <Method Name="GetSupplySatchelItems" Incomplete="true" Id="3706" Desc="Returns a list of items and information on the contents of the player&apos;s Supply Satchel.  Note, this returns an empty table if this is called on someone other than the player">
            <ReturnValue Type="Table" Array="true" Id="9318">
                <Item Name="idLocation" Desc="The item&apos;s location in the Supply Satchel" Type="Integer" Id="9319"/>
                <Item Name="itemMaterial" Desc="The item itself" Type="Item" Id="9320"/>
                <Item Name="nCount" Desc="The amount of the item that the player owns" Type="Integer" Id="9321"/>
            </ReturnValue>
        </Method>
        <Method Name="ShowHintArrow" Incomplete="true" Id="3707" Desc="Places a guide arrow above the player&apos;s head that points them in the direction of the unit that called the function."/>
        <Method Name="IsPublicEventHub" Incomplete="true" Id="3708" Desc="Determines whether or not the unit is a Settler Infrastructure">
            <ReturnValue Type="Boolean" Id="9419"/>
        </Method>
        <Method Name="GetGuildName" Incomplete="true" Id="3709" Desc="Returns the unit&apos;s guild&apos;s name.  Note that this will specifically get the guild and not other guild types such as warparties, circles, or arena teams.">
            <ReturnValue Type="String" Desc="The name of the player&apos;s guild" Id="9148"/>
        </Method>
        <Method Name="GetGuildType" Incomplete="true" Id="3710" InternalNotes="What should this return?  The type of the guild that&apos;s on their 
nameplate?" Desc="Returns the unit&apos;s guild type">
            <ReturnValue Type="Integer" Id="9149"/>
        </Method>
        <Method Name="IsInYourGroup" Incomplete="true" Id="3713" Desc="Determines whether or not the given unit is in the player&apos;s group">
            <ReturnValue Type="Boolean" Id="9411"/>
        </Method>
        <Method Name="IsPvpFlagged" Incomplete="true" Id="3714" Desc="Determines whether or not the unit is flagged for PvP">
            <ReturnValue Type="Boolean" Id="9421"/>
        </Method>
        <Method Name="IsTagged" Incomplete="true" Id="3715" Desc="Determines whether or not the unit has been tagged">
            <ReturnValue Type="Boolean" Id="9427"/>
        </Method>
        <Method Name="IsTaggedByMe" Incomplete="true" Id="3716" Desc="Determines whether or not the current unit was tagged by the player">
            <ReturnValue Type="Boolean" Id="9428"/>
        </Method>
        <Method Name="IsSoftKill" Incomplete="true" Id="3717" Desc="Determines whether or not the unit is eligible for open tagging.">
            <ReturnValue Type="Boolean" Id="9426"/>
        </Method>
        <Method Name="GetUnitRaceId" Incomplete="true" Id="6587" Desc="Returns the ID number for the unit&apos;s race" InternalNotes="Why do we have a GetRaceID and GetUnitRaceId?">
            <ReturnValue Type="Integer" Desc="The race&apos;s ID number.  This value corresponds with the GameLib.CodeEnumRace enum" Id="9359"/>
        </Method>
        <Method Name="GetAssaultPower" Incomplete="true" Id="6588" Desc="Returns the player&apos;s current Assault Power">
            <ReturnValue Type="Integer" Desc="The player&apos;s Assault Power" Id="8897"/>
        </Method>
        <Method Name="GetAssaultAndSupportPowerSoftcap" Incomplete="true" Id="3655" Desc="Returns the softcap for Assault and Support power">
            <ReturnValue Type="Integer" Desc="The current softcap for both Assault and Support power" Id="8895"/>
        </Method>
        <Method Name="GetStrikethroughChance" Incomplete="true" Id="3656" Desc="Returns the unit&apos;s strikethrough chance ">
            <ReturnValue Type="Float" Desc="The percent chance the unit has to not have the target deflect the attack" Id="9317"/>
        </Method>
        <Method Name="GetCritChance" Incomplete="true" Id="3657" Desc="Returns the chance that the unit&apos;s attacks will be a critical hit">
            <ReturnValue Type="Float" Desc="The chance that the unit&apos;s attacks will be a critical hit" Id="9078"/>
        </Method>
        <Method Name="GetCritSeverity" Incomplete="true" Id="3658" Desc="Returns how much extra damage is done when one of the unit&apos;s abilities lands a critical hit">
            <ReturnValue Type="Float" Desc="The amount of extra damage that is done when the unit lands a critical hit" Id="9079"/>
        </Method>
        <Method Name="GetDeflectChance" Incomplete="true" Id="3659" Desc="Returns the unit&apos;s chance to deflect attacks">
            <ReturnValue Type="Float" Desc="The unit&apos;s chance to deflect attacks" Id="9114"/>
        </Method>
        <Method Name="GetDeflectCritChance" Incomplete="true" Id="3660" Desc="The unit&apos;s chance to deflect critical hits">
            <ReturnValue Type="Float" Desc="The unit&apos;s chance to deflect critical hits" Id="9115"/>
        </Method>
        <Method Name="GetPhysicalMitigation" Incomplete="true" Id="3661" Desc="Returns the unit&apos;s physical mitigation percent">
            <ReturnValue Type="Float" Desc="The percent of physical damage that is mitigated by the unit" Id="9220"/>
        </Method>
        <Method Name="GetTechMitigation" Incomplete="true" Id="3662" Desc="Returns the percent of tech damage that is mitigated by the unit">
            <ReturnValue Type="Float" Desc="The percent of tech damage that is mitigated by the unit" Id="9329"/>
        </Method>
        <Method Name="GetMagicMitigation" Incomplete="true" Id="3663" Desc="Returns the unit&apos;s magic resistance">
            <ReturnValue Type="Float" Desc="The percentage of magic abilities that are mitigated by the unit" Id="9198"/>
        </Method>
        <Method Name="GetAlternateTarget" Incomplete="true" Id="3665" Desc="Gets the unit&apos;s current focus target">
            <ReturnValue Type="Unit" Desc="The unit currently set as the player&apos;s focus target" Id="8891"/>
        </Method>
        <Method Name="IsScaled" Incomplete="true" Id="3666" Desc="Determines whether or not the unit is scaled to the player&apos;s level">
            <ReturnValue Type="Boolean" Id="9424"/>
        </Method>
        <EnumSet Name="CodeEnumLevelDifferentialAttribute" Incomplete="true" Id="4640" Desc="An enum that contains the different colors used to show level difference between a unit and the player.  These are listed in ascending order." InternalNotes="This seems the same as the TargetDifficulty enum.
Do we really need both?"/>
        <EnumSet Name="CodeEnumFaction" Incomplete="true" Id="4650" Desc="An enum representing the different player factions"/>
        <Method Name="GetSupportPower" Incomplete="true" Id="4653" Desc="Returns the unit&apos;s support power">
            <ReturnValue Type="Float" Desc="The unit&apos;s support power" Id="9323"/>
        </Method>
        <Method Name="GetTargetOfTarget" Incomplete="true" Id="4654" Desc="Returns the target of the unit being targeted by the calling unit">
            <ReturnValue Type="Unit" Desc="The target of the unit being targeted by the calling unit" Id="9328"/>
        </Method>
        <Method Name="GetInfo" Incomplete="true" Id="5369" InternalNotes="This should be deleted in the code"/>
        <Method Name="GetPvPDefenseRating" Incomplete="true" Id="5370" Desc="Returns the unit&apos;s PvP Defense Rating">
            <ReturnValue Type="Float" Desc="The unit&apos;s PvP Defense Rating" Id="9231"/>
        </Method>
        <Method Name="GetPvPOffenseRating" Incomplete="true" Id="5371" Desc="Returns the unit&apos;s PvP Offense Rating">
            <ReturnValue Type="Float" Desc="The unit&apos;s PvP Offense Rating" Id="9234"/>
        </Method>
        <Method Name="GetPvPDefensePercent" Incomplete="true" Id="5372" Desc="Returns the percent of damage that is mitigated during PvP">
            <ReturnValue Type="Float" Desc="The percent of damage that is mitigated during PvP" Id="9230"/>
        </Method>
        <Method Name="GetPvPOffensePercent" Incomplete="true" Id="5373" Desc="Returns the percent of extra damage the player does in PvP">
            <ReturnValue Type="Float" Desc="The percent of extra damage the unit does in PvP" Id="9232"/>
        </Method>
        <Method Name="SetAlternateTarget" Incomplete="true" Id="5374" Desc="Changes the player&apos;s focus target to the specified unit.  Clear the focus target by passing in nil.">
            <Param Name="unitNewFocus" Desc="The unit that is set as the new focus target." Type="Unit" Id="9434"/>
        </Method>
        <Method Name="IsMyGhost" Incomplete="true" Id="5375" Desc="Determines whether or not the selected unit is the player&apos;s own ghost">
            <ReturnValue Type="Boolean" Id="9416"/>
        </Method>
        <Method Name="GetCommodityItems" Incomplete="true" Id="5377" Desc="Returns list of the player&apos;s commodity items.  This does not work for NPCs">
            <ReturnValue Type="Item" Desc="An array of commodity items in the player&apos;s inventory" Id="9011"/>
        </Method>
        <Method Name="GetAuctionableItems" Incomplete="true" Id="5378" Desc="Gets a list of all the items the player can throw up on the Auction House">
            <ReturnValue Type="itemSellable" Desc="An array of items that the player is able to sell on the Auction House" Array="true" Id="8905"/>
        </Method>
        <Method Name="IsIgnored" Incomplete="true" Id="5379" Desc="Determines whether or not the selected player is ignored">
            <ReturnValue Type="Boolean" Id="9405"/>
        </Method>
        <Method Name="IsRival" Incomplete="true" Id="5381" Desc="Determines whether or not the unit is a rival">
            <ReturnValue Type="Boolean" Id="9423"/>
        </Method>
        <Method Name="IsFriend" Incomplete="true" Id="5382" Desc="Determines whether or not the unit is a friend.  This does not include account level friends">
            <ReturnValue Type="Boolean" Id="9400"/>
        </Method>
        <Method Name="IsVisibleOnCurrentZoneMinimap" Incomplete="true" Id="5383" Desc="Determines whether or not the unit is currently in the same section of the map and in the same instance">
            <ReturnValue Type="Boolean" Id="9431"/>
        </Method>
        <Method Name="SetTargetMarker" Incomplete="true" Id="5384" Desc="Places the specified target marker above the unit.">
            <Param Name="nMarker" Desc="The integer representing which target marker to assign to the unit" Type="Integer" Id="9435"/>
        </Method>
        <Method Name="GetTargetMarker" Incomplete="true" Id="5385" Desc="Returns a number representing the target marker on the unit">
            <ReturnValue Type="Integer" Desc="A number representing the target marker on the unit" Id="9326"/>
        </Method>
        <Method Name="ClearTargetMarker" Incomplete="true" Id="5386" Desc="Removes a target marker from the unit">
            <ReturnValue Type="Boolean" Desc="Whether or not the function finished successfully " Id="8882"/>
        </Method>
        <Method Name="IsMounted" Incomplete="true" Id="7824" Desc="Determines whether or not the unit is riding a mount">
            <ReturnValue Type="Boolean" Id="9415"/>
        </Method>
        <Method Name="GetMountMaxHealth" Incomplete="true" Id="7825" Desc="The maximum health of the mount that the unit is riding">
            <ReturnValue Type="Integer" Desc="The maximum health of the mount that the unit is riding" Id="9211"/>
        </Method>
        <Method Name="GetMountHealth" Incomplete="true" Id="7826" Desc="Returns the current health of the mount that the unit is riding">
            <ReturnValue Type="Integer" Desc="The current health of the omount that the unit is riding" Id="9210"/>
        </Method>
        <Method Name="GetHeading" Incomplete="true" Id="8161" InternalNotes="What is this?  In degrees?" Desc="Returns the heading of the unit">
            <ReturnValue Type="Float" Desc="The heading of the unit in degrees." Id="9152"/>
        </Method>
        <Method Name="GetFacing" Incomplete="true" Id="8162" Desc="Returns the direction the unit is facing, in x,y,z coordinates.">
            <ReturnValue Type="Table" Id="9121">
                <Item Name="x" Type="Float" Id="9122"/>
                <Item Name="y" Type="Float" Id="9123"/>
                <Item Name="z" Type="Float" Id="9124"/>
            </ReturnValue>
        </Method>
        <Method Name="GetBaseLifesteal" Incomplete="true" Id="8565" Desc="Gets the unit&apos;s base life-steal amount">
            <ReturnValue Type="Float" Desc="The base amount of life-steal the unit has" Id="8906"/>
        </Method>
        <Method Name="GetCooldownReductionModifier" Incomplete="true" Id="8566" Desc="The modifier that the unit&apos;s cooldowns are reduced by">
            <ReturnValue Type="Integer" Desc="The unit&apos;s cooldowns are reduced by this amount" Id="9014"/>
        </Method>
        <Method Name="GetManaCostModifier" Incomplete="true" Id="8567" Desc="Returns the current modifier to the mana cost of the unit&apos;s abilities">
            <ReturnValue Type="Float" Desc="The modifier to the mana cost of the unit&apos;s abilities" Id="9200"/>
        </Method>
        <Method Name="GetIgnoreArmorBase" Incomplete="true" Id="8568" Desc="Returns unit&apos;s armor penetration percent">
            <ReturnValue Type="Float" Desc="The unit&apos;s armor penetration percent" Id="9156"/>
        </Method>
        <Method Name="GetIgnoreShieldBase" Incomplete="true" Id="8569" Desc="Returns the unit&apos;s shield penetration percent">
            <ReturnValue Type="Float" Desc="The unit&apos;s shield penetration percent" Id="9157"/>
        </Method>
        <Method Name="GetShieldRegenPct" Incomplete="true" Id="8570" Desc="Returns the percent of the unit&apos;s maximum shields that are regenerated each tic">
            <ReturnValue Type="Float" Desc="The percent of the unit&apos;s maximum shields that are regenerated each tic" Id="9311"/>
        </Method>
        <Method Name="GetShieldRebootTime" Incomplete="true" Id="8571" Desc="Returns the amount of time the unit needs to go without taking damage before their shields start to regenerate">
            <ReturnValue Type="Float" Desc="The amount of time between shield regen tics" Id="9310"/>
        </Method>
        <Method Name="GetShieldTickTime" Incomplete="true" Id="8572" Desc="Returns the intervals at which the unit&apos;s shields regenerate, in seconds">
            <ReturnValue Type="Float" Desc="The intervals at which the unit&apos;s shields regenerate, in seconds." Id="9312"/>
        </Method>
        <Method Name="GetCCDurationModifier" Incomplete="true" Id="8573" Desc="Returns any modifiers to Crowd Control duration on the player.">
            <ReturnValue Type="Integer" Desc="The crowd control duration modifier on the player" Id="9001"/>
        </Method>
        <Method Name="IsVisibleInstancePortal" Incomplete="true" Id="8574" Desc="Determines whether or not the unit is an instance portal and if it is visible">
            <ReturnValue Type="Boolean" Id="9430"/>
        </Method>
        <Method Name="GetInstancePortalLevelRange" Incomplete="true" Id="8575" Desc="Returns the level range for an instance inside an instance portal.  Returns nil if the unit is not an instance portal.">
            <ReturnValue Type="Table" Id="9163">
                <Item Name="nMinLevel" Desc="The minimum level for the instance" Type="Integer" Id="9164"/>
                <Item Name="nMaxLevel" Desc="The maximum level for the instance.  Players above this level will be 
scaled to this level inside the instance" Type="Integer" Id="9165"/>
            </ReturnValue>
        </Method>
        <Method Name="GetInstancePortalCompletionTime" Incomplete="true" Id="8576" Desc="Returns the expected completion time of the instance inside an instance portal">
            <ReturnValue Type="Integer" Desc="The expected completion time of the instance, in minutes" Id="9159"/>
        </Method>
        <Method Name="GetInstancePortalRemainingTime" Incomplete="true" Id="8577" Desc="The group&apos;s remaining time to finish an instance.">
            <ReturnValue Type="Integer" Desc="The group&apos;s remaining time to finish an instance, in seconds" Id="9167"/>
        </Method>
        <Method Name="IsShieldOverloaded" Incomplete="true" Id="8578" Desc="Determines whether or not the unit&apos;s shields are overloaded"/>
        <Method Name="IsMentoring" Incomplete="true" Id="8579" Desc="Determines whether or not the selected unit is mentoring another player">
            <ReturnValue Type="Boolean" Id="9412"/>
        </Method>
        <Method Name="IsRallied" Incomplete="true" Id="8580" Desc="Determines whether or not the unit&apos;s level has been fixed due to rallying">
            <ReturnValue Type="Boolean" Id="9422"/>
        </Method>
        <Method Name="GetLoot" Incomplete="true" Id="8581" Desc="Returns a list of dropped loot that belongs to the player">
            <ReturnValue Type="Table" Desc="There are multiple combinations of variables found in the table.  Each combination is dependant on which 
type " Array="true" Id="9179">
                <Item Type="Table" Desc="This contains all of the variables for items that can be looted" Id="9180">
                    <Item Name="nCount" Desc="The amount of items looted in this indivudal drop" Type="Integer" Id="9181"/>
                    <Item Name="itemLoot" Desc="The item that was dropped" Type="Item" Id="9182"/>
                    <Item Name="itemModData" Desc="The mod data for the item that was dropped.  Note that not every item
will have this variable" Type="Item" Id="9183"/>
                    <Item Name="itemSigilData" Desc="The sigil data for the item that was dropped.  Note that not every item will
have sigil data." Type="Item" Id="9184"/>
                </Item>
                <Item Type="Table" Desc="This table contains all the variables for money loot drops" Id="9185">
                    <Item Name="monCurrency" Desc="Currency that was dropped." Type="Money" Id="9186"/>
                </Item>
                <Item Type="Table" Desc="This table contains all the variables for virtual items that are looted" Id="9187">
                    <Item Name="strName" Desc="The name of the virtual item" Type="String" Id="9188"/>
                    <Item Name="strFlavor" Desc="The flavor text for the virtual item" Type="String" Id="9189"/>
                    <Item Name="nCount" Desc="The number of the virtual item that will be picked up in this individual drop" Type="Integer" Id="9190"/>
                    <Item Name="strIcon" Desc="The string name for the icon used for the virtual item" Type="String" Id="9191"/>
                    <Item Name="eType" Desc="The virtual item&apos;s type.  This value corresponds with the &gt;&gt;&gt;&gt; enum" Type="Integer" Id="9192"/>
                </Item>
                <Item Type="Table" Desc="This table contains all the variables for spell effects that are dropped, such as
from Scientist scans." Id="9193">
                    <Item Type="Table" Name="tAbility" Desc="Information on the skill that is picked up." Id="9194">
                        <Item Name="strName" Desc="The name of the spell" Type="String" Id="9195"/>
                        <Item Name="strDescription" Desc="The description of the spell" Type="String" Id="9196"/>
                        <Item Name="strButtonIcon" Desc="The string for the spell&apos;s icon" Type="String" Id="9197"/>
                    </Item>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="CanBeHarvestedBy" Incomplete="true" Id="8582" Desc="Returns whether or not the player can harvest the selected unit.  Returns false if the unit is not a harvestable unit.">
            <Param Name="unitPlayer" Desc="The function checks against this unit&apos;s tradeskills to see if the calling unit is
harvestable" Type="Unit" Id="8878"/>
            <ReturnValue Type="Boolean" Desc="Whether or not the unit can be harvested by the unit that was passed in" Id="8879"/>
        </Method>
        <Method Name="GetHarvestRequiredTradeskillName" Incomplete="true" Id="8583" Desc="Returns the name of the tradeskill required to harvest a node.  Note, some units are labeled as &quot;Harvestable&quot;, but do not require a tradeskill and generally 
do not provide materials.">
            <ReturnValue Type="String" Desc="The name of the tradeskill required to harvest the node." Id="9150"/>
        </Method>
        <Method Name="GetHarvestRequiredTradeskillTier" Incomplete="true" Id="8584" Desc="Returns the tier of the tradeskill required to harvest a node.  Note that there are some nodes that are labeled as &quot;Harvest&quot;, but do not require a tradeskill.
These nodes do not provide mats.">
            <ReturnValue Type="Integer" Desc="The tradeskill tier required to harvest the node" Id="9151"/>
        </Method>
        <Method Name="IsSettlerImprovement" Incomplete="true" Id="8585" Desc="Determines whether or not the unit is a settler improvement">
            <ReturnValue Type="Boolean" Id="9425"/>
        </Method>
        <Method Name="IsSettlerReward" Incomplete="true" Id="8586" Desc="Determines whether or not the unit is a settler improvement with a reward"/>
        <Method Name="GetSettlerRewardName" Incomplete="true" Id="8587" InternalNotes="Unknown.  It&apos;s used in tooltips, but I can&apos;t seem to find anything that is one."/>
        <Method Name="GetSettlerImprovementInfo" Incomplete="true" Id="8588" Desc="Returns information on Settler Improvements.  Returns an empty table if the unit is not a Settler Improvment">
            <ReturnValue Type="Table" Id="9300">
                <Item Name="arOwnerNames" Desc="A list of the people who help build and maintain this improvement" Type="String" Array="true" Id="9301"/>
                <Item Name="bIsInfiniteDuration" Desc="Whether or not the improvement lasts forever" Type="Boolean" Id="9302"/>
                <Item Name="nRemainingTime" Desc="Returns the remaining duration on the improvement in seconds" Type="Integer" Id="9303"/>
                <Item Type="Table" Name="arTiers" Desc="A list of the various tiers of the improvement" Array="true" Id="9304">
                    <Item Name="strName" Desc="The name of this tier of the improvement" Type="String" Id="9305"/>
                    <Item Name="nTier" Desc="The tier number" Type="Integer" Id="9306"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="IsFriendlyWarplotStructure" Incomplete="true" Id="8589" Desc="Determines whether or not the selected unit is both a warplot plug and if it&apos;s friendly">
            <ReturnValue Type="Boolean" Desc="Returns true if both the unit is a plug and if it is friendly" Id="9401"/>
        </Method>
        <Method Name="GetCurrentWarplotTier" Incomplete="true" Id="8590" Desc="Returns the tier of a Warplot plug.  If this is called for any unit other than a Warplot plug, this returns nil.">
            <ReturnValue Type="Integer" Desc="The current tier of a Warplot plug" Id="9112"/>
        </Method>
        <Method Name="CanUpgradeWarplotStructure" Incomplete="true" Id="8591" Desc="Returns whether or not a character has permissions to upgrade a warplot structure during a match">
            <ReturnValue Type="Boolean" Desc="Whether or not the player has permissions to upgrade structures" Id="8881"/>
        </Method>
        <Method Name="GetCurrentWarplotUpgradeCost" Incomplete="true" Id="8592" Desc="Returns the number of Nanopacks needed to upgrade the selected Warplot plug.  This returns nil if called from any unit that is not a Warplot plug.">
            <ReturnValue Type="Integer" Desc="The number of Nanopacks needed to upgrade the selected Warplot plug." Id="9113"/>
        </Method>
        <Method Name="IsAccountFriend" Incomplete="true" Id="8593" Desc="Determines whether or not the specified unit is an Account Friend">
            <ReturnValue Type="Boolean" Id="9394"/>
        </Method>
        <Method Name="GetUnitMount" Incomplete="true" Id="8594" Desc="Returns the unit&apos;s mount">
            <ReturnValue Type="Unit" Desc="The unit&apos;s current mount" Id="9343"/>
        </Method>
        <Method Name="Inspect" Incomplete="true" Id="8595" Desc="Performs the Inspect action on the given unit.  This will cause the Inspect event to be fired"/>
        <Method Name="GetUnitOwner" Incomplete="true" Id="8596" Desc="Returns the owner of a pet.">
            <ReturnValue Type="Unit" Desc="The unit who owns the pet" Id="9344"/>
        </Method>
        <EnumSet Name="CodeEnumDisposition" Incomplete="true" Id="8597" Desc="An NPC&apos;s disposition towards the player.
Hostile: Attacks when their target is within agro range
Neutral: Will only attack if they are attacked first     Friendly: The unit cannot attack or be attacked by the target">
            <Enum Name="Hostile" Id="8598"/>
            <Enum Name="Neutral" Id="8599"/>
            <Enum Name="Friendly" Id="8600"/>
            <Enum Name="Unknown" Id="8601"/>
        </EnumSet>
        <EnumSet Name="CodeEnumLootItemType" Incomplete="true" Id="8602" Desc="An enum representing the different types of loot that can drop off an NPC.  StaticItem: Your typical item loot.  Cash: Make money money...   
Virtual Item: Virtual items used for specific quests / challenges / dungeons / adventures
AdventureSpell: Drops that have an immediate effect on the player that picks them up" NeedProofread="true">
            <Enum Name="StaticItem" Id="8603"/>
            <Enum Name="Cash" Id="8604"/>
            <Enum Name="VirtualItem" Id="8605"/>
            <Enum Name="AdventureSpell" Id="8606"/>
        </EnumSet>
        <Method Name="GetVehicle" Desc="Returns the vehicle the unit is currently riding" Id="9360">
            <ReturnValue Type="Unit" Desc="The vehicle that the unit is riding" Id="9361"/>
        </Method>
        <Method Name="IsInCombat" Incomplete="true" Id="9963"/>
        <Method Name="GetRechargeableItems" Incomplete="true" Id="9964"/>
        <Method Name="IsInVehicle" Incomplete="true" Id="9965"/>
        <Method Name="ShouldDisplayMountHealth" Incomplete="true" Id="12466"/>
        <EnumSet Name="CodeEnumCCStateStunVictimGameplay" Incomplete="true" Id="12467">
            <Enum Name="Forward" Id="12468"/>
            <Enum Name="Backward" Id="12469"/>
            <Enum Name="Left" Id="12470"/>
            <Enum Name="Right" Id="12471"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13158"/>
        <Method Name="GetPvPDamageO" Incomplete="true" Id="14840"/>
        <Method Name="GetPvPDamageI" Incomplete="true" Id="14841"/>
        <Method Name="GetPvPHealingO" Incomplete="true" Id="14842"/>
        <Method Name="GetPvPHealingI" Incomplete="true" Id="14843"/>
        <Method Name="GetPvPDefenseO" Incomplete="true" Id="14844"/>
        <Method Name="GetPvPDefenseI" Incomplete="true" Id="14845"/>
        <Method Name="GetMiniMapMarkers" Incomplete="true" Id="14846"/>
        <Method Name="PrepareInfractionReport" Incomplete="true" Id="14847"/>
        <Method Name="IsRare" Incomplete="true" Id="16453"/>
        <EnumSet Name="CodeEnumArchetype" Incomplete="true" Id="16454">
            <Enum Name="EliteShields" Id="16455"/>
            <Enum Name="Iconic" Id="16456"/>
            <Enum Name="Townie" Id="16457"/>
            <Enum Name="EliteNoShields" Id="16458"/>
        </EnumSet>
        <Method Name="CanGrantXp" Incomplete="true" Id="17113"/>
        <Method Name="RequestRealmName" Incomplete="true" Id="17114"/>
        <EnumSet Name="CodeEnumRewardInfoType" Incomplete="true" Id="17202">
            <Enum Name="Quest" Id="17203"/>
            <Enum Name="Challenge" Id="17204"/>
            <Enum Name="Explorer" Id="17205"/>
            <Enum Name="Scientist" Id="17206"/>
            <Enum Name="Soldier" Id="17207"/>
            <Enum Name="Settler" Id="17208"/>
            <Enum Name="PublicEvent" Id="17209"/>
            <Enum Name="Rival" Id="17210"/>
            <Enum Name="Friend" Id="17211"/>
            <Enum Name="ScientistSpell" Id="17212"/>
            <Enum Name="TSpell" Id="17213"/>
            <Enum Name="Contract" Id="17214"/>
        </EnumSet>
        <Event Name="UnitCCStateChanged" Desc="Updates the target frame if the targetted unit becomes vulnerable by displaying vulnerability indicators" Incomplete="true" Id="1069" Deleted="true"/>
        <Event Name="StartLooting" Incomplete="true" Id="1085" Deleted="true"/>
        <Event Name="StopLooting" Incomplete="true" Id="1087" Deleted="true"/>
        <Event Name="SpellEffectCast" Incomplete="true" Id="1105" Deleted="true"/>
        <Method Name="GetOffensiveStats" Desc="Currently has no implementation" Incomplete="true" Id="1142" Deleted="true"/>
        <Method Name="GetDefensiveStats" Desc="Currently has no implementation" Incomplete="true" Id="1143" Deleted="true"/>
        <Method Name="GetAbilityPower" Desc="Does a lua_pushnumber of the unit&apos;s ability power." Incomplete="true" Id="1147" Deleted="true"/>
        <Method Name="GetDuelState" Desc="Does a lua_pushnumber of 1 for HasPendingDuelRequest, 2 for IsDueling, else 3." Incomplete="true" Id="1187" Deleted="true"/>
        <Method Name="ShouldShowHealthBar" Desc="Does a lua_pushboolean whether the unit&apos;s health bar should be shown." Incomplete="true" Id="1190" Deleted="true"/>
        <Method Name="ShouldShowShieldCapacityBar" Desc="Does a lua_pushboolean whether the unit&apos;s shield bar should be shown." Incomplete="true" Id="1193" Deleted="true"/>
        <Method Name="GetRechargeableItems" Desc="Does a lua_newtable of many (10+) fields describing the rechargeable items." Incomplete="true" Id="1204" Deleted="true"/>
        <Method Name="GetDifficultyString" Desc="Does a lua_pushwstring of pUnit&apos;s localized difficulty string corresponding to its difficulty color." Incomplete="true" Id="1207" Deleted="true"/>
        <EnumSet Name="CodeEnumVital" Incomplete="true" Id="2372" Desc="Represents the basic stats of HP, Mana, and Class Resources" Deleted="true"/>
        <EnumSet Name="CodeEnumTargetDifficulty" Incomplete="true" Id="2505" Deleted="true"/>
        <EnumSet Name="GetSupportPower" Incomplete="true" Id="3654" Deleted="true"/>
        <EnumSet Name="GetTargetOfTarget" Incomplete="true" Id="3664" Deleted="true"/>
        <Method Name="GetMedicCoreInfo" Incomplete="true" Id="3682" Deleted="true"/>
        <Method Name="ShouldShowAbsorptionBar" Incomplete="true" Id="3693" Deleted="true"/>
        <Method Name="GetGuildEmblemSprite" Incomplete="true" Id="3711" Deleted="true"/>
        <Method Name="GetGuildEmblemColor" Incomplete="true" Id="3712" Deleted="true"/>
        <Method Name="ShouldShowLevel" Incomplete="true" Id="5376" Deleted="true"/>
        <Method Name="IsNeighbor" Incomplete="true" Id="5380" Deleted="true"/>
    </Object>
    <WindowControl Name="Button" Incomplete="true" Id="1213" Parent="Window">
        <Method Name="GetCooldownPercent" Desc="Does a lua_pushnumber of the caller&apos;s cooldown percent as a float." Incomplete="true" Id="1216" Deleted="true"/>
        <Method Name="SetCooldownPercent" Desc="Sets the caller&apos;s cooldown percent to fCooldownPercent." Incomplete="true" Id="1217" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="EditBox" Incomplete="true" Id="1252" Parent="Window">
        <Method Name="GetSel" Incomplete="true" Id="8607"/>
        <Method Name="HitTest" Incomplete="true" Id="8608"/>
        <Method Name="AddLink" Incomplete="true" Id="8609"/>
        <Method Name="GetAllLinks" Incomplete="true" Id="8610"/>
        <Method Name="SetPrompt" Incomplete="true" Id="12472"/>
        <Method Name="RemoveLinks" Incomplete="true" Id="12473"/>
        <Method Name="SetMaxTextLength" Incomplete="true" Id="12474"/>
        <Method Name="GetMaxTextLength" Incomplete="true" Id="12475"/>
        <Event Name="EditBoxTextTooLarge" Incomplete="true" Id="12476"/>
        <Method Name="SetPromptColor" Incomplete="true" Id="16459"/>
    </WindowControl>
    <WindowControl Name="GridWindow" Incomplete="true" Id="1277" Parent="Window">
        <Method Name="GetColumnWidth" Incomplete="true" Id="12477"/>
        <Method Name="GetItemData" Desc="Does a lua_rawgeti on m_iLuaDataRefId of the caller&apos;s cell at iRow and iCol as a LuaData." Incomplete="true" Id="1316" Deleted="true"/>
        <Method Name="GetItemText" Desc="Does a lua_pushwstring on m_strText of the caller&apos;s cell at iRow and iCol as a String." Incomplete="true" Id="1319" Deleted="true"/>
        <Method Name="InsertRow" Desc="Currently commented out. Not implemented" Incomplete="true" Id="1326" Deleted="true"/>
        <Method Name="SetCellBGNormal" Desc="Sets the Sprite m_sprCellBGNormal&apos;s Info to sText and the CColor m_crCellBGNormal to color." Incomplete="true" Id="1366" Deleted="true"/>
        <Method Name="SetCellBGNormalFocus" Desc="Sets the Sprite m_sprCellBGNormalFocus&apos;s Info to sText and the CColor m_crCellBGNormalFocus to color." Incomplete="true" Id="1369" Deleted="true"/>
        <Method Name="SetCellBGSelected" Desc="Sets the Sprite m_sprCellBGSelected&apos;s Info to sText and the CColor m_crCellBGSelected to color." Incomplete="true" Id="1372" Deleted="true"/>
        <Method Name="SetCellBGSelectedFocus" Desc="Sets the Sprite m_sprCellBGSelectedFocus&apos;s Info to sText and the CColor m_crCellBGSelectedFocus to color." Incomplete="true" Id="1375" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="IconListBox" Incomplete="true" Id="1378" Parent="Window"/>
    <WindowControl Name="MenuBarWindow" Incomplete="true" Id="1387" Parent="Window"/>
    <WindowControl Name="MLWindow" Incomplete="true" Id="1391" Parent="Window"/>
    <WindowControl Name="ProgressBar" Incomplete="true" Id="1406" Parent="Window">
        <Method Name="GetFloor" Incomplete="true" Id="17215"/>
        <Method Name="GetMax" Incomplete="true" Id="17216"/>
        <Method Name="GetProgress" Incomplete="true" Id="17217"/>
        <Method Name="GetClipPoints" Incomplete="true" Id="17218"/>
        <Method Name="SetClipPoints" Incomplete="true" Id="17219"/>
    </WindowControl>
    <WindowControl Name="SliderBar" Incomplete="true" Id="1432" Parent="Window"/>
    <WindowControl Name="Spinner" Incomplete="true" Id="1447" Parent="Window"/>
    <WindowControl Name="TabWindow" Incomplete="true" Id="1464" Parent="Window">
        <Method Name="IsAttached" Incomplete="true" Id="8611"/>
        <Method Name="IsAttachedToTab" Incomplete="true" Id="8612"/>
    </WindowControl>
    <WindowControl Name="TreeControl" Incomplete="true" Id="1472" Parent="Window">
        <Method Name="GetColumnWidth" Incomplete="true" Id="12478"/>
        <Method Name="SetHeaderImage" Incomplete="true" Id="12479"/>
        <Method Name="SetHeaderText" Incomplete="true" Id="12480"/>
        <Method Name="SetHeaderTextColor" Incomplete="true" Id="12481"/>
    </WindowControl>
    <WindowControl Name="Window" Incomplete="true" Id="1536" Prefix="wnd">
        <Method Name="AddPixie" Incomplete="true" Id="6590" NotStandard="true" InternalNotes="Desperately needs coding standard fix">
            <Param Name="iLayer" Desc="The pixie layer that the picie should be created at" Type="Integer" Id="9063"/>
            <Param Name="bLine" Desc="Draws the pixie as a line" Type="Boolean" Id="9064"/>
            <Param Name="bRestart" Type="Boolean" Id="9065"/>
            <Param Name="strText" Desc="The text to add to the pixie" Type="String" Id="9066"/>
            <Param Name="strFont" Desc="The font to use for the pixie" Type="String" Id="9067"/>
            <Param Name="flagsText" Desc="The flags for the the text" Type="Table" Id="9068"/>
            <Param Name="fWidth" Desc="The width of the pixie.  This is only used if the pixie is drawn as a line." Type="Float" Id="9069"/>
            <Param Name="strSprite" Desc="The name of the sprite used for the pixie.  This is only used for pixies that aren&apos;t drawn as a line." Type="String" Id="9070"/>
            <Param Name="fRotation" Desc="The number of degrees the pixie is rotated.  This is only used for pixies that are not drawn as a line." Type="Float" Id="9071"/>
            <Param Name="loc" Desc="The boundaries of the pixie.  This table contains the offsets and points for the boundary." Type="Table" Id="9072">
                <Item Name="fPoints" Desc="The points at the edges of the pixie.  Values are ordered as Left, Top, Right, Bottom." Type="Float" Array="true" Id="9073"/>
                <Item Name="nOffsets" Desc="The offsets for the pixie.  These are ordered as Left, Top, Right, Bottom." Type="Integer" Array="true" Id="9074"/>
            </Param>
            <Param Name="cr" Desc="The color of the pixie" Type="CColor" Id="9075"/>
            <Param Name="crText" Desc="The color of the text in the pixie" Type="CColor" Id="9076"/>
            <ReturnValue Type="Integer" Desc="The pixie&apos;s ID number" Id="9077"/>
        </Method>
        <Method Name="AddEventHandler" Incomplete="true" Id="8613"/>
        <Method Name="RemoveEventHandler" Incomplete="true" Id="8614"/>
        <Method Name="GetTransLocation" Incomplete="true" Id="8615"/>
        <Method Name="SetTooltipForm" Incomplete="true" Id="8616"/>
        <Method Name="SetTooltipFormSecondary" Incomplete="true" Id="8617"/>
        <Method Name="HasTooltip" Incomplete="true" Id="8618"/>
        <Method Name="HasTooltipSecondary" Incomplete="true" Id="8619"/>
        <Method Name="SetBGOpacity" Incomplete="true" Id="8620"/>
        <Method Name="GetBGOpacity" Incomplete="true" Id="8621"/>
        <Method Name="SetNCOpacity" Incomplete="true" Id="8622"/>
        <Method Name="GetNCOpacity" Incomplete="true" Id="8623"/>
        <Method Name="SetTextRaw" Incomplete="true" Id="8624"/>
        <Method Name="SetWindowSubclass" Incomplete="true" Id="8625"/>
        <Method Name="GetWindowSubclass" Incomplete="true" Id="8626"/>
        <Method Name="SetCanResize" Incomplete="true" Id="8627"/>
        <Event Name="WindowSizeChanged" Incomplete="true" Id="8628"/>
        <Event Name="DragDropClear" Incomplete="true" Id="8629"/>
        <Event Name="UDE" Incomplete="true" Id="9972"/>
        <Method Name="Invoke" Incomplete="true" Id="12482"/>
        <Method Name="GetClientRect" Incomplete="true" Id="12483"/>
        <Method Name="GetOriginalLocation" Incomplete="true" Id="12484"/>
        <Method Name="IsStyleOn" Incomplete="true" Id="12485"/>
        <Method Name="IsStyleExOn" Incomplete="true" Id="12486"/>
        <Method Name="ResetSubclass" Incomplete="true" Id="12487"/>
        <Event Name="QueryCursor" Incomplete="true" Id="12488"/>
        <Method Name="__gc" Incomplete="true" Id="13159"/>
        <Method Name="__eq" Incomplete="true" Id="13160"/>
        <Method Name="SendChildToBottom" Incomplete="true" Id="14848"/>
        <Method Name="GetTextColor" Incomplete="true" Id="14849"/>
        <Event Name="TopLevelWindowMove" Incomplete="true" Id="14850"/>
        <Event Name="WindowGainedFocus" Incomplete="true" Desc="Fires when a window gains focus" Id="16253"/>
        <Method Name="GetSizingMinimum" Incomplete="true" Id="16460"/>
        <Method Name="GetSizingMaximum" Incomplete="true" Id="16461"/>
        <Event Name="WindowLostFocus" Desc="Fires when a window lost focus" Id="16563" Incomplete="true"/>
        <Method Name="AddEventMapping" Incomplete="true" Id="1620" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="AbilityItemWindow" Incomplete="true" Id="1836" Parent="Window">
        <Method Name="GetAbilityTierId" Incomplete="true" Id="8630"/>
        <Method Name="GetMaxAbilityId" Desc="Does a lua_pushinteger of the ability&apos;s Id, or 0 if the ability is not found." Incomplete="true" Id="1842" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="BagWindow" Incomplete="true" Id="1845" Parent="Window">
        <Method Name="SetNewItemOverlaySprite" Incomplete="true" Id="8631"/>
        <Method Name="SetItemSortComparer" Incomplete="true" Id="14851"/>
        <Method Name="SetSort" Incomplete="true" Id="14852"/>
        <Event Name="ItemClick" Id="17309">
            <Param Name="eMouseButton" Desc="The mouse button being clicked." Id="17311" Type="EMouseButton"/>
            <Param Name="itemClicked" Desc="Item that was clicked" Type="Item" Id="17313"/>
        </Event>
        <Method Name="DeleteItem" Incomplete="true" Id="1859" Deleted="true"/>
        <Method Name="SalvageItem" Incomplete="true" Id="2602" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="BuffWindow" Incomplete="true" Id="1885" Parent="Window"/>
    <WindowControl Name="CashWindow" Incomplete="true" Id="1888" Parent="Window">
        <Method Name="SetExchangeItem" Incomplete="true" Id="17115"/>
    </WindowControl>
    <WindowControl Name="CostumeWindow" Incomplete="true" Id="1911" Parent="Window">
        <Method Name="SetItemsByCreationId" Incomplete="true" Id="12489"/>
        <Method Name="GetBones" Incomplete="true" Id="17116"/>
        <Method Name="SetBone" Incomplete="true" Id="17117"/>
        <Method Name="ResetBone" Incomplete="true" Id="17118"/>
        <Method Name="ResetAllBones" Incomplete="true" Id="17119"/>
        <Method Name="SetLook" Incomplete="true" Id="17120"/>
        <Method Name="GetLooks" Incomplete="true" Id="17121"/>
        <Method Name="GetLookIndexes" Incomplete="true" Id="17122"/>
        <Method Name="GetSliderCodes" Incomplete="true" Id="17123"/>
        <Method Name="SetBySliderCodes" Incomplete="true" Id="17124"/>
        <Method Name="CommitCustomizationChanges" Incomplete="true" Id="17125"/>
        <Method Name="GetCostForCustomizationSelection" Incomplete="true" Id="17126"/>
        <Method Name="GetCostForBoneChanges" Incomplete="true" Id="17127"/>
        <Method Name="RemoveItem" Incomplete="true" Id="17220"/>
    </WindowControl>
    <WindowControl Name="ItemSlotWindow" Incomplete="true" Id="1946" Parent="Window">
        <Method Name="GetSprWhenEmpty" Incomplete="true" Id="8632"/>
    </WindowControl>
    <WindowControl Name="MiniMapWindow" Incomplete="true" Id="1950" Parent="Window">
        <Method Name="SetZoomLevel" Incomplete="true" Id="9973"/>
        <Method Name="GetZoomLevel" Incomplete="true" Id="9974"/>
        <Method Name="RemoveObjectsByType" Incomplete="true" Id="9975"/>
        <Method Name="RemoveObjectsByUserData" Incomplete="true" Id="9976"/>
        <Method Name="HideObjectsByType" Incomplete="true" Id="9977"/>
        <Method Name="HideObjectsByUserData" Incomplete="true" Id="9978"/>
        <Method Name="ShowObjectsByType" Incomplete="true" Id="9979"/>
        <Method Name="ShowObjectsByUserData" Incomplete="true" Id="9980"/>
        <Method Name="ClearQuestIndicators" Desc="Runs the caller&apos;s RemoveObjectsByType method on MiniMapObjectType_QuestObjective." Incomplete="true" Id="1966" Deleted="true"/>
        <Method Name="ClearPathIndicators" Desc="Runs the caller&apos;s RemoveObjectsByType method on MiniMapObjectType_PathObjective." Incomplete="true" Id="1967" Deleted="true"/>
        <Method Name="RemoveObjectByType" Incomplete="true" Id="3765" Deleted="true"/>
        <Method Name="RemoveObjectByUserData" Incomplete="true" Id="3767" Deleted="true"/>
    </WindowControl>
    <WindowControl Name="ZoneMapWindow" Incomplete="true" Id="1982" Parent="Window">
        <Method Name="HideObjectsByType" Incomplete="true" Id="8633"/>
        <Method Name="ShowObjectsByType" Incomplete="true" Id="8635"/>
        <Method Name="SetObjectsVisibility" Incomplete="true" Id="8637"/>
        <Method Name="AddObjectByWorldLocId" Incomplete="true" Id="9981"/>
        <Method Name="RemoveObjectsByType" Incomplete="true" Id="9982"/>
        <Method Name="RemoveObjectsByUserData" Incomplete="true" Id="9983"/>
        <Method Name="ShowRegionsByUserData" Incomplete="true" Id="9984"/>
        <Method Name="HideRegionsByUserData" Incomplete="true" Id="9985"/>
        <Method Name="ShowRegionsByType" Incomplete="true" Id="9986"/>
        <Method Name="HideRegionsByType" Incomplete="true" Id="9987"/>
        <Method Name="HighlightRegionsByUserData" Incomplete="true" Id="9988"/>
        <Method Name="UnhighlightRegionsByUserData" Incomplete="true" Id="9989"/>
        <Method Name="HighlightRegionsByType" Incomplete="true" Id="9990"/>
        <Method Name="UnhighlightRegionsByType" Incomplete="true" Id="9991"/>
        <Method Name="HideObjectsByUserData" Incomplete="true" Id="9992"/>
        <Method Name="ShowObjectsByUserData" Incomplete="true" Id="9993"/>
        <Method Name="SetOverlayTypeInfo" Incomplete="true" Id="9994"/>
        <Method Name="IsShowingGhostWindow" Incomplete="true" Id="9995"/>
        <Method Name="GetZoneCount" Desc="Does a lua_pushinteger of the caller&apos;s zone count." Incomplete="true" Id="1989" Deleted="true"/>
        <Method Name="GetCurrentZoneIndex" Desc="Does a lua_pushinteger of the current zone Id." Incomplete="true" Id="1992" Deleted="true"/>
        <Method Name="RevealLocation" Desc="Runs the caller&apos;s RevealLocation with nPos." Incomplete="true" Id="2004" Deleted="true"/>
        <Method Name="ClearAllIndyDots" Desc="Runs the caller&apos;s m_listDots.Clear method." Incomplete="true" Id="2006" Deleted="true"/>
        <Method Name="AddIndyDot" Desc="Runs the caller&apos;s add method to m_listDots with nPos." Incomplete="true" Id="2007" Deleted="true"/>
        <Method Name="AddQuestIndicator" Incomplete="true" Id="2009" Deleted="true"/>
        <Method Name="ClearQuestIndicators" Desc="Runs the caller&apos;s RemoveAllRegionsByType method on MapOverlay_Quest." Incomplete="true" Id="2014" Deleted="true"/>
        <Method Name="ClearPathIndicators" Desc="Runs the caller&apos;s RemoveAllRegionsByType method on MapOverlay_Path." Incomplete="true" Id="2015" Deleted="true"/>
        <Method Name="AddPathIndicator" Incomplete="true" Id="2016" Deleted="true"/>
        <Method Name="GetZoneAtPoint" Id="2024" Desc="return the table with information about the zone currently located at that point(x, y) in the window" Incomplete="true" Deleted="true"/>
        <Method Name="SetHexOverlaySprite" Desc="Sets the sprite used to overlay sprites that are &quot;lit up&quot;" Id="2058" Incomplete="true" Deleted="true"/>
        <Method Name="SetIndyDotSprite" Incomplete="true" Desc="Sets the sprite used to draw indy dots" Id="2060" Deleted="true"/>
        <Method Name="SetPlayerDotSprite" Incomplete="true" Id="2622" Deleted="true"/>
        <Method Name="RemovePathIndicator" Incomplete="true" Id="3136" Deleted="true"/>
        <Method Name="RemoveObjectByType" Incomplete="true" Id="3785" Deleted="true"/>
        <Method Name="RemoveObjectByUserData" Incomplete="true" Id="3786" Deleted="true"/>
        <Method Name="RemoveRegion" Incomplete="true" Id="3789" Deleted="true"/>
        <Method Name="SelectRegionDisplay" Incomplete="true" Id="3792" Deleted="true"/>
        <Method Name="SelectRegionDisplayByType" Incomplete="true" Id="3793" Deleted="true"/>
        <Method Name="SelectRegionDisplayByUserData" Incomplete="true" Id="3794" Deleted="true"/>
    </WindowControl>
    <Library Name="ICCommLib" Incomplete="true" Id="683">
        <Method Name="SetControlFunction" Incomplete="true" Id="8638"/>
        <EnumSet Name="ICCommJoinResult" Incomplete="true" Id="13161">
            <Enum Name="NoGuild" Id="13162"/>
            <Enum Name="BadName" Id="13163"/>
            <Enum Name="Join" Id="13164"/>
            <Enum Name="TooManyChannels" Id="13165"/>
            <Enum Name="Left" Id="13166"/>
            <Enum Name="NoGroup" Id="13167"/>
            <Enum Name="MissingEntitlement" Id="16536"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13168"/>
        <Method Name="__gc" Incomplete="true" Id="13169"/>
    </Library>
    <WindowControl Name="ActionBarButton" Incomplete="true" Id="2629" Parent="Window"/>
    <WindowControl Name="DragDropFrame" Incomplete="true" Id="2659" Parent="Window"/>
    <WindowControl Name="IconButton" Incomplete="true" Id="2661" Parent="Button"/>
    <Library Name="CraftingLib" Id="2672" Desc="This library is the primary way that the UI interacts with various tradeskills and schematics.  This includes tradeskills that the player has chosen, as well as ones that they are automatically granted such as cooking and runecrafting.">
        <Function Name="GetSchematicList" Id="2676" NotStandard="true" InternalNotes="We could really use an enum for item categories." Desc="Gets a list of schematics that meet the requirements that are passed into this function.">
            <Param Name="eTradeskillId" Desc="The function will return the schematics that the player knows for this tradeskill." Type="CraftingLib.CodeEnumTradeskill" Id="16650"/>
            <Param Name="nItemCategory" Desc="The function will only return schematics that create items that fall under this category." Type="Integer" Id="16651"/>
            <Param Name="eTier" Desc="The function will return schematics that belong to this tradeskill tier." Type="CraftingLib.CodeEnumTradeskillTier" Id="16652"/>
            <Param Name="bShowUnknown" Desc="Whether the function should return schematics that the player has not unlocked or not." Type="Boolean" Id="16653"/>
            <ReturnValue Type="Table" Desc="An array that contains info on each of the schematics that meet the requirements passed into the function." Array="true" Id="16654">
                <Item Name="nSchematicId" Desc="The schematic&apos;s id number." Type="Integer" Id="16655"/>
                <Item Name="strName" Desc="The name of the schematic." Type="String" Id="16656"/>
                <Item Name="eItemType" Desc="The type of the item that is created by the schematic." Type="Item.CodeEnumItemType" Id="16657"/>
                <Item Name="eTier" Desc="The tradeskill tier that the schematic belongs to." Type="CraftingLib.CodeEnumTradeskillTier" Id="16658"/>
                <Item Name="bIsKnown" Desc="Whether the player has learned the schematic or not." Type="Boolean" Id="16659"/>
                <Item Name="bIsOneUse" Desc="Whether the schematic can only be used once or not." Type="Boolean" Id="16660"/>
                <Item Name="strItemTypeName" Desc="The item&apos;s type, in string form." Type="String" Id="16661"/>
                <Item Type="Table" Name="tSubRecipes" Desc="An array that contains info on this schematic&apos;s sub-schematics." Array="true" Id="16662">
                    <Item Name="nSchematicId" Desc="The id number for the sub-schematic." Type="Integer" Id="16663"/>
                    <Item Name="strName" Desc="The name of the schematic." Type="String" Id="16664"/>
                    <Item Name="bIsKnown" Desc="Whether the player has learned the sub-schematic or not." Type="Boolean" Id="16665"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="CraftItem" Id="2678" Desc="Begins a crafting attempt for the specified schematic." Example="If the crafting attempt is successfully started, then the CraftingUpdateCurrent event will fire and the materials for the schematic will be consumed.">
            <Param Name="idSchematic" Desc="The schematic that the player is trying to craft." Type="Integer" Id="16045"/>
        </Function>
        <Function Name="GetKnownTradeskills" Id="3137" Desc="Gets the id numbers and names of the tradeskills known by the character.">
            <ReturnValue Type="Table" Desc="The names and id numbers of tradeskills that are active for the character." Array="true" Id="16195">
                <Item Name="eId" Desc="The tradeskill&apos;s id." Type="CraftingLib.CodeEnumTradeskill" Id="16196"/>
                <Item Name="strName" Desc="The name of the tradeskill." Type="String" Id="16197"/>
            </ReturnValue>
        </Function>
        <Function Name="GetTradeskillInfo" Id="3138" Desc="Returns a table with info about the chosen tradeskill" NotStandard="true" InternalNotes="tTalentTiers needs some format work.">
            <Param Name="eTradeskillId" Desc="The id for the tradeskill that the function will return info on." Type="CraftingLib.CodeEnumTradeskill" Id="16668"/>
            <ReturnValue Type="Table" Desc="Detailed information on the tradeskill, including its description, XP requirements, requirements to relearn, and talents." Id="16669">
                <Item Name="strName" Desc="The tradeskill&apos;s name." Type="String" Id="16670"/>
                <Item Name="strDescription" Desc="A description of the tradeskill." Type="String" Id="16671"/>
                <Item Name="nXpMax" Desc="The maximum amount of XP the player can earn for this tradeskill." Type="Integer" Id="16672"/>
                <Item Name="nTierMax" Desc="The number of tiers the tradeskill has." Type="Integer" Id="16673"/>
                <Item Name="bIsHobby" Desc="Whether the tradeskill is a hobby or not.  The only hobby currently in game is Cooking." Type="Boolean" Id="16674"/>
                <Item Name="bIsAutoLearn" Desc="Whether the tradeskill is automatically learned by the player at a certain level or not." Type="Boolean" Id="16675"/>
                <Item Name="bIsHarvesting" Desc="Whether the tradeskill is a harvesting tradeskill or not." Type="Boolean" Id="16676"/>
                <Item Name="bIsCircuitBoardCrafting" Desc="Whether the tradeskill&apos;s schematics use Circuit Board Crafting or not." Type="Boolean" Id="16677"/>
                <Item Name="bIsCoordinateCrafting" Desc="Whether the tradeskill&apos;s schematics use Coordinate Crafting or not." Type="Boolean" Id="16678"/>
                <Item Name="tXpTiers" Desc="An array that contains the amount of XP required to reach each tier of the tradeskill." Type="Integer" Array="true" Id="16679"/>
                <Item Name="tAxisNames" Desc="The names of the directions in the coordinate crafting grid for this tradeskill." Type="String" Array="true" Id="16680"/>
                <Item Name="bIsActive" Desc="Whether the player currently knows the tradeskill or not." Type="Boolean" Id="16681"/>
                <Item Name="nXP" Desc="The amount of XP the player has earned for this tradeskill." Type="Integer" Id="16682"/>
                <Item Name="eTier" Desc="The tier that the player has reached in the tradeskill." Type="CraftingLib.CodeEnumTradeskillTier" Id="16683"/>
                <Item Name="nXpForTier" Desc="The amount of XP the player has earned while in the current tier." Type="Integer" Id="16684"/>
                <Item Name="nXpForNextTier" Desc="The amount of XP the player needs to reach their next tradeskill tier." Type="Integer" Id="16685"/>
                <Item Name="nTalentPoints" Desc="The number of talent points the player has unlocked." Type="Integer" Id="16686"/>
                <Item Name="monRelearnCost" Desc="The amount and type of currency needed to relearn this tradeskill" Type="Money" Id="16687"/>
                <Item Name="nRelearnCooldownDays" Desc="The number of days until the player can relearn this tradeskill." Type="Integer" Id="16688"/>
                <Item Type="Table" Name="tTalentTiers" Desc="Information on each tier of talents for this tradeskill." Array="true" Id="16689">
                    <Item Type="Table" Desc="These tables have no name.  They are indexed by sequential numbers, starting at 1." Array="true" Id="16690">
                        <Item Name="nId" Desc="The id number of the talent." Type="Integer" Id="16691"/>
                        <Item Name="bIsActive" Desc="Whether the player has activated this talent or not." Type="Boolean" Id="16692"/>
                    </Item>
                    <Item Name="nId" Desc="The talent tier&apos;s id." Type="Integer" Id="16693"/>
                    <Item Name="nPointsNeeded" Desc="The number of talent points that are needed to unlock this tier of talents." Type="Integer" Id="16694"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="GetSchematicInfo" Id="3139" Desc="Gets information on a specific schematic." NotStandard="true" InternalNotes="A few depricated variables.">
            <Param Name="idSchematic" Desc="The id number of the schematic that the function will look at." Type="Integer" Id="16244"/>
            <Param Name="nMicrochipSockets" Desc="The number of sockets that the function should return information for.  This value defaults to 0." Type="Integer" Id="16245"/>
            <ReturnValue Type="Table" Id="16246" Desc="A table containing detailed information on the specified schematic, including information on any sub-schematics the schematic may have.">
                <Item Name="nSchematicId" Desc="The schematic&apos;s id number." Type="Integer" Id="16247"/>
                <Item Name="eTradeskillId" Desc="The id number of the tradeskill that uses the schematic." Type="CraftingLib.CodeEnumTradeskill" Id="16248"/>
                <Item Name="eTier" Desc="The tradeskill tier that the schematic belongs to." Type="CraftingLib.CodeEnumTradeskillTier" Id="16249"/>
                <Item Name="strName" Desc="The name of the item created by the schematic." Type="String" Id="16250"/>
                <Item Name="fVectorX" Desc="The x distance from the center of the coordinate crafting map that this schematic can be found.  This is only useful for sub-schematics." Type="Float" Id="16251"/>
                <Item Name="fVectorY" Desc="The y distance from the center of the coordinate crafting map that this schematic can be found.  This is only useful for sub-schematics." Type="Float" Id="16252"/>
                <Item Name="fRadius" Desc="The radius of the schematic on the coordinate crafting grid.  This is only useful for sub-schematics." Type="Float" Id="16607"/>
                <Item Name="fCritRadius" Desc="This variable is likely depricated." Type="Float" Id="16608"/>
                <Item Name="nParentSchematicId" Desc="The id number for this schematic&apos;s parent schematic.  This is only useful for sub-schematics." Type="Integer" Id="16609"/>
                <Item Name="itemOutput" Desc="The item that is made if this schematic is successfully crafted." Type="Item" Id="16610"/>
                <Item Name="achSource" Desc="The achievement (read Tech Tree node) that unlocks this schematic." Type="Achievement" Id="16611"/>
                <Item Name="achTier" Desc="If the schematic is automatically learned, this variable contains the achievement for the tradeskill tier that the schematic belongs to." Type="Achievement" Id="16612"/>
                <Item Name="nCraftXp" Desc="The amount of tradeskill XP the player gains when they successfully craft this schematic." Type="Integer" Id="16613"/>
                <Item Name="nFailXp" Desc="The amount of XP the player gains if their crafting attempt fails." Type="Integer" Id="16614"/>
                <Item Name="nLearnXp" Type="Integer" Id="16615"/>
                <Item Name="bIsKnown" Desc="Whether the player already knows the schematic or not." Type="Boolean" Id="16616"/>
                <Item Name="bIsOneUse" Desc="Whether the schematic is a one-time use schematic or not." Type="Boolean" Id="16617"/>
                <Item Name="bIsAutoCraft" Desc="Whether the schematic can be automatically crafted without doing coordinate / circuit board crafting." Type="Boolean" Id="16618"/>
                <Item Name="bIsAutoLearn" Desc="Whether the player automatically learns the schematic upon reaching the appropriate tradeskill tier or not." Type="Boolean" Id="16619"/>
                <Item Name="nCraftAtOnceMax" Desc="The number of times the player can craft the schematic in one attempt.  This variable is depricated." Type="Integer" Id="16620"/>
                <Item Type="Table" Name="tSockets" Desc="Information on each of the item&apos;s microchip sockets." Array="true" Id="16621">
                    <Item Name="eSocketType" Desc="The type of item that can be placed in this socket." Type="Item.CodeEnumMicrochipType" Id="16622"/>
                    <Item Name="nParent" Desc="The socket index of this socket&apos;s parent." Type="Integer" Id="16623"/>
                    <Item Name="fRatio" Desc="The power/waste ratio applied to microchips in this socket." Type="Float" Id="16624"/>
                    <Item Name="itemDefaultChip" Desc="The default microchip that is placed in this socket." Type="Item" Id="16625"/>
                    <Item Name="bIsChangeable" Desc="Whether the microchip in this socket can be changed out for another one." Type="Boolean" Id="16626"/>
                </Item>
                <Item Type="Table" Name="tMaterials" Desc="Information on the materials needed to craft this schematic." Array="true" Id="16627">
                    <Item Name="nAmount" Desc="The number of this particular item needed to craft this schematic." Type="Integer" Id="16628"/>
                    <Item Name="itemMaterial" Desc="An item needed to craft this schematic." Type="Item" Id="16629"/>
                </Item>
                <Item Name="nCreateCount" Desc="The number of items created when the player crafts the schematic." Type="Integer" Id="16630"/>
                <Item Name="itemCritResult" Desc="This variable is depricated." Type="Item" Id="16631"/>
                <Item Name="nCritCount" Desc="This variable is depricated." Type="Integer" Id="16632"/>
                <Item Name="nMaxAdditives" Desc="The number of additives that can be applied to the schematic per crafting attempt." Type="Integer" Id="16633"/>
                <Item Type="Table" Name="tSubRecipes" Desc="An array that contains info on each of the sub-schematics associated with this schematic." Array="true" Id="16634">
                    <Item Name="nSchematicId" Desc="The id number of the sub-schematic." Type="Integer" Id="16635"/>
                    <Item Name="strName" Desc="The name of this sub-schematic." Type="String" Id="16636"/>
                    <Item Name="bIsKnown" Desc="Whether the player has learned this sub-schematic or not." Type="Boolean" Id="16637"/>
                    <Item Name="fDiscoveryAngle" Desc="The angle of the starting edge of a discoverable area, in degrees.  " Type="Float" Id="16638"/>
                    <Item Name="fDiscoveryDistanceMin" Desc="The distance from the center of the coordinate crafting grid to the closest point in the discoverable area." Type="Float" Id="16639"/>
                    <Item Name="fDiscoveryDistanceMax" Desc="The distance from the center of the coordinate crafting grid to the furthest point in a discoverable area." Type="Float" Id="16640"/>
                    <Item Name="bIsUndiscovered" Desc="If the player has not discovered the sub-schematic, this will be true.  Otherwise, it will be false." Type="Boolean" Id="16641"/>
                    <Item Name="fVectorX" Desc="The sub-schematic&apos;s X position on the coordinate crafting grid." Type="Float" Id="16642"/>
                    <Item Name="fVectorY" Desc="The sub-schematic&apos;s Y position on the coordinate crafting grid." Type="Float" Id="16643"/>
                    <Item Name="fRadius" Desc="The radius of the sub schematic on the coordinate crafting grid." Type="Float" Id="16644"/>
                    <Item Name="fCritRadius" Desc="This value is depricated and no longer used." Type="Float" Id="16645"/>
                    <Item Name="itemOutput" Desc="The item created by the sub-schematic." Type="Item" Id="16646"/>
                    <Item Name="nCount" Desc="The number of items created by this sub schematic." Type="Integer" Id="16647"/>
                    <Item Name="itemCritResult" Desc="This variable is depricated and is no longer used." Type="Item" Id="16648"/>
                    <Item Name="nCritCount" Desc="This variable is depricated.  It currently matches the nCount variable." Type="Integer" Id="16649"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="GetModSchematicInfo" Id="3140" Deprecated="true" InternalNotes="Pretty sure this is depricated..." Desc="Gets information on the item&apos;s schematic and microchip sockets.">
            <ReturnValue Type="Table" Id="16198">
                <Item Name="nSchematicId" Desc="The schematic&apos;s id number." Type="Integer" Id="16199"/>
                <Item Name="eTradeskillId" Desc="The id number of the tradeskill that can make this schematic." Type="CraftingLib.CodeEnumTradeskill" Id="16200"/>
                <Item Name="strName" Desc="The name of the item made by this schematic." Type="String" Id="16201"/>
                <Item Type="Table" Name="tSockets" Desc="Information on each of the sockets in the schematic." Array="true" Id="16202">
                    <Item Name="eType" Desc="The type of microchip that can be slotted in this socket." Type="Item.CodeEnumMicrochipType" Id="16203"/>
                    <Item Name="nParent" Desc="The index of the socket that must be set before this one." Type="Integer" Id="16204"/>
                    <Item Name="fRatio" Desc="The modifier applied to the value of the microchip in this slot." Type="Float" Id="16205"/>
                    <Item Name="itemDefaultChip" Desc="The microchip that was set in this slot by the game." Type="Item" Id="16206"/>
                    <Item Name="itemCurrentChip" Desc="The microchip currently in this slot." Type="Item" Id="16207"/>
                    <Item Name="bIsChangeable" Desc="Whether the microchip set in this slot is locked or not." Type="Boolean" Id="16208"/>
                    <Item Name="nThreshold" Desc="The threshold value for this microchip slot." Type="Integer" Id="16209"/>
                </Item>
                <Item Name="itemOutput" Desc="The item that will be created by this schematic." Type="Item" Id="16210"/>
            </ReturnValue>
            <Param Name="itemCrafting" Desc="The item that the player is trying to craft." Type="Item" Id="16211"/>
        </Function>
        <Function Name="ValidateSocketItem" Id="3141" InternalNotes="Probably depricated.  We aren&apos;t using it anywhere.  I also don&apos;t think this is returning anything." NeedProofread="true" Deprecated="true" NotStandard="true">
            <Param Name="idSchematic" Desc="The id for the schematic that the socket belongs to." Type="Integer" Id="16751"/>
            <Param Name="nSocketIdx" Desc="The index of the socket that the function will validate." Type="Integer" Id="16752"/>
            <Param Name="idInventory" Desc="The id number for the inventory slot that this item is in." Type="Integer" Id="16753"/>
        </Function>
        <EnumSet Name="CodeEnumTradeskill" Id="3802" Desc="A list of the different tradeskills available to the player.  Augmentor, Farmer, and Fishing are not currently used.">
            <Enum Name="Runecrafting" Id="9996"/>
        </EnumSet>
        <EnumSet Name="CodeEnumTradeskillTier" Id="3815" Desc="These values represent the various tradeskill tiers.">
            <Enum Name="Zero" Id="9997"/>
            <Enum Name="Master" Id="9998"/>
            <Enum Name="GrandMaster" Id="9999"/>
        </EnumSet>
        <Function Name="LearnTradeskill" Id="3821" Desc="Grants the character the chosen tradeskill.  If the character is already at the maximum number of tradeskills allowed, this function also drops a chosen tradeskill." Example="Fires the Tradeskills_Learned event when successful.">
            <Param Name="eTradeskillId" Desc="The id of the Tradeskill that the player will learn." Type="CraftingLib.CodeEnumTradeskill" Id="4756"/>
            <Param Name="eDroppedTradeskillId" Desc="The id of the tradeskill that the player wants to drop in order to learn the new one." Type="CraftingLib.CodeEnumTradeskill" Id="4757"/>
            <ReturnValue Type="Integer" Desc="Returns 0 if the tradeskillId is not a valid tradeskill.  Otherwise, returns 1." Id="4758" Deleted="true"/>
        </Function>
        <Function Name="ForgetTradeskill" Id="3822" NotImplemented="true" Deprecated="true" Desc="This function has no code and does nothing."/>
        <Function Name="GetValidSocketItems" Id="3823" Deprecated="true" InternalNotes="This very well may be depricated and replaced by CraftingLib.GetAvailableMicrochips" Desc="Gets a list of microchips that are valid for a specific socket in a schematic.">
            <Param Name="idSchematic" Desc="The function will use the schematic with this id, in combination with the socket index, to get the list of valid items that can be added to the socket." Type="Integer" Id="16729"/>
            <Param Name="nSocketIdx" Desc="The function will get a list of items that can be added to this socket." Type="Integer" Id="16730"/>
            <ReturnValue Type="Table" Desc="A table that contains an array with every microchip in it." Id="16731">
                <Item Name="arSkill" Desc="An array that contains all the microchips available." Type="Item" Array="true" Id="16732"/>
            </ReturnValue>
        </Function>
        <Function Name="GetPreviewInfo" Id="3826" InternalNotes="Thresholds should not be 0 based.
Lots of depricated variables, but the function is not completely depricated." Desc="Gets information to draw a preview of the item that will be created by the specified schematic." NotStandard="true">
            <Param Name="idSchematic" Desc="The id number for the schematic that we want to preview." Type="Integer" Id="16212"/>
            <Param Name="tMicrochips" Desc="An array of item ids for each of the microchips placed in the item&apos;s sockets." Type="Integer" Array="true" Id="16213"/>
            <Param Name="tThresholds" Desc="An array of threshold numbers used for each socket.  These numbers are currently 0 based." Type="Integer" Array="true" Id="16214"/>
            <ReturnValue Type="Table" Id="16215" Desc="A table that contains info on the finished item, if it is crafted in its current state.">
                <Item Name="itemPreview" Desc="The item, if it was created in its current state." Type="Item" Id="16216"/>
                <Item Name="tSockets" Desc="Information on each of the item&apos;s sockets." Type="Table" Array="true" Id="16219">
                    <Item Name="nPower" Desc="The amount of power being used by this socket.  This value is currently depricated." Type="Integer" Id="16221"/>
                    <Item Name="nWaste" Desc="The amount of waste being generated by the microchip in this socket.  This value is currently depricated." Type="Integer" Id="16222"/>
                    <Item Name="fMultiplier" Desc="The multiplier applied to the amount of charge generated by this socket." Type="Float" Id="16223"/>
                    <Item Name="nCharge" Desc="The amount of charge being used by this socket." Type="Integer" Id="16224"/>
                    <Item Type="Table" Name="arProperties" Array="true" Desc="An array of properties that the item will grant the player when equipped." Id="16225">
                        <Item Name="nSortOrder" Desc="Where the property should end up in a list of sorted properties." Type="Integer" Id="16226"/>
                        <Item Name="eProperty" Desc="The property that is referenced in this table." Type="Unit.CodeEnumProperties" Id="16227"/>
                        <Item Name="nValue" Desc="The amount of the property that the item will grant the player." Type="Integer" Id="16228"/>
                        <Item Name="nDiff" Desc="The difference in value between the item the player currently has equipped and the previewed item." Type="Integer" Id="16229"/>
                        <Item Type="Table" Name="arDerived" Desc="The sub-properties that the player gains from this property." Array="true" Id="16230">
                            <Item Name="nSortOrder" Desc="Where the property will end up in a sorted list of properties." Type="Integer" Id="16231"/>
                            <Item Name="eProperty" Desc="The property being referenced in this table." Type="Unit.CodeEnumProperties" Id="16232"/>
                            <Item Name="nValue" Desc="The amount of the property that the player would gain by equipping this item." Type="Integer" Id="16233"/>
                            <Item Name="nDiff" Desc="The difference in value between the item the player currently has equipped and the previewed item." Type="Integer" Id="16234"/>
                        </Item>
                    </Item>
                </Item>
                <Item Name="fSchematicBonus" Desc="The bonus that the schematic gets from its sockets.  This variable is depricated." Type="Float" Id="16235"/>
            </ReturnValue>
        </Function>
        <Function Name="GetCurrentCraft" Id="3829" Desc="If the player has an unfinished crafting attempt, this function will return information on that craft.">
            <ReturnValue Type="Table" Desc="A table that contains information on the player&apos;s last crafting attempt.  The variables in the table will differ based on what type of schematic the player was attempting to craft." Id="16079">
                <Item Name="nSchematicId" Desc="The id number for the schematic that the player was trying to craft." Type="Itneger" Id="16080"/>
                <Item Name="nSchematicCount" Desc="The number of items created ty the schematic." Type="Integer" Id="16081"/>
                <Item Name="fVectorX" Desc="The X coordinate of the target marker for Coordinate Crafting.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Float" Id="16082"/>
                <Item Name="fVectorY" Desc="The Y coordinate of the target marker in Coordinate Crafting.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Float" Id="16083"/>
                <Item Name="nSubSchematicId" Desc="The id number of a sub schematic that the player has landed the target marker on.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Integer" Id="16084"/>
                <Item Name="nAdditiveCount" Desc="The number of additives that the player has used on the schematic so far.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Integer" Id="16085"/>
                <Item Name="tCatalysts" Desc="An array containing the catalyst items that the player has used on the schematic so far.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Item" Array="true" Id="16086"/>
                <Item Name="itemGlobalCatalyst" Desc="The global catalyst that the player used on the schematic.  This variable is only used if the schematic that is referenced uses Coordinate Crafting." Type="Item" Id="16087"/>
                <Item Type="Table" Name="tMicrochips" Desc="A table that contains a list of microchips that have been set in the schematic.  This variable is only used if the schematic that is referenced uses Circuit Board Crafting." Array="true" Id="16088">
                    <Item Name="itemChip" Desc="A microchip that was set in the schematic." Type="Item" Id="16089"/>
                </Item>
                <Item Name="nSlotIndex" Desc="The index of the Glyph Slot that will be rerolled.  This variable is only used if the the saved crafting attempt was a Glyph Slot Reroll." Type="Integer" Id="16090"/>
                <Item Name="itemSelected" Desc="The item that is having its glyphs rerolled.  This variable is only used if the the saved crafting attempt was a Glyph Slot Reroll." Type="Item" Id="16091"/>
                <Item Name="arSlotTypes" Desc="An array of Glyph Slot Types that the player is able to choose from when re-rolling the glyph slot.  This variable is only used if the the saved crafting attempt was a Glyph Slot Reroll." Type="Item.CodeEnumGlyphType" Array="true" Id="16092"/>
            </ReturnValue>
        </Function>
        <Function Name="AddAdditive" Id="3830" Desc="Attempts to add an additive to the current crafting attempt." Example="If the function is successful, the CraftingUpdateCurrent event will fire.  Otherwise, the client will show the appropriate error message.">
            <Param Name="itemAdditive" Desc="The additive that should be used for the current crafting session." Type="Item" Id="16038"/>
        </Function>
        <Function Name="CompleteCraft" Id="3831" NotStandard="true" InternalNotes="Thresholds should be allowed to be 1 based in Lua." Desc="Tells the client to complete the current schematic.  If this is called on a non-equipment based crafting schematic, no parameters are needed." Example="This function will fire the CraftingSchematicComplete event if it is successful.">
            <Param Type="Table" Name="tMicrochips" Desc="A table that contains Microchip items, indexed by the layout location they were placed in." Id="16039">
                <Item Desc="A microchip that was used in the schematic." Type="Item" Id="16040"/>
            </Param>
            <Param Name="tThresholds" Desc="A table that contains the threshold counter for each socket location.  These values need to be 0 based and are indexed by the socket location index." Type="Table" Id="16041">
                <Item Desc="The threshold index for the specified socket.  This index needs to be 0 based." Type="Integer" Id="16042"/>
            </Param>
        </Function>
        <Function Name="ShowTradeskillTutorial" Id="3832" Desc="Starts up the tutorial for tradeskills if tutorials are not disabled and the tutorial is not flagged as &quot;seen&quot;." Example="This will fire the ShowTutorial event if the player has not disabled tutorials and the tradeskill tutorial is not flagged as &quot;seen&quot;.  Otherwise, nothing will happen."/>
        <Function Name="GetAchievementCategoryForTier" Id="3833" Desc="Gets the achievement category id for the tradeskill tier&apos;s associated achievement.">
            <Param Name="eTradeskill" Desc="The tradeskill that the function will use to find the achievement category." Type="CraftingLib.CodeEnumTradeskill" Id="16046"/>
            <Param Name="eTier" Desc="The tier that the function will return the achievement category id for." Type="CraftingLib.CodeEnumTradeskillTier" Id="16047"/>
            <ReturnValue Type="Integer" Desc="The id number for the achievement category that the tradeskill tier belongs to." Id="16048"/>
        </Function>
        <Function Name="GetTierForAchievementCategory" Id="3834" Desc="Gets the tradeskill tier that matches the achievement category that is passed in.">
            <Param Name="idCategory" Desc="The id for the achievement category that the function will match to a tradeskill tier." Type="Integer" Id="16666"/>
            <ReturnValue Type="CraftingLib.CodeEnumTradeskillTier" Desc="The tier that corresponds with the achievement category that was passed in." Id="16667"/>
        </Function>
        <Function Name="GetSchematicCraftableCount" Id="6618" Desc="Gets the number of times a specified schematic can be crafted based on the items in the player&apos;s inventory, supply satchel, and bank.">
            <Param Name="idSchematic" Desc="The id number of the schematic." Type="Integer" Id="16242"/>
            <ReturnValue Type="Integer" Desc="The number of times the schematic can be created based on the items in the player&apos;s inventory, supply satchel, and bank." Id="16243"/>
        </Function>
        <Function Name="IsAtCraftingStation" Id="6620" Desc="Checks if the player is within range of a crafting station.">
            <ReturnValue Type="Boolean" Desc="Determines whether the player is within range of a crafting station or not." Id="16737"/>
        </Function>
        <Function Name="GetTradeskillTalents" Id="6621" Desc="Gets a list of all the talents for a particular tradeskill." Example="If bDebugPrint is set to true, each talent tier for the tradeskill will be listed in chat in sequential order.  The format for each line is:
&lt;Number of points needed to reach this talent tier&gt;: &lt;ID numbers for each talent in this tier&gt;

Numbers with a * next to it are tiers that the player has reached, or talents that they have selected, depending on what type of number it is next to.">
            <Param Name="eTradeskillId" Desc="The function will get the talents for the tradeskill with this ID." Type="CraftingLib.CodeEnumTradeskill" Id="16707"/>
            <Param Name="bDebugPrint" Desc="If this is set to true, then the player will see debug information in their chat log." Type="Boolean" Id="16708"/>
            <ReturnValue Type="Table" Desc="Information on each of the talent tiers for the tradeskill that was passed in to this function." Array="true" Id="16709">
                <Item Name="nPointsRequired" Desc="The number of points required to reach this talent tier." Type="Integer" Id="16710"/>
                <Item Type="Table" Name="tTalents" Desc="Information on each talent in this tier." Array="true" Id="16711">
                    <Item Name="nTalentId" Desc="The id number for the talent." Type="Integer" Id="16712"/>
                    <Item Name="bActive" Desc="Whether the player has activated this talent or not." Type="Boolean" Id="16713"/>
                    <Item Name="strIcon" Desc="The name of the icon that should be displayed for the talent." Type="String" Id="16714"/>
                    <Item Name="strName" Desc="The talent&apos;s name." Type="String" Id="16715"/>
                    <Item Name="strTooltip" Desc="The tooltip that should be displayed for the talent." Type="String" Id="16716"/>
                </Item>
            </ReturnValue>
        </Function>
        <Function Name="PickTradeskillTalent" Id="6622" Desc="Attempts to activate the specified talent." Example="If the talent is successfully activated, the TalentsChanged event will fire.

Note: Only one talent can be selected per tier.  If one is already selected in this tier, ">
            <Param Name="eTradeskillId" Desc="The id of the tradeskill that the talent belongs to." Type="CraftingLib.CodeEnumTradeskill" Id="16738"/>
            <Param Name="nTalentTier" Desc="The talent tier that the talent belongs to." Type="Integer" Id="16739"/>
            <Param Name="idTalent" Desc="The id number for the talent that was chosen." Type="Integer" Id="16740"/>
        </Function>
        <Function Name="ResetTradeskillTalents" Id="6623" Desc="Attempts to reset the talents that are set for the specified tradeskill." Example="No event is fired if this function is successful.  Instead, CraftingLib.GetTradeskillTalents should return a talent list where no talents are set.">
            <Param Name="eTradeskillId" Desc="The function will attempt to reset the talents of the tradeskill with this id." Type="CraftingLib.CodeEnumTradeskill" Id="16745"/>
        </Function>
        <Function Name="GetTradeskillTierXp" Id="6617" Desc="Gets the amount of XP required to reach a specific tradeskill tier.">
            <Param Name="eTradeskillId" Desc="The id number of the Tradeskill that this function query." Type="CraftingLib.CodeEnumTradeskill" Id="16717"/>
            <Param Name="eTradeskillTier" Desc="The function will return the XP amount required to reach this tier." Type="CraftingLib.CodeEnumTradeskillTier" Id="16718"/>
            <ReturnValue Type="Integer" Desc="The amount of XP required to reach the tradeskill / tier combination that was passed into the function." Id="16719"/>
        </Function>
        <Function Name="GetTradeskillTalentRespecCost" Id="5391" Desc="Gets the amount and type of currency needed to reset the tradeskill&apos;s talents.">
            <Param Name="eTradeskillId" Desc="The function will check the talent respec cost for this tradeskill." Type="CraftingLib.CodeEnumTradeskill" Id="16695"/>
            <ReturnValue Type="Money" Desc="The type and amount of currency needed to reset the tradeskill&apos;s talents." Id="16696"/>
        </Function>
        <Function Name="GetAvailableAdditives" Id="5392" Desc="Gets a list of the additives that are available for the specified schematic.">
            <Param Name="eTradeskill" Desc="The tradeskill that the schematic belongs to." Type="CraftingLib.CodeEnumTradeskill" Id="16052"/>
            <Param Name="idSchematic" Desc="The function will get the additives that can be used with the schematic with this id." Type="Integer" Id="16053"/>
            <ReturnValue Type="Item" Desc="An array of the different additives that can be used with the schematic." Array="true" Id="16054"/>
        </Function>
        <Function Name="GetAvailableCatalysts" Id="5393" Desc="Gets a list of the catalysts that are in the player&apos;s inventory and can be used with the specified schematic.">
            <Param Name="eTradeskill" Desc="The tradeskill that the schematic belongs to." Type="CraftingLib.CodeEnumTradeskill" Id="16055"/>
            <Param Name="idSchematic" Desc="The function will get a list of the catalysts that can be used with the schematic with this id." Type="Integer" Id="16056"/>
            <ReturnValue Type="Table" Desc="An array that contains both the catalyst items that can be used with the schematic and the number that the player has in their inventory." Array="true" Id="16057">
                <Item Name="nCount" Desc="The number of this catalyst that is in the player&apos;s inventory." Type="Integer" Id="16058"/>
                <Item Name="itemCatalyst" Desc="The catalyst that is in the player&apos;s inventory." Type="Item" Id="16059"/>
            </ReturnValue>
        </Function>
        <Function Name="GetRelearnCooldown" Id="5394" InternalNotes="May be depricated." Desc="Gets the amount of time (in milliseconds) before the player can swap their tradeskills.">
            <ReturnValue Type="Integer" Desc="The amount of time (in milliseconds) before the player can swap their tradeskills again." Id="16237"/>
        </Function>
        <Function Name="GetRelearnCost" Id="5395" Desc="The amount of currency the player will have to spend to swap one of their tradeskills with another.">
            <Param Name="eTradeskillId" Desc="The id of the tradeskill that the player wants to learn." Type="CraftingLib.CodeEnumTradeskill" Id="16240"/>
            <ReturnValue Type="Money" Desc="The price to swap tradeskills." Id="16241"/>
        </Function>
        <EnumSet Name="CodeEnumCraftingDiscoveryHotCold" Id="8639" Desc="A set of enums representing how close a player was to discovering a schematic while performing non-equipment based tradeskills.">
            <Enum Name="Cold" Id="8640"/>
            <Enum Name="Warm" Id="8641"/>
            <Enum Name="Hot" Id="8642"/>
            <Enum Name="Success" Id="8643"/>
        </EnumSet>
        <EnumSet Name="CodeEnumTradeskillResult" Id="8644" Desc="A list of possible outcomes for several tradeskill actions.">
            <Enum Name="Success" Id="8645"/>
            <Enum Name="InsufficentFund" Id="8646"/>
            <Enum Name="InvalidItem" Id="8647"/>
            <Enum Name="InvalidSlot" Id="8648"/>
            <Enum Name="MissingEngravingStation" Id="8649"/>
            <Enum Name="Unlocked" Id="8650"/>
            <Enum Name="UnknownError" Id="8651"/>
            <Enum Name="GlyphExists" Id="8652"/>
            <Enum Name="MissingGlyph" Id="8653"/>
            <Enum Name="DuplicateGlyph" Id="8654"/>
            <Enum Name="AttemptFailed" Id="8655"/>
            <Enum Name="GlyphSlotLimit" Id="8656"/>
            <Enum Name="RuneExists" Id="16462"/>
            <Enum Name="MissingRune" Id="16463"/>
            <Enum Name="DuplicateRune" Id="16464"/>
            <Enum Name="RuneSlotLimit" Id="16465"/>
        </EnumSet>
        <Function Name="AddRuneSlot" Id="10000" InternalNotes="Need to figure out what event is fired if this is successful." NeedProofread="true" Desc="Attempts to add a rune slot to an item.">
            <Param Name="nNewSlotCount" Desc="The number of rune slots on the item after adding a new one." Type="Integer" Id="16063"/>
        </Function>
        <Function Name="GetItemsWithRuneSlots" Id="10003" Desc="Gets a list of each item with rune slots that the player owns." Remarks="If neither variable that is passed in is set to true, the list of items will be empty.">
            <Param Name="bIncludeEquipped" Desc="Whether items that the player has equipped should be included in the list or not." Type="Boolean" Id="16720"/>
            <Param Name="bIncludeBags" Desc="Whether items that are in the player&apos;s bags should be included in the list or not." Type="Boolean" Id="16721"/>
            <ReturnValue Type="Item" Desc="An array of items that have rune slots and are in the specified locations." Array="true" Id="16722"/>
        </Function>
        <Function Name="GetAvailableProperties" Id="10004" Desc="Gets a list of properties that the player can set microchips for on the schematic.">
            <Param Name="idSchematic" Desc="The function will return the properties that are available for the schematic with the specified id." Type="Integer" Id="16076"/>
            <Param Name="idPowerCore" Desc="The item id for the power core that is set for the schematic.  This defaults to 0 if this value is not passed in." Type="Integer" Id="16077"/>
            <ReturnValue Type="Unit.CodeEnumProperties" Desc="A table of property ids that can be set for the specified schematic." Array="true" Id="16078"/>
        </Function>
        <Function Name="GetAvailableMicrochips" Id="10005" Desc="Gets a list of the microchips that can be used with the specified schematic.">
            <Param Name="idSchematic" Desc="The schematic that the function will poll for the microchips that can be used." Type="Integer" Id="16060"/>
            <Param Name="eUnitProperty" Type="Unit.CodeEnumProperties" Id="16061" Desc="The microchips that are returned all share this property."/>
            <Param Name="nOffset" Desc="The starting index of the returned table." Type="Integer" Id="16070"/>
            <Param Name="nCount" Desc="The number of entries in the table that is returned by the function.  This value defaults to 1 if none is passed in." Type="Integer" Id="16071"/>
            <Param Name="nPowerCoreId" Desc="The item id of the power core that is slotted for the recipe.  This will affect the microchips that are returned.  If no value is passed in, it defaults to 0." Type="Integer" Id="16072"/>
            <ReturnValue Type="Item" Desc="A table that contains a list of microchips that are available for the schematic." Array="true" Id="16073"/>
        </Function>
        <Function Name="GetAvailablePowerCores" Id="10006" Desc="Gets a list of power cores that can be used with the specified schematic.">
            <Param Name="idSchematic" Desc="The function will return a list of power cores that are compatable with the schematic with this id." Type="Integer" Id="16074"/>
            <ReturnValue Type="Item" Desc="A table that contains the item information for power cores that can be used for the specified schematic." Array="true" Id="16075"/>
        </Function>
        <Function Name="GetPropertyChipType" Id="10007" InternalNotes="This doesn&apos;t appear to be called anywhere in our addons.  Probably depricated." Deprecated="true"/>
        <Function Name="ClearRuneSlot" Id="10010" InternalNotes="Need to figure out what event is fired as a response." NeedProofread="true" Desc="Attempts to remove the rune in the specified rune slot.">
            <Param Name="nSlotIdx" Desc="The index of the rune slot that the function will attempt to clear." Type="Integer" Id="16065"/>
        </Function>
        <Function Name="GetCurrentOverchargeInfo" Id="10012" Desc="Gets information on the current overcharge and various overcharge limits of the current Circuit Board schematic.">
            <ReturnValue Type="Table" Desc="A table that contains information on all things overcharge related to the current schematic." Id="16103">
                <Item Name="arMultipliers" Desc="The property multipliers used for each microchip where the player matched the color of the chip with the slot." Type="Float" Array="true" Id="16104"/>
                <Item Name="fOverchargeCompleteSuccess" Desc="The maximum amount of overcharge where the chance of success is 100%." Type="Float" Id="16105"/>
                <Item Name="fOverchargeCompleteFailure" Desc="The amount of overcharge where the chance to fail will reach 100%." Type="Float" Id="16106"/>
                <Item Name="fCraftingOvercharge" Desc="The current amount of overcharge for the schematic." Type="Float" Id="16107"/>
                <Item Name="fOverchargeAllowable" Desc="The maximum amount of overcharge that is allowed for the schematic." Type="Float" Id="16108"/>
                <Item Name="fCraftingFailChance" Desc="The chance that the crafting attempt will fail with the current amount of overcharge." Type="Float" Id="16109"/>
                <Item Name="fFailureAtAllowable" Desc="The failure chance when the maximum amount of overcharge is set for the schematic." Type="Float" Id="16110"/>
            </ReturnValue>
            <Param Name="arMicrochipIds" Desc="An array that contains the item ids of each microchip set in the schematic." Type="Integer" Array="true" Id="16111"/>
            <Param Name="arThresholds" Desc="An array that contains the thresholds used for each microchip slot." Type="Integer" Array="true" Id="16112"/>
        </Function>
        <Function Name="GetEngravingInfo" Id="10013" Desc="Gets information on adding, clearing, rerolling, and unlocking Rune Slots in an item.">
            <Param Name="itemSource" Desc="The item that the function will query for information on its Rune Slots." Type="Item" Id="16162"/>
            <ReturnValue Type="Table" Desc="A table that contains information on the requirements to modify an item&apos;s Rune Slots." Id="16163">
                <Item Name="tAddInfo" Desc="Information on adding Rune Slots to the item." Type="Table" Id="16164">
                    <Item Name="itemReagent" Desc="The reagent required to add a Rune Slot to the item." Type="Item" Id="16165"/>
                    <Item Name="nReagentCount" Desc="The number of the reagent that the player has in their inventory and bank." Type="Integer" Id="16166"/>
                    <Item Name="nMaximumSigils" Desc="The maximum number of Rune Slots the item can have." Type="Integer" Id="16167"/>
                    <Item Type="Table" Name="tCost" Desc="The cost of adding a Rune Slot." Id="16168">
                        <Item Name="nReagents" Desc="The number of reagents required for this item." Type="Integer" Id="16169"/>
                        <Item Name="monCost" Desc="The amount and type of currency required for this item." Type="Money" Id="16170"/>
                    </Item>
                    <Item Name="nSuccessChance" Desc="The percentage chance that the Rune Slot will be added to the item." Type="Float" Id="16171"/>
                </Item>
                <Item Type="Table" Name="tClearInfo" Desc="Information on clearing a Rune from a Rune Slot." Id="16172">
                    <Item Name="itemReagent" Desc="The item needed to clear the Rune Slot." Type="Item" Id="16173"/>
                    <Item Name="nReagentCount" Desc="The number of reagents that the player has in their inventory and bank." Type="Integer" Id="16174"/>
                    <Item Type="Table" Name="arCosts" Desc="An array that contains the cost to clear each of the item&apos;s Rune Slots." Id="16175">
                        <Item Name="nReagents" Desc="The number of reagents required to clear the Rune Slot." Type="Integer" Id="16176"/>
                        <Item Name="monCost" Desc="The amount and type of currency needed to clear the Rune Slot." Type="Money" Id="16177"/>
                    </Item>
                </Item>
                <Item Name="tRerollInfo" Desc="Information on rerolling a Rune Slot on the item." Type="Table" Id="16178">
                    <Item Name="itemReagent" Desc="The reagent required to reroll the Rune Slot." Type="Item" Id="16179"/>
                    <Item Name="nReagentCount" Desc="The number of reagents the player has in their inventory and bank." Type="Integer" Id="16180"/>
                    <Item Type="Table" Name="arCosts" Desc="The cost to reroll each Rune Slot on the item." Id="16181">
                        <Item Name="nReagents" Desc="The number of reagents required to reroll the Rune Slot." Type="Integer" Id="16182"/>
                        <Item Name="monCost" Desc="The amount and type of currency required to reroll the Rune Slot." Type="Money" Id="16183"/>
                        <Item Name="nSuccessChance" Desc="The percentage chance that the reroll attempt will succeed." Type="Float" Id="16184"/>
                    </Item>
                </Item>
                <Item Name="tUnlockInfo" Desc="Information on unlocking the item&apos;s Rune Slots." Type="Table" Id="16185">
                    <Item Type="Table" Name="tCost" Desc="The cost to unlock Rune Slots on this item." Id="16186">
                        <Item Name="monCost" Desc="The amount and type of currency required to unlock a Rune Slot." Type="Money" Id="16187"/>
                    </Item>
                    <Item Name="nSuccessChance" Desc="The percentage chance that the unlock attempt will be successful." Type="Float" Id="16188"/>
                </Item>
            </ReturnValue>
        </Function>
        <EnumSet Name="CodeEnumCraftingDirection" Id="10014" Desc="A list of directions used when performing non-equipment based tradeskills.">
            <Enum Name="None" Id="10015"/>
            <Enum Name="N" Id="10016"/>
            <Enum Name="NE" Id="10017"/>
            <Enum Name="E" Id="10018"/>
            <Enum Name="SE" Id="10019"/>
            <Enum Name="S" Id="10020"/>
            <Enum Name="SW" Id="10021"/>
            <Enum Name="W" Id="10022"/>
            <Enum Name="NW" Id="10023"/>
        </EnumSet>
        <Function Name="RerollRuneSlot" Id="16466" Desc="Attempts to change a rune slot to a different type." Example="If this function is successful, the ItemModified event will fire.">
            <Param Name="itemSource" Desc="The item that contains the rune slot that the function will attempt to reroll." Type="Item" Id="16741"/>
            <Param Name="nSlotIdx" Desc="The index of the rune slot that the function will attempt to reroll." Type="Integer" Id="16742"/>
        </Function>
        <Function Name="CompleteRerollRuneType" Incomplete="true" Id="16467"/>
        <Function Name="GetValidRuneItems" Id="16468" Desc="Gets a list of all of the valid runes for a specific rune slot.  This list filters based on slot type and removes duplicate runes.">
            <Param Name="itemSelected" Desc="The function will return the valid runes for this item." Type="Item" Id="16726"/>
            <Param Name="nSlot" Desc="The function will return all of the valid runes for the rune slot at this index." Type="Integer" Id="16727"/>
            <ReturnValue Type="Item" Desc="An array of runes that can be set to the specified rune slot." Array="true" Id="16728"/>
        </Function>
        <Function Name="GetItemsWithRuneSlots" Incomplete="true" Id="16469"/>
        <Function Name="UnlockRuneSlot" Id="16470" Desc="Attempts to unlock a rune slot on an item." Example="Fires the ItemModified event if the slot is successfully unlocked.">
            <Param Name="itemSource" Desc="The function will attempt to unlock a rune slot that belongs to this item." Type="Item" Id="16746"/>
            <Param Name="nSlotIdx" Desc="The index of the rune slot that the function will attempt to unlock." Type="Integer" Id="16747"/>
        </Function>
        <Function Name="InstallRuneIntoSlot" Id="16471" Desc="Attempts to update the runes that should be installed on an item." Example="If the operation is successful, the ItemModified event should fire.">
            <Param Name="itemSource" Desc="The item that the rune will be installed in." Type="Item" Id="16735"/>
            <Param Name="tInstalledRunes" Desc="An array of item ids for runes that should be installed on the item after the operation is complete." Type="Integer" Array="true" Id="16736"/>
        </Function>
        <Function Name="IsAtEngravingStation" Incomplete="true" Id="17128"/>
        <Function Name="RequestSchematic" Incomplete="true" Id="2673" Deleted="true"/>
        <Function Name="RequestSchematicList" Incomplete="true" Id="2674" Deleted="true"/>
        <Function Name="GetSchematic" Incomplete="true" Id="2675" Deleted="true"/>
        <Function Name="PreviewItem" Incomplete="true" Id="2677" Deleted="true"/>
        <Function Name="GetMicrochips" Incomplete="true" Id="2679" Deleted="true"/>
        <Function Name="GetProfessionLevelInfo" Incomplete="true" Id="2680" Deleted="true"/>
        <Function Name="GetProfessionLevel" Incomplete="true" Id="2681" Deleted="true"/>
        <Function Name="GetProfessionXP" Incomplete="true" Id="2682" Deleted="true"/>
        <Function Name="GetProfessionXPAtLevel" Incomplete="true" Id="2683" Deleted="true"/>
        <Function Name="GetProfessionXPForLevel" Incomplete="true" Id="2684" Deleted="true"/>
        <Function Name="GetProfessionXPForNextLevel" Incomplete="true" Id="2685" Deleted="true"/>
        <Function Name="ValidateSocketModItem" Incomplete="true" Id="3142" Deleted="true"/>
        <Function Name="ModItem" Incomplete="true" Id="3143" Deleted="true"/>
        <Function Name="SalvageChip" Incomplete="true" Id="3144" Deleted="true"/>
        <Function Name="GetPreviewItem" Incomplete="true" Id="3145" Deleted="true"/>
        <Function Name="GetPreviewModItem" Incomplete="true" Id="3146" Deleted="true"/>
        <Function Name="GetValidSocketModItems" Incomplete="true" Id="3824" Deleted="true"/>
        <Function Name="ExtractChip" Incomplete="true" Id="3825" Deleted="true"/>
        <Function Name="GetPreviewModInfo" Incomplete="true" Id="3827" Deleted="true"/>
        <Function Name="GetProficiencies" Incomplete="true" Id="3828" Deleted="true"/>
        <Function Name="BotchCraft" Incomplete="true" Id="6619" Deleted="true"/>
        <Function Name="AddCatalyst" Incomplete="true" Id="5390" Deleted="true"/>
    </Library>
    <Library Name="CSIsLib" Id="2686" Desc="Allows the UI to interact with Client Side Interaction minigames, such as patern matching and timed clicking.">
        <Function Name="GetActiveCSI" Id="2687" Desc="Gets a table containing information on the active CSI.  Returns nil if there is no active CSI.">
            <ReturnValue Type="Table" Desc="A table containing information on the current Client Side Interaction.  " Id="6456">
                <Item Name="eType" Desc="The type of CSI that is active." Type="CSIsLib.ClientSideInteractionType" Id="6457"/>
                <Item Name="strContext" Desc="A string containing the text that should be displayed for the current CSI." Type="String" Id="6458"/>
                <Item Name="nThreshold" Desc="The number of misses allowed for this CSI before the user fails.  This variable only exists for Metronome CSIs." Type="Integer" Id="6459"/>
            </ReturnValue>
        </Function>
        <Function Name="StartActiveCSI" Id="2688" Desc="Starts the currently active CSI."/>
        <Function Name="CancelActiveCSI" Id="2689" Desc="Stops the current Client Side Interaction"/>
        <Function Name="IsCSIRunning" Id="2690" Desc="Determines if the active CSI has been started.">
            <ReturnValue Type="Boolean" Id="6469" Desc="Whether the active CSI is running or not."/>
        </Function>
        <Function Name="CSIProcessInteraction" Id="2691" Desc="Processes the user&apos;s input for the Client Side Interaction.  Different types of Client Side Interactions behave differently" Example="Functionality per CSI type:
Precision: 
Button Down: Informs the CSI of a button click.
Button Up: Nothing

Metronome: 
Button Down: Informs the CSI of a button click
ButtonUp: Nothing

Rapid Tap:
Button Down: Starts the CSI if it wasn&apos;t already running.  Informs the CSI of a button click.
Button Up: Nothing

Press and Hold: 
Button Down: Starts the CSI if it wasn&apos;t already running.  Tells the CSI that the button is being held.
Button Up: Tells the CSI that the button isn&apos;t being held.

Yes/No: 
ButtonDown: Treats the CSI as if the player clicked &quot;Yes&quot;
ButtonUp: Treats the CSI as if the player clicked &quot;No&quot;
"/>
        <Function Name="GetTimeRemainingForActiveCSI" Id="3836" Desc="Gets the time remaining before the user fails the current CSI."/>
        <EnumSet Name="ClientSideInteractionType" Incomplete="true" Desc="An enumeration identifying the different types of Client Side Interactions" Id="6460" Deleted="true"/>
    </Library>
    <Library Name="DatacubeLib" Id="2692" Desc="A library that allows the player to interact with and get information on Datacubes, Journals, and Tales from Beyond the Fringe entries">
        <Function Name="IsDatacubeComplete" Id="2693" Desc="Determines if an entry is complete.  This generally means whether the player has found all of the unlocks / sub-entries for the specified entry.">
            <Param Name="idDatacube" Desc="The id for the entry that the function will check." Type="Integer" Id="16915"/>
            <ReturnValue Type="Boolean" Desc="Whether the player has interacted with each of the entry&apos;s unlocks / sub-entries or not." Id="16916"/>
        </Function>
        <Function Name="GetVolumes" Id="2695" Desc="Gets a info on each journal entry that the player has unlocked at least one entry for.">
            <ReturnValue Type="Table" Desc="Information on each journal entry that the player has unlocked at least one entry for." Array="true" Id="16899">
                <Item Name="nDatacubeId" Desc="The journal&apos;s id number." Type="Integer" Id="16900"/>
                <Item Name="strTitle" Desc="The journal&apos;s title." Type="String" Id="16901"/>
                <Item Name="strAsset" Desc="The name of the asset associated with this journal entry." Type="String" Id="16902"/>
                <Item Name="bIsComplete" Desc="Whether the player has unlocked all of the journal&apos;s sub-entries or not." Type="Boolean" Id="16903"/>
                <Item Name="nNumCompleted" Desc="The number of the journal&apos;s sub-entries that the player has unlocked." Type="Integer" Id="16904"/>
                <Item Name="nNumTotal" Desc="The number of sub-entries that the player needs to unlock to complete the journal." Type="Integer" Id="16905"/>
            </ReturnValue>
        </Function>
        <Function Name="GetLastUpdatedDatacube" Id="2696" Desc="Gets the information for the last datacube entry that was updated for the player.">
            <ReturnValue Type="Table" Id="16850" Desc="Information on the player&apos;s most recently updated datacube entry.">
                <Item Name="nDatacubeId" Desc="The entry&apos;s id number." Type="Integer" Id="16851"/>
                <Item Name="eDatacubeType" Desc="The type of  entry.  This value corresponds with the DatacubeLib.DatacubeType set of constants." Type="Integer" Id="16852"/>
                <Item Name="nWorldZoneId" Desc="The id of the zone that this entry is associated with." Type="Integer" Id="16853"/>
                <Item Name="strZoneName" Desc="The name of the zone that this journal is associated with." Type="String" Id="16854"/>
                <Item Name="nVolumeId" Desc="The id of the journal that this entry belongs to, if any." Type="Integer" Id="16855"/>
                <Item Name="strText" Desc="The entry&apos;s text." Type="String" Id="16856"/>
                <Item Name="bIsComplete" Desc="Whether the entry has been unlocked or not." Type="Boolean" Id="16857"/>
                <Item Name="bHasSound" Desc="Whether the entry has a sound associated with it or not." Type="Boolean" Id="16858"/>
                <Item Name="strTitle" Desc="The entry&apos;s title." Type="String" Id="16859"/>
                <Item Name="nNumCompleted" Desc="The number of unlocks the player has found for this entry.  This variable only applies to Chronicle type entries." Type="Integer" Id="16860"/>
                <Item Name="nNumTotal" Desc="The total number of unlocks needed to finish the entry.  This variable only applies to Chronicle type entries." Type="Integer" Id="16861"/>
                <Item Name="strAsset" Desc="The sprite used for the entry when it is completed.  This variable only applies to Chronicle type entries." Type="String" Id="16862"/>
            </ReturnValue>
        </Function>
        <Function Name="GetDatacubesForZone" Id="2697" NotStandard="true" InternalNotes="Need enum for DatacubeType.
" Desc="Gets a list of datacube entries that are found in a specific zone.">
            <Param Name="idZone" Desc="The function will return the datacube entries found in the zone with this id." Type="Integer" Id="16828"/>
            <ReturnValue Type="Table" Desc="An array of tables that contain information on each datacube entry in the specified zone." Array="true" Id="16829">
                <Item Name="nDatacubeId" Desc="The id number for the entry." Type="Integer" Id="16830"/>
                <Item Name="eDatacubeType" Desc="The type associated with the datacube.  This value corresponds with the DatacubeLib.DatacubeType set of constants." Type="Integer" Id="16831"/>
                <Item Name="nWorldZoneId" Desc="The id for the world zone that the datacube entry is associated with." Type="Integer" Id="16832"/>
                <Item Name="strZoneName" Desc="The name of the zone that the datacube entry is unlocked in." Type="String" Id="16833"/>
                <Item Name="strText" Desc="The datacube entry&apos;s text." Type="String" Id="16835"/>
                <Item Name="bIsComplete" Desc="Whether the entry is completed or not." Type="Boolean" Id="16836"/>
                <Item Name="bHasSound" Desc="Whether the entry has a sound attached to it." Type="Boolean" Id="16837"/>
                <Item Name="strTitle" Desc="The entry&apos;s title." Type="String" Id="16838"/>
                <Item Name="nNumCompleted" Desc="The number of unlocks that have been found for the entry.  This only applies to Chronicle type entries." Type="Integer" Id="16839"/>
                <Item Name="nNumTotal" Desc="The number of unlocks required to complete the entry.  This only exist for Chronicle type entries." Type="Integer" Id="16840"/>
                <Item Name="strAsset" Desc="The file name for the sprite shown in the completed entry.  This only applies to Chronicle type entries." Type="String" Id="16841"/>
            </ReturnValue>
        </Function>
        <Function Name="GetDatacubesForVolume" Id="2698" InternalNotes="Needs enum for DatacubeType." Desc="Gets a list of datacube sub-entries for a journal." NotStandard="true">
            <Param Name="idJournal" Desc="The id number for the journal entry that the results belong to." Type="Integer" Id="16817"/>
            <ReturnValue Type="Table" Array="true" Desc="An array of tables that contain information on each sub-entry associated with the specified journal." Id="16818">
                <Item Name="nDatacubeId" Desc="The entry&apos;s id number." Type="Integer" Id="16819"/>
                <Item Name="eDatacubeType" Desc="This value lines up with the DatacubeLib.DatacubeType_ set of contstants." Type="Integer" Id="16820"/>
                <Item Name="nWorldZoneId" Desc="The id of the world zone that the entry belongs to." Type="Integer" Id="16821"/>
                <Item Name="strZoneName" Desc="The name of the zone that the entry belongs to." Type="String" Id="16822"/>
                <Item Name="nVolumeId" Desc="The id number of the parent journal entry." Type="Integer" Id="16823"/>
                <Item Name="strText" Desc="The entry&apos;s text." Type="String" Id="16824"/>
                <Item Name="bIsComplete" Desc="Whether the entry has been unlocked or not." Type="Boolean" Id="16825"/>
                <Item Name="bHasSound" Desc="Whether the entry has a sound file associated with it or not." Type="Boolean" Id="16826"/>
                <Item Name="strTitle" Desc="The entry&apos;s title." Type="String" Id="16827"/>
            </ReturnValue>
        </Function>
        <Function Name="GetZonesWithDatacubes" Id="2699" Desc="Gets a list of each zone that has a Datacube entry.">
            <ReturnValue Type="Table" Desc="The id number and name of each zone that has a Datacube entry associated with it." Array="true" Id="16906">
                <Item Name="nZoneId" Desc="The zone&apos;s id number." Type="Integer" Id="16907"/>
                <Item Name="strName" Desc="The zone&apos;s name." Type="String" Id="16908"/>
            </ReturnValue>
        </Function>
        <Function Name="PlayDatacubeSound" Id="2700" Desc="Plays the sound associated with the entry.">
            <Param Name="idDatacube" Desc="The function will cause the entry with this id to play its sound." Type="Integer" Id="16917"/>
        </Function>
        <Function Name="StopDatacubeSound" Id="2701" Desc="Stops the sound associated with a specific entry.">
            <Param Name="idDatacube" Desc="The function will stop the sound associated with the datacube with this id." Type="Integer" Id="16918"/>
        </Function>
        <Function Name="GetTotalCollectionSize" Id="3147" Desc="Gets the total number of entries that the player has made progress on of a specific type.">
            <Param Name="eDatacubeType" Desc="The function will return the number of entries that the player knows about of this type. This value corresponds with the DatacubeLib.DatacubeType set of constants." Type="Integer" Id="16889"/>
            <ReturnValue Type="Integer" Desc="The number of entries of a specific type that the player has made progress on." Id="16890"/>
        </Function>
        <Function Name="GetTotalVolumeCount" Incomplete="true" Id="3148" Desc="Gets the number of journal entries within a specific zone." Example="This will only count top level journal entries, not sub-entries for each journal.">
            <Param Name="idZone" Desc="The id of the zone that the function will look through." Type="Integer" Id="16897"/>
            <ReturnValue Type="Integer" Desc="The number of journal entries within the specified zone." Id="16898"/>
        </Function>
        <Function Name="GetJournalsForZone" Id="3837" Desc="Gets a list of all the journal entries within a zone.">
            <Param Name="idZone" Desc="The function will return the journal entries found in this zone." Type="Integer" Id="16842"/>
            <ReturnValue Type="Table" Desc="An array of tables that contain information on all of the journal entries within the zone." Array="true" Id="16843">
                <Item Name="nDatacubeId" Desc="The journal&apos;s id number." Type="Integer" Id="16844"/>
                <Item Name="strTitle" Desc="The journal&apos;s title." Type="String" Id="16845"/>
                <Item Name="strAsset" Desc="The sprite associated with the journal." Type="String" Id="16846"/>
                <Item Name="bIsComplete" Desc="Whether the player has unlocked all of the sub-entries for the journal or not." Type="Boolean" Id="16847"/>
                <Item Name="nNumCompleted" Desc="The number of sub-entries that the player has unlocked for this journal." Type="Integer" Id="16848"/>
                <Item Name="nNumTotal" Desc="The total number of sub-entries for the journal." Type="Integer" Id="16849"/>
            </ReturnValue>
        </Function>
        <Function Name="GetTalesForZone" Id="3838" Desc="Gets a list of all of the Tales entries that the player has made progress on within a specific zone.">
            <Param Name="idZone" Desc="The function will get a list of Tales that are associated with the zone with this id." Type="Integer" Id="16875"/>
            <ReturnValue Type="Table" Desc="Information on each of the Tales entries that the player has unlocked at least one entry for in the specified zone." Array="true" Id="16876">
                <Item Name="nDatacubeId" Desc="The entry&apos;s id number." Type="Integer" Id="16877"/>
                <Item Name="eDatacubeType" Desc="The entry&apos;s type.  This value should always be DatacubeLib.DatacubeType_Chronicle for this entry." Type="Integer" Id="16878"/>
                <Item Name="nWorldZoneId" Desc="The id of the zone that is associated with this entry." Type="Integer" Id="16879"/>
                <Item Name="strZoneName" Desc="The name of the zone that the entry is associated with." Type="String" Id="16880"/>
                <Item Name="nVolumeId" Desc="The id of the journal entry that serves as this entry&apos;s parent.  This value should always be 0 for this entry." Type="Integer" Id="16881"/>
                <Item Name="strText" Desc="The entry&apos;s text." Type="String" Id="16882"/>
                <Item Name="bIsComplete" Desc="Whether the player has interacted with all of the unlocks for this entry or not." Type="Boolean" Id="16883"/>
                <Item Name="bHasSound" Desc="Whether the entry has a sound associated with it or not." Type="Boolean" Id="16884"/>
                <Item Name="strTitle" Desc="The entry&apos;s title." Type="String" Id="16885"/>
                <Item Name="nNumCompleted" Desc="The number of this entry&apos;s unlocks that the player has activated." Type="Integer" Id="16886"/>
                <Item Name="nNumTotal" Desc="The number of unlocks needed to complete this Tales entry." Type="Integer" Id="16887"/>
                <Item Name="strAsset" Desc="The sprite that should be shown when this entry is complete." Type="String" Id="16888"/>
            </ReturnValue>
        </Function>
        <Function Name="GetTales" Id="3839" Desc="Gets information on all the Tales from Beyond the Fringe entries that the player has unlocked at least one part of.">
            <ReturnValue Type="Table" Id="16863" Desc="Information on each Tales entry that the player has made progress on.">
                <Item Name="nDatacubeId" Desc="The id number for the entry." Type="Integer" Id="16864"/>
                <Item Name="eDatacubeType" Desc="The entry&apos;s type.  This should be DatacubeLib.DatacubeType_Chronicle for every entry returned by this function." Type="Integer" Id="16865"/>
                <Item Name="nWorldZoneId" Desc="The id of the zone that the entry is associated with." Type="Integer" Id="16866"/>
                <Item Name="strZoneName" Desc="The name of the zone that the entry is associated with." Type="String" Id="16867"/>
                <Item Name="nVolumeId" Desc="The id of the entry&apos;s parent journal entry.  This value will be 0 if it has none." Type="Integer" Id="16868"/>
                <Item Name="strText" Desc="The entry&apos;s text." Type="String" Id="16869"/>
                <Item Name="bIsComplete" Desc="Whether the player has found all of the unlocks for this Tales entry or not." Type="Boolean" Id="16870"/>
                <Item Name="bHasSound" Desc="Whether the entry has sound or not." Type="Boolean" Id="16871"/>
                <Item Name="nNumCompleted" Desc="The number of unlocks the player has found for this entry." Type="Integer" Id="16872"/>
                <Item Name="nNumTotal" Desc="The number of unlocks needed to complete this entry." Type="Integer" Id="16873"/>
                <Item Name="strAsset" Desc="The sprite displayed when the entry is completed." Type="String" Id="16874"/>
            </ReturnValue>
        </Function>
        <Function Name="GetZonesWithJournals" Id="3840" Desc="Gets a list of each zone that has a journal entry associated with it.">
            <ReturnValue Type="Table" Desc="The id number and name of each zone that has a journal entry associated with it." Array="true" Id="16909">
                <Item Name="nZoneId" Desc="The zone&apos;s id number." Type="Integer" Id="16910"/>
                <Item Name="strName" Desc="The zone&apos;s name." Type="String" Id="16911"/>
            </ReturnValue>
        </Function>
        <Function Name="GetZonesWithTales" Id="3841" Desc="Gets a list of each zone with a Tales entry associated with it.">
            <ReturnValue Type="Table" Desc="A list with the id and name of each zone that has a Tales entry associated with it." Id="16912">
                <Item Name="nZoneId" Desc="The zone&apos;s id." Type="Integer" Id="16913"/>
                <Item Name="strName" Desc="The zone&apos;s name." Type="String" Id="16914"/>
            </ReturnValue>
        </Function>
        <Function Name="GetTotalDatacubesForZone" Id="8163" Desc="Gets the number of entries within a zone that have the Datacube type.">
            <Param Name="idZone" Desc="The function will get the number of Datacube entries in the zone with this id." Type="Integer" Id="16891"/>
            <ReturnValue Type="Integer" Desc="The number of datacube entries in the specified zone." Id="16892"/>
        </Function>
        <Function Name="GetTotalJournalsForZone" Id="8164" Desc="Gets the number of journal entries within a specific zone.">
            <Param Name="idZone" Desc="The function will get the number of journal entries in the zone with this id." Type="Integer" Id="16893"/>
            <ReturnValue Type="Integer" Desc="The number of journal entries found in the specified zone." Id="16894"/>
        </Function>
        <Function Name="GetTotalTalesForZone" Id="8165" Desc="Gets the number of Tales entries in a specific zone.">
            <Param Name="idZone" Desc="The function will get the number of Tales in the zone with this id." Type="Integer" Id="16895"/>
            <ReturnValue Type="Integer" Desc="The number of Tales entries in the specified zone." Id="16896"/>
        </Function>
        <Function Name="GetDatacubes" Incomplete="true" Id="2694" Deleted="true"/>
    </Library>
    <Library Name="HazardsLib" Incomplete="true" Id="2702">
        <Function Name="GetHazardDisplayString" Incomplete="true" Id="12490"/>
    </Library>
    <Object Name="CharacterTitle" Id="2722" Prefix="title" Desc="These are the titles that the character can set for themselves.  These do not include guild tags.">
        <Method Name="GetCategory" Id="2725" Desc="Gets the category that the CharacterTitle falls under.">
            <ReturnValue Type="String" Desc="The CharacterTitle&apos;s category." Id="15823"/>
        </Method>
        <Method Name="GetForUnit" Id="2726" Desc="Checks what a unit&apos;s name would look like with the CharacterTitle." Example="If no unit is passed in, this will return a blank string.">
            <Param Name="unitChecked" Desc="The function will add the CharacterTitle to this unit&apos;s name." Type="Unit" Id="15826"/>
            <ReturnValue Type="String" Desc="The unit&apos;s name, if the CharacterTitle was applyed to it." Id="15827"/>
        </Method>
        <Method Name="GetSpell" Id="2729" Desc="Gets the spell that is granted to the player while the title is active." Example="If there is no associated spell, this will return nil.">
            <ReturnValue Type="Spell" Desc="The spell that is granted to the player while the title is active." Id="15830"/>
        </Method>
        <Method Name="GetLifetime" Id="2730" NotStandard="true" InternalNotes="Why is this in milliseconds?  Is this a thing?" Desc="Gets the amount of time, in milliseconds, that the title will be active before it is removed from the player." Example="If this returns 0, the title will remain available to the player indefinitely.">
            <ReturnValue Type="Integer" Desc="How long the title will remain active, in milliseconds." Id="15829"/>
        </Method>
        <Method Name="CannotRemove" Id="2731" InternalNotes="There are currently no non-testing titles with this flag.  Is it still something that can be set?" Desc="Determines whether the player is able to remove this CharacterTitle." Remarks="This will very very rarely be true.">
            <ReturnValue Type="Boolean" Desc="Whether the player is able to remove this CharacterTitle or not" Id="15822"/>
        </Method>
        <Function Name="is" Id="2732" Desc="Determines whether a variable is a CharacterTitle or not.">
            <Param Name="oVariable" Desc="The variable that the function will check." Type="Variable" Id="15812"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is a CharacterTitle or not." Id="15813"/>
        </Function>
        <Function Name="GetAvailableTitles" Id="2733" Desc="Gets a list of all of the titles that the player has unlocked." NotStandard="true" InternalNotes="Not using LuaTables in code.">
            <ReturnValue Type="CharacterTitle" Desc="An array of all of the titles that the player has unlocked." Array="true" Id="15809"/>
        </Function>
        <Function Name="SetTitle" Id="2734" Desc="Sends a request to the server to make a CharacterTitle the active title." Example="If this is successful, the PlayerTitleChange event will be sent to the player.">
            <Param Name="titleActivated" Desc="The title that the function will make active." Type="CharacterTitle" Id="15817"/>
        </Function>
        <Function Name="CanUseTitle" Id="2735" Desc="Determines whether or not the player can use the specified title.">
            <ReturnValue Type="Boolean" Desc="Whether the player can use the title or not." Id="15804"/>
        </Function>
        <Function Name="IsActiveTitle" Id="2736" Desc="Checks whether the a title is the one that the player has set as the active title.">
            <Param Name="titleChecked" Desc="The function will check if this title is currently active." Type="CharacterTitle" Id="15814"/>
            <ReturnValue Type="Boolean" Desc="Whether the CharacterTitle is the active title." Id="15815"/>
        </Function>
        <Method Name="GetTitle" Id="8657" Desc="Gets the string that is added to the player&apos;s name while the title is active.">
            <ReturnValue Type="String" Desc="The string that is added to the player&apos;s name when the title is active." Id="15832"/>
        </Method>
        <Method Name="__eq" Id="13170" Desc="Compares a CharacterTitle to the one that called this function to make sure that they are equal.">
            <Param Name="titleComparison" Desc="The function will compare this CharacterTitle to the one that the function was called from." Type="CharacterTitle" Id="15819"/>
            <ReturnValue Type="Boolean" Desc="Whether the CharacterTitles were the same or not." Id="15820"/>
        </Method>
        <Method Name="__gc" Id="13171" Desc="CharacterTitle&apos;s garbage collection function.  This will delete the CharacterTitle from memory."/>
        <Method Name="GetMaleTitle" Incomplete="true" Id="2723" Deleted="true"/>
        <Method Name="GetFemaleTitle" Incomplete="true" Id="2724" Deleted="true"/>
        <Method Name="GetSimpleForUnit" Incomplete="true" Id="2727" Deleted="true"/>
        <Method Name="GetDisplayType" Incomplete="true" Id="2728" Deleted="true"/>
    </Object>
    <Object Name="GalacticArchiveArticle" Incomplete="true" Id="2737" Prefix="art">
        <Method Name="GetChatLinkString" Incomplete="true" Id="8658"/>
        <Method Name="__eq" Incomplete="true" Id="13172"/>
        <Method Name="__gc" Incomplete="true" Id="13173"/>
    </Object>
    <Object Name="GalacticArchiveEntry" Incomplete="true" Id="2757" Prefix="ent">
        <Method Name="__eq" Incomplete="true" Id="13174"/>
        <Method Name="__gc" Incomplete="true" Id="13175"/>
    </Object>
    <Object Name="PathMission" Incomplete="true" Id="2771" Prefix="pm">
        <Method Name="ShowPathChecklistHintArrow" Incomplete="true" Id="9090"/>
        <Method Name="IsOptional" Incomplete="true" Id="12491"/>
        <Method Name="__eq" Incomplete="true" Id="13176"/>
        <Method Name="__gc" Incomplete="true" Id="13177"/>
        <Method Name="CanTakeReward" Incomplete="true" Id="2784" Deleted="true"/>
        <Method Name="HasTakenReward" Incomplete="true" Id="2785" Deleted="true"/>
        <Method Name="RequiresRewardChoice" Incomplete="true" Id="2786" Deleted="true"/>
        <Method Name="GetHoldoutWaveCount" Incomplete="true" Id="2795" Deleted="true"/>
        <Method Name="GetHoldoutWaveTime" Incomplete="true" Id="2796" Deleted="true"/>
        <Method Name="GetHoldoutMaxTime" Incomplete="true" Id="2797" Deleted="true"/>
        <Method Name="ChooseReward" Incomplete="true" Id="2800" Deleted="true"/>
        <Method Name="GetWorldZone" Incomplete="true" Id="3843" Deleted="true"/>
        <Method Name="GetMissions" Incomplete="true" Id="3844" Deleted="true"/>
        <Method Name="GetRewards" Incomplete="true" Id="3845" Deleted="true"/>
        <Method Name="GetPosition" Incomplete="true" Id="3868" Deleted="true"/>
        <Method Name="GetContributionValue" Incomplete="true" Id="3869" Deleted="true"/>
        <Method Name="GetRemainingTime" Incomplete="true" Id="3870" Deleted="true"/>
        <Method Name="IsInfiniteDuration" Incomplete="true" Id="3871" Deleted="true"/>
        <Method Name="GetCurrentTier" Incomplete="true" Id="3872" Deleted="true"/>
        <Method Name="GetAvenueType" Incomplete="true" Id="3873" Deleted="true"/>
        <Method Name="GetImprovements" Incomplete="true" Id="3874" Deleted="true"/>
        <Method Name="BuildTier" Incomplete="true" Id="3875" Deleted="true"/>
        <Method Name="GetCost" Incomplete="true" Id="3876" Deleted="true"/>
        <Method Name="IsBuilt" Incomplete="true" Id="3877" Deleted="true"/>
        <Method Name="Build" Incomplete="true" Id="3878" Deleted="true"/>
        <Method Name="GetEvent" Incomplete="true" Id="3879" Deleted="true"/>
        <Method Name="GetImprovementType" Incomplete="true" Id="3880" Deleted="true"/>
        <Method Name="IsBoss" Incomplete="true" Id="3881" Deleted="true"/>
        <Method Name="GetState" Incomplete="true" Id="3882" Deleted="true"/>
        <Method Name="GetElapsedTime" Incomplete="true" Id="3883" Deleted="true"/>
        <Method Name="GetMaxTime" Incomplete="true" Id="3884" Deleted="true"/>
        <Method Name="IsDefendType" Incomplete="true" Id="3885" Deleted="true"/>
        <Method Name="IsTimedType" Incomplete="true" Id="3886" Deleted="true"/>
        <Method Name="GetDefendHealth" Incomplete="true" Id="3887" Deleted="true"/>
        <Method Name="GetAuxiliaryHealth" Incomplete="true" Id="3888" Deleted="true"/>
        <Method Name="GetMaxDefendHealth" Incomplete="true" Id="3889" Deleted="true"/>
        <Method Name="GetMaxAuxiliaryHealth" Incomplete="true" Id="3890" Deleted="true"/>
        <Method Name="GetEscapingUnits" Incomplete="true" Id="3891" Deleted="true"/>
        <Method Name="GetWaveCount" Incomplete="true" Id="3892" Deleted="true"/>
        <Method Name="GetWavesReleased" Incomplete="true" Id="3893" Deleted="true"/>
        <Method Name="GetDefendUnits" Incomplete="true" Id="3894" Deleted="true"/>
        <Method Name="GetAuxiliaryUnits" Incomplete="true" Id="3895" Deleted="true"/>
        <Method Name="GetBuildCredits" Incomplete="true" Id="3896" Deleted="true"/>
        <Method Name="GetScanTime" Incomplete="true" Id="3897" Deleted="true"/>
        <Method Name="GetMinCooldown" Incomplete="true" Id="3898" Deleted="true"/>
        <Method Name="GetMaxCooldown" Incomplete="true" Id="3899" Deleted="true"/>
        <Method Name="GetSocketCount" Incomplete="true" Id="3900" Deleted="true"/>
        <Method Name="GetAOERange" Incomplete="true" Id="3901" Deleted="true"/>
        <Method Name="GetMaxSeekDistance" Incomplete="true" Id="3902" Deleted="true"/>
        <Method Name="GetSpeedMultiplier" Incomplete="true" Id="3903" Deleted="true"/>
        <Method Name="GetScanMultiplier" Incomplete="true" Id="3904" Deleted="true"/>
        <Method Name="GetHealthMultiplier" Incomplete="true" Id="3905" Deleted="true"/>
    </Object>
    <Object Name="PublicEvent" Incomplete="true" Id="2802" Prefix="pe">
        <Method Name="ShouldShowOnMiniMapEdge" Incomplete="true" Id="8660"/>
        <Method Name="RequestScoreboard" Id="12492" Desc="Toggles whether the PublicEventLiveStatsUpdate event will fire for this public event." Remarks="This is primarily done to throttle how often we should call the GetLiveStats event.  ">
            <Param Name="bRegister" Desc="Registers or unregisters the public event for the PublicEventLiveStatsUpdate event." Type="Boolean" Id="16062"/>
        </Method>
        <Method Name="__eq" Incomplete="true" Id="13178"/>
        <Method Name="__gc" Incomplete="true" Id="13179"/>
        <Method Name="GetObjective" Incomplete="true" Id="14853"/>
        <Method Name="GetLiveEvent" Incomplete="true" Id="14854"/>
        <Method Name="PrepareInfractionReport" Incomplete="true" Id="14855"/>
        <Method Name="GetStat" Incomplete="true" Id="17221"/>
        <Function Name="GetEvents" Incomplete="true" Id="2814" Deleted="true"/>
    </Object>
    <Object Name="PublicEventObjective" Incomplete="true" Id="2815" Prefix="peo">
        <Method Name="GetWarplotLocation" Incomplete="true" Id="8661"/>
        <Method Name="__eq" Incomplete="true" Id="13180"/>
        <Method Name="__gc" Incomplete="true" Id="13181"/>
        <Method Name="GetObjectiveId" Incomplete="true" Id="14856"/>
        <Method Name="GetLiveEventSummary" Incomplete="true" Id="14857"/>
        <Method Name="GetMedalPoints" Incomplete="true" Id="17222"/>
    </Object>
    <WindowControl Name="ProtostarMapWindow" Incomplete="true" Id="2830" Parent="Window"/>
    <Object Name="ApolloCursor" Id="2837" Desc="ApolloCursors are the sprites that are used on the cursor in different situations." Prefix="ac">
        <Function Name="is" Id="2838" Desc="Determines if the variable is an ApolloCursor.">
            <Param Name="oVariable" Desc="The variable that the function will check." Type="Variable" Id="15650"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is an ApolloCursor or not." Id="15651"/>
        </Function>
        <Function Name="new" Id="2839" Desc="Creates a new ApolloCursor with no cursor set.">
            <ReturnValue Type="ApolloCursor" Desc="A fresh, empty ApolloCursor." Id="15652"/>
        </Function>
        <Function Name="GetCursor" Id="2840" Desc="Returns the ApolloCursor with the specified name." Example="ApolloCursors that are returned from this function can be passed into Apollo.SetCursor() to change the window cursor.

function Example:ForceChangeCursor()
    local unitHover = GetMouseOverUnit()
    local unitPlayer = GameLib.GetPlayerUnit()
    local acForcedCursor = nil
    if unitPlayer and unitHover then
        local eDisposition = unitPlayer:GetDispositionTo(unitHover)
        if unitPlayer:GetClassId() == GameLib.CodeEnumClass.Warrior and eDisposition == Unit.CodeEnumDisposition.Hostile or eDisposition == Unit.CodeEnumDisposition.Neutral then
            acForcedCursor = ApolloCursor.GetCursor(AttackWarrior)
        else
            acForcedCursor = ApolloCursor.GetCursor(Attack)
        end
    end
    
    if acForcedCursor then
        Apollo.SetCursor(acForcedCursor)
    end
end" Remarks="The values that can be passed in for this are:
Attack
AttackWarrior
AttackSpellslinger
Attack ESPer (this is not a typo)
AttackMedic
Default
DefaultGame
DefaultResizeNS
DefaultResizeEW
DefaultResizeNESW
DefaultResizeNWSE
DragDropIgnore
DragDropValid
DragDropInvalid
DragDropTrash
DragDropTrade
Feather
FeatherInactive
Gossip
GossipInactive
Hammer
HammerInactive
Instance
InstanceInactive
Interact
InteractInactive
Link
Loot
LootInactive
NewQuest
NewQuestInactive
PathExplorer
PathExplorerInactive
PathScientist
PathScientistInactive
PathSettler
PathSettlerInactive
PathSoldier
PathSoldierInactive
PendingSpell
PendingSpellInvalid
QuestContinue
QuestContinueInactive
QuestReward
QuestRewardInactive
Recall
RecallInactive
Vendor
VendorInactive">
            <Param Name="strCursorName" Desc="The name of the cursor that should be returned." Type="String" Id="15648"/>
            <ReturnValue Type="ApolloCursor" Desc="The cursor that was requested.  If no cursor was found, this returns nil." Id="15649"/>
        </Function>
        <Method Name="__gc" Id="13182" InternalNotes="Is there ever a reason to explicitly call this?" Desc="The ApolloCursor&apos;s garbage collection function.  This will delete the ApolloCursor and free up the memory used for it."/>
    </Object>
    <Object Name="CColor" Id="2841" Desc="CColors are an older way of using colors in addons.  All colors are in ARGB format, with all values being between 0.0 and 1.0.
While this functionality is not yet depricated, it may be in the future.  We highly recommend that developers use ApolloColors instead." Prefix="cc">
        <Method Name="Saturate" Id="2842" Desc="Locks the values in the color to values between 0.0 and 1.0.">
            <ReturnValue Type="CColor" Desc="A new color that has been bound to values between 0.0 and 1.0." Id="15748"/>
        </Method>
        <Method Name="Complement" Id="2843" Desc="Creates a new CColor that is complementary to the one that calls this function." Remarks="The values of the CColor that is returned are all 1.0 - value.">
            <ReturnValue Type="CColor" Desc="A color that complements the one that called the function." Id="15747"/>
        </Method>
        <Function Name="new" Id="2852" Desc="Creates a new CColor using the specified values.">
            <Param Name="r" Desc="The red value of the color." Type="Float" Id="15717"/>
            <Param Name="g" Desc="The green value of the color." Type="Float" Id="15718"/>
            <Param Name="b" Desc="The blue value of the color." Type="Float" Id="15719"/>
            <Param Name="a" Desc="The alpha value of the color.  This value defaults to 1.0 if no alpha value is passed in." Type="Float" Id="15720"/>
            <ReturnValue Type="CColor" Desc="A CColor with the rgba values that were passed in." Id="15721"/>
        </Function>
        <Function Name="is" Id="2853" Desc="Detects whether a variable is a CColor or not.">
            <Param Name="oVariable" Desc="The variable that the function will check." Type="Variable" Id="15715"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is a CColor or not." Id="15716"/>
        </Function>
        <Function Name="Complement" Id="2854" Desc="Returns a CColor that complements the color that is passed in." Remarks="The values of the CColor that is returned are all 1.0 - value.">
            <Param Name="ccBaseColor" Desc="The color that the complement is made from." Type="CColor" Id="15713"/>
            <ReturnValue Type="CColor" Desc="A color that complements the one that was passed in." Id="15714"/>
        </Function>
        <Method Name="__unm" Id="13183" Desc="Multiplies each of the CColor&apos;s color values by -1.">
            <ReturnValue Type="CColor" Desc="The new CColor created by the function." Id="15746"/>
        </Method>
        <Method Name="__eq" Id="13184" Desc="Checks if a CColor matches this CColor.">
            <Param Name="ccCompare" Desc="The CColor that is being compared to the one that called the function." Type="CColor" Id="15728"/>
            <ReturnValue Type="Boolean" Desc="Whether the two CColors matched or not." Id="15729"/>
        </Method>
        <Method Name="__tostring" Id="13185" Desc="Converts a CColor to a string with the CColor&apos;s values">
            <ReturnValue Type="String" Desc="A string with the CColor&apos;s values.  The string&apos;s format is &quot;CColor(alpha,red,green,blue)" Id="15745"/>
        </Method>
        <Method Name="__add" Id="13186" Desc="Adds another CColor&apos;s values to the CColor that called this function.">
            <Param Name="ccModifier" Desc="The CColor that the current CColor will be modified by." Type="CColor" Id="15724"/>
            <ReturnValue Type="CColor" Desc="The sum of the two CColors." Id="15725"/>
        </Method>
        <Method Name="__div" Id="13187" Desc="Scales each value in the CColor by the given amount.">
            <Param Name="fScale" Desc="The amount that each value in the CColor will be scaled by." Type="Float" Id="15726"/>
            <ReturnValue Type="CColor" Desc="The modified CColor." Id="15727"/>
        </Method>
        <Method Name="__mul" Id="13188" Desc="Scales the values in the CColor by the value passed in.">
            <Param Name="fScale" Desc="The amount that each value in the CColor will be scaled by.  Only a float or CColor needs to be passed in.  " Type="Float" Id="15734"/>
            <Param Name="ccMultiplier" Desc="The CColor that the source color is multiplied by.  Each value is multiplied by the corresponding value, so red x red, blue x blue, etc.  Only a float or CColor should be passed in to the function, not both." Type="CColor" Id="15735"/>
            <ReturnValue Type="CColor" Desc="The result of multiplying the original CColor with the value that was passed in." Id="15736"/>
        </Method>
        <Method Name="__sub" Id="13189" Desc="Subtracts a CColor&apos;s values from the CColor that called the function.">
            <Param Name="ccSubtractor" Desc="The color values of the CColor that called the function are subtracted by this CColor&apos;s color values." Type="CColor" Id="15743"/>
            <ReturnValue Type="CColor" Desc="The CColor made up of the difference of the two CColors." Id="15744"/>
        </Method>
        <Method Name="__index" Id="13190" Desc="Gets the CColor&apos;s value for one of its primary colors or alpha.">
            <Param Name="strIndex" Desc="The index of the value that the function will return.  This can be:
&quot;r&quot; = red value
&quot;b&quot; = blue value
&quot;g&quot; = green value
&quot;a&quot; = alpha value" Type="String" Id="15730"/>
        </Method>
        <Method Name="__newindex" Id="13191" Desc="Sets one of the CColor&apos;s color values.">
            <Param Name="strIndex" Desc="The color value that the function will update.
&quot;r&quot; = red
&quot;g&quot; = green
&quot;b&quot; = blue
&quot;a&quot; = alpha" Type="String" Id="15740"/>
            <Param Name="fValue" Desc="The color&apos;s new value." Type="Float" Id="15741"/>
            <ReturnValue Type="String" Desc="An error string is sent if an invalid index is used.  Otherwise, this function has no return value." Id="15742"/>
        </Method>
    </Object>
    <Library Name="GenericDialog" Incomplete="true" Id="2855" DevOnly="true"/>
    <WindowControl Name="ComboBox" Incomplete="true" Id="2865" Parent="Window"/>
    <Object Name="Time" Incomplete="true" Id="2883">
        <Method Name="__lt" Incomplete="true" Id="13192"/>
        <Method Name="__tostring" Incomplete="true" Id="13193"/>
        <Method Name="__eq" Incomplete="true" Id="13194"/>
    </Object>
    <Object Name="Vector2" Incomplete="true" Id="2888">
        <Method Name="__unm" Incomplete="true" Id="13195"/>
        <Method Name="__eq" Incomplete="true" Id="13196"/>
        <Method Name="__tostring" Incomplete="true" Id="13197"/>
        <Method Name="__add" Incomplete="true" Id="13198"/>
        <Method Name="__div" Incomplete="true" Id="13199"/>
        <Method Name="__mul" Incomplete="true" Id="13200"/>
        <Method Name="__sub" Incomplete="true" Id="13201"/>
        <Method Name="__index" Incomplete="true" Id="13202"/>
        <Method Name="__newindex" Incomplete="true" Id="13203"/>
    </Object>
    <Object Name="Vector3" Incomplete="true" Id="2917">
        <Method Name="__unm" Incomplete="true" Id="13204"/>
        <Method Name="__eq" Incomplete="true" Id="13205"/>
        <Method Name="__tostring" Incomplete="true" Id="13206"/>
        <Method Name="__add" Incomplete="true" Id="13207"/>
        <Method Name="__div" Incomplete="true" Id="13208"/>
        <Method Name="__mul" Incomplete="true" Id="13209"/>
        <Method Name="__sub" Incomplete="true" Id="13210"/>
        <Method Name="__index" Incomplete="true" Id="13211"/>
        <Method Name="__newindex" Incomplete="true" Id="13212"/>
    </Object>
    <Object Name="AaRect" Incomplete="true" Id="2946" Prefix="arect" InternalNotes="No clue what these are.  We don&apos;t seem to be using these anywhere.">
        <Function Name="New" Id="2974" Desc="Creates a new AaRect" InternalNotes="Does this really exist?"/>
        <Function Name="Is" Id="2975" Desc="Checks if the given variable is an AARect."/>
        <Function Name="Empty" Id="2980" InternalNotes="Unsure if this class has any use." Desc="Returns an empty AARect."/>
        <Method Name="__eq" Incomplete="true" Id="13213"/>
        <Method Name="__tostring" Incomplete="true" Id="13214"/>
        <Method Name="__unm" Incomplete="true" Id="13215"/>
        <Method Name="__div" Incomplete="true" Id="13216"/>
        <Method Name="__mul" Incomplete="true" Id="13217"/>
        <Method Name="__index" Incomplete="true" Id="13218"/>
        <Method Name="__newindex" Incomplete="true" Id="13219"/>
        <Method Name="__add" Incomplete="true" Id="13220"/>
        <Method Name="__sub" Incomplete="true" Id="13221"/>
        <Method Name="IntersectsCircle" Incomplete="true" Id="2959" Deleted="true"/>
        <Function Name="UnionCircle" Incomplete="true" Id="2978" Deleted="true"/>
    </Object>
    <Object Name="Quaternion" Incomplete="true" Id="2981">
        <Method Name="__unm" Incomplete="true" Id="13222"/>
        <Method Name="__eq" Incomplete="true" Id="13223"/>
        <Method Name="__tostring" Incomplete="true" Id="13224"/>
        <Method Name="__mul" Incomplete="true" Id="13225"/>
        <Method Name="__add" Incomplete="true" Id="13226"/>
        <Method Name="__div" Incomplete="true" Id="13227"/>
        <Method Name="__sub" Incomplete="true" Id="13228"/>
        <Method Name="__index" Incomplete="true" Id="13229"/>
        <Method Name="__newindex" Incomplete="true" Id="13230"/>
    </Object>
    <Object Name="EulerAngles" Incomplete="true" Id="3009" InternalNotes="Gonna skip this one until I understand them better...we aren&apos;t really using them yet anyways.">
        <Method Name="__newindex" Incomplete="true" Id="13231"/>
        <Method Name="__tostring" Incomplete="true" Id="13232"/>
        <Method Name="__index" Incomplete="true" Id="13233"/>
        <Method Name="ToMatrix" Incomplete="true" Id="3010" Deleted="true"/>
        <Function Name="FromMatrix" Incomplete="true" Id="3017" Deleted="true"/>
    </Object>
    <Object Name="Menu" Incomplete="true" Id="3020">
        <Method Name="__eq" Incomplete="true" Id="13234"/>
        <Method Name="__gc" Incomplete="true" Id="13235"/>
    </Object>
    <WindowControl Name="ModelWindow" Incomplete="true" Id="3025" Parent="Window"/>
    <Object Name="Sprite" Incomplete="true" Id="3034" DevOnly="true"/>
    <WindowControl Name="WindowLocation" Incomplete="true" Id="3037" Parent="Window">
        <Method Name="SetPoints" Incomplete="true" Id="8662"/>
        <Method Name="GetPoints" Incomplete="true" Id="8663"/>
        <Method Name="SetOffsets" Incomplete="true" Id="8664"/>
        <Method Name="GetOffsets" Incomplete="true" Id="8665"/>
        <Method Name="ToTable" Incomplete="true" Id="8666"/>
        <Method Name="SetPoint" Incomplete="true" Id="3038" Deleted="true"/>
        <Method Name="GetPoint" Incomplete="true" Id="3039" Deleted="true"/>
        <Method Name="SetOffset" Incomplete="true" Id="3040" Deleted="true"/>
        <Method Name="GetOffset" Incomplete="true" Id="3041" Deleted="true"/>
    </WindowControl>
    <Object Name="XmlDoc" Incomplete="true" Id="3042">
        <Method Name="RegisterCallback" Incomplete="true" Id="8667"/>
        <Method Name="IsLoaded" Incomplete="true" Id="8668"/>
        <Method Name="__gc" Incomplete="true" Id="13236"/>
    </Object>
    <Object Name="ScreenModelActor" Incomplete="true" Id="3061" DevOnly="true">
        <Method Name="IsDrawable" Incomplete="true" Id="13295"/>
        <Method Name="SetFaction" Incomplete="true" Id="13296"/>
        <Method Name="GetSliderCodes" Incomplete="true" Id="13297"/>
        <Method Name="SetBySliderCodes" Incomplete="true" Id="13298"/>
        <Method Name="SetWeaponSheath" Incomplete="true" Id="13299"/>
        <Method Name="SetDefaultSequence" Incomplete="true" Id="13300"/>
        <Method Name="IsWeaponEquipped" Incomplete="true" Id="13301"/>
        <Method Name="SetItemsByCreationGearSet" Incomplete="true" Id="17223"/>
    </Object>
    <Object Name="ScreenModelManager" Incomplete="true" Id="3072" DevOnly="true">
        <Method Name="AddActorByRaceGenderClass" Incomplete="true" Id="17224"/>
    </Object>
    <Library Name="Sound" Incomplete="true" Id="3077">
        <Function Name="PlayLootItemSound" Incomplete="true" Id="3080" Deleted="true"/>
        <Function Name="PlayLootMoneySound" Incomplete="true" Id="3081" Deleted="true"/>
    </Library>
    <Library Name="HousingLib" Incomplete="true" Id="3153">
        <EnumSet Name="CodeEnumDecorHookType" Incomplete="true" Id="3154">
            <Enum Name="Mannequin" Id="8676"/>
        </EnumSet>
        <EnumSet Name="NeighborPermissionLevel" Incomplete="true" Id="5407">
            <Enum Name="Account" Id="10396"/>
        </EnumSet>
        <Function Name="GetNumCratedDecor" Incomplete="true" Id="8679"/>
        <Function Name="GetNumPlacedDecorFromCategory" Incomplete="true" Id="8681"/>
        <Function Name="GetMaxPlacedDecorFromCategory" Incomplete="true" Id="8682"/>
        <Function Name="SetPlugRotation" Incomplete="true" Id="8683"/>
        <Function Name="GetMannequinPoseList" Incomplete="true" Id="8684"/>
        <Function Name="PurchaseDecorIntoCrate" Incomplete="true" Id="8685"/>
        <Function Name="SetDecorPosition" Incomplete="true" Id="8686"/>
        <Function Name="SetDecorRotation" Incomplete="true" Id="8687"/>
        <Function Name="LinkDecor" Incomplete="true" Id="8688"/>
        <Function Name="UnlinkDecor" Incomplete="true" Id="8689"/>
        <Function Name="UnlinkDecorAllChildren" Incomplete="true" Id="8690"/>
        <Function Name="IsDecorParent" Incomplete="true" Id="8691"/>
        <Function Name="IsDecorChild" Incomplete="true" Id="8692"/>
        <Function Name="IsInEditMode" Incomplete="true" Id="8693"/>
        <Function Name="GetCustomizationMode" Incomplete="true" Id="8694"/>
        <Function Name="SetCustomizationMode" Incomplete="true" Id="8695"/>
        <Function Name="GetResidencePrivacyLevel" Incomplete="true" Id="8696"/>
        <Function Name="SetResidencePrivacyLevel" Incomplete="true" Id="8697"/>
        <Function Name="SetNeighborHarvestSplit" Incomplete="true" Id="8698"/>
        <Function Name="GetNeighborHarvestSplit" Incomplete="true" Id="8699"/>
        <Function Name="GetMannequinPose" Incomplete="true" Id="8700"/>
        <Function Name="SetMannequinPose" Incomplete="true" Id="8701"/>
        <Function Name="ShowMoveControls" Incomplete="true" Id="8702"/>
        <Function Name="ShowRotateControls" Incomplete="true" Id="8703"/>
        <EnumSet Name="ResidencePrivacyLevel" Incomplete="true" Id="8704">
            <Enum Name="Public" Id="8705"/>
            <Enum Name="NeighborsOnly" Id="8706"/>
            <Enum Name="RoommatesOnly" Id="8707"/>
            <Enum Name="Private" Id="8708"/>
        </EnumSet>
        <EnumSet Name="DecorCategoryLimit" Incomplete="true" Id="8709">
            <Enum Name="Mannequin" Id="8710"/>
            <Enum Name="Light" Id="8711"/>
        </EnumSet>
        <EnumSet Name="ResidenceCustomizationMode" Incomplete="true" Id="8712">
            <Enum Name="Advanced" Id="8713"/>
            <Enum Name="Simple" Id="8714"/>
        </EnumSet>
        <EnumSet Name="HousingPlugFacing" Incomplete="true" Id="8715">
            <Enum Name="North" Id="8716"/>
            <Enum Name="South" Id="8717"/>
            <Enum Name="East" Id="8718"/>
            <Enum Name="West" Id="8719"/>
            <Enum Name="Default" Id="8720"/>
        </EnumSet>
        <Function Name="GetNumOwnedDecor" Incomplete="true" Id="9091"/>
        <Function Name="GetMaxOwnedDecor" Incomplete="true" Id="9092"/>
        <Function Name="GetDecorList" Incomplete="true" Id="9093"/>
        <Function Name="GetDecorTypeList" Incomplete="true" Id="9094"/>
        <Function Name="GetPlacedDecorList" Incomplete="true" Id="9095"/>
        <Function Name="CrateAllDecor" Incomplete="true" Id="9096"/>
        <Function Name="GetWarplotValue" Incomplete="true" Id="9097"/>
        <Function Name="GetWarplotMaintenanceCost" Incomplete="true" Id="9098"/>
        <EnumSet Name="RemodelOptionTypeInterior" Incomplete="true" Id="9099">
            <Enum Name="Wallpaper" Id="9100"/>
            <Enum Name="Floor" Id="9101"/>
            <Enum Name="Ceiling" Id="9102"/>
            <Enum Name="Trim" Id="9103"/>
            <Enum Name="Lighting" Id="9104"/>
            <Enum Name="Music" Id="14858"/>
        </EnumSet>
        <EnumSet Name="RemodelOptionTypeExterior" Incomplete="true" Id="9105">
            <Enum Name="Roof" Id="9106"/>
            <Enum Name="Wallpaper" Id="9107"/>
            <Enum Name="Entry" Id="9108"/>
            <Enum Name="Door" Id="9109"/>
            <Enum Name="Sky" Id="9110"/>
            <Enum Name="Music" Id="14859"/>
            <Enum Name="Ground" Id="17129"/>
        </EnumSet>
        <Function Name="GetNumPlacedDecorInterior" Incomplete="true" Id="10397"/>
        <Function Name="GetNumPlacedDecorExterior" Incomplete="true" Id="10398"/>
        <Function Name="GetMaxPlacedDecorExterior" Incomplete="true" Id="10399"/>
        <Function Name="GetRemodelMusicExteriorList" Incomplete="true" Id="14860"/>
        <Function Name="PrepareInfractionReport" Incomplete="true" Id="14861"/>
        <Function Name="GetMaxPlacedDecorInterior" Incomplete="true" Id="17130"/>
        <Function Name="GetRemodelGroundList" Incomplete="true" Id="17131"/>
        <Function Name="SetNeighborGardenSplit" Incomplete="true" Id="17132"/>
        <Function Name="GetNeighborGardenSplit" Incomplete="true" Id="17133"/>
        <Function Name="IsGroundClutterHidden" Incomplete="true" Id="17134"/>
        <Function Name="SetGroundClutterHidden" Incomplete="true" Id="17135"/>
        <Function Name="RequestVisitPlayer" Incomplete="true" Id="17225"/>
        <Function Name="GetControlMode" Incomplete="true" Id="17277"/>
        <Function Name="SetControlMode" Incomplete="true" Id="17278"/>
        <EnumSet Name="DecorControlMode" Incomplete="true" Id="17279">
            <Enum Name="Local" Id="17280"/>
            <Enum Name="Global" Id="17281"/>
        </EnumSet>
        <Function Name="RequestProperties" Incomplete="true" Id="3164" Deleted="true"/>
        <Function Name="RequestPlots" Incomplete="true" Id="3165" Deleted="true"/>
        <Function Name="PurchaseProperty" Incomplete="true" Id="3168" Deleted="true"/>
        <Function Name="SellProperty" Incomplete="true" Id="3169" Deleted="true"/>
        <Function Name="GetResidence" Incomplete="true" Id="3176" Deleted="true"/>
        <Function Name="RequestStorageList" Incomplete="true" Id="3180" Deleted="true"/>
        <Function Name="RequestBlueprintList" Incomplete="true" Id="3181" Deleted="true"/>
        <Function Name="PlaceFromBlueprint" Incomplete="true" Id="3183" Deleted="true"/>
        <Function Name="PlaceFromStorage" Incomplete="true" Id="3184" Deleted="true"/>
        <Function Name="DeleteFromStorage" Incomplete="true" Id="3185" Deleted="true"/>
        <Function Name="Pack" Incomplete="true" Id="3186" Deleted="true"/>
        <Function Name="GetDecorListInterior" Incomplete="true" Id="3196" Deleted="true"/>
        <Function Name="GetDecorListExterior" Incomplete="true" Id="3197" Deleted="true"/>
        <Function Name="GetFreePlaceDecorList" Incomplete="true" Id="3198" Deleted="true"/>
        <Function Name="GetDecorTypeListInterior" Incomplete="true" Id="3199" Deleted="true"/>
        <Function Name="GetDecorTypeListExterior" Incomplete="true" Id="3200" Deleted="true"/>
        <Function Name="GetPlacedDecorListExterior" Incomplete="true" Id="3201" Deleted="true"/>
        <Function Name="DisplayHooks" Incomplete="true" Id="3222" Deleted="true"/>
        <Function Name="GetNumPlacedInteriorDecor" Incomplete="true" Id="3942" Deleted="true"/>
        <Function Name="GetMaxPlacedInteriorDecor" Incomplete="true" Id="3943" Deleted="true"/>
        <Function Name="GetDecorCrateListInterior" Incomplete="true" Id="3948" Deleted="true"/>
        <Function Name="GetDecorCrateListExterior" Incomplete="true" Id="3949" Deleted="true"/>
        <Function Name="IsResidencePrivate" Incomplete="true" Id="6278" Deleted="true"/>
        <Function Name="SetResidencePrivate" Incomplete="true" Id="6279" Deleted="true"/>
    </Library>
    <Object Name="Challenges" Id="3226" Prefix="clg" Desc="Challenges are timed goals that the player will unlock as they kill NPCs and explore Nexus.  Most challenges are repeatable and offer rewards, such as crafting materials, decor, and equipment.">
        <Method Name="GetId" Id="3227" Desc="Returns the id number of the challenge">
            <ReturnValue Type="Integer" Id="11006" Desc="The Challenge&apos;s id number."/>
        </Method>
        <Method Name="GetType" Id="3228" InternalNotes="ChallengeLib.ChallengeType needs to be turned into an enum." Desc="Gets a challenge&apos;s type." Remarks="Only one challenge of each type can be active at a given time.">
            <ReturnValue Type="Integer" Desc="The challenge&apos;s type.  This corresponds with the ChallengeLib.ChallengeType set of int constants." Id="15754"/>
        </Method>
        <Method Name="GetCurrentCount" Id="3229" Desc="Gets the player&apos;s progress towards this Challenge.">
            <ReturnValue Type="Integer" Id="11003" Desc="The amount of progress the player has made towards the current challenge."/>
        </Method>
        <Method Name="GetTotalCount" Id="3230" Desc="Gets the total amount of progress the player has to earn to complete the current tier of the challenge.">
            <ReturnValue Type="Integer" Desc="The amount of progress needed to complete the current challenge tier.  This value is 100 for percentage based progress, or a smaller number for challenges that require a fixed amount of progress." Id="15753"/>
        </Method>
        <Method Name="GetCurrentTier" Id="3231" Desc="Gets the tier of this Challenge that the player is working towards.">
            <ReturnValue Type="Integer" Id="11004" Desc="The challege tier that the player is working towards."/>
        </Method>
        <Method Name="GetCompletionCount" Id="3232" Desc="Gets the number of times the player has completed the challenge.">
            <ReturnValue Type="Integer" Id="11001" Desc="The number of times the player has completed the challenge."/>
        </Method>
        <Method Name="GetCompletionTotal" Id="3233" Desc="Gets the number of times this Challenge can be completed.">
            <ReturnValue Type="Integer" Id="11002" Desc="The number of times the player can complete the challenge.  If this value is -1, then the challenge can be completed an infinate number of times."/>
        </Method>
        <Method Name="GetLastRewardTier" Id="3234" Desc="Returns the last tier of the Challenge that the player completed during the current attempt.">
            <ReturnValue Type="Integer" Id="11008" Desc="The last tier that was completed of the challenge during the current attempt."/>
        </Method>
        <Method Name="IsTimeTiered" Incomplete="true" Id="3235" Desc="Determines whether the reward tiers are based on the player&apos;s completion time or not.">
            <ReturnValue Type="Boolean" Desc="Whether the reward tiers are based on the player&apos;s completion time or not." Id="15767"/>
        </Method>
        <Method Name="IsActivated" Id="3236" Desc="Finds out whether the challenge is currently running or not.">
            <ReturnValue Type="Boolean" Desc="Whether the challenge is currently running or not." Id="15763"/>
        </Method>
        <Method Name="IsInCooldown" Id="3237" Desc="Determines whether the challenge is currently on cooldown.">
            <ReturnValue Type="Boolean" Desc="Whether the challenge is on cooldown or not." Id="15766"/>
        </Method>
        <Method Name="ShouldCollectReward" Id="3238" Desc="Determines if the player has not collected their reward for the challenge.">
            <ReturnValue Type="Boolean" Desc="Whether the player has an uncollected reward or not." Id="15770"/>
        </Method>
        <Method Name="IsFullyComplete" Id="3239" Desc="Determines if the challenge has been completed the maximum number of times or not.">
            <ReturnValue Type="Boolean" Desc="Whether the challenge has been completed the maximum number of times or not." Id="15764"/>
        </Method>
        <Method Name="GetName" Id="3240" Desc="Gets the challenge&apos;s name.">
            <ReturnValue Type="String" Desc="The name of the challenge." Id="15750"/>
        </Method>
        <Method Name="GetDescription" Id="3241" Desc="Gets the text that describes the challenge.">
            <ReturnValue Type="String" Id="11005" Desc="The Challenge&apos;s description."/>
        </Method>
        <Method Name="GetZoneInfo" Id="3242" Desc="Gets information on the zone where the challenge is found.">
            <ReturnValue Type="Table" Desc="A table with information on where the challenge is located." Id="15755">
                <Item Name="idZone" Desc="The id number of the zone where the challenge can be found." Type="Integer" Id="15756"/>
                <Item Name="strZoneName" Desc="The name of the zone where the challenge is located." Type="String" Id="15757"/>
            </ReturnValue>
        </Method>
        <Method Name="GetZoneRestrictionInfo" Id="3243" Desc="Gets information on the area that the challenge is restricted to.">
            <ReturnValue Type="Table" Desc="A table with information on the area that the challenge is restricted to." Id="15758">
                <Item Name="idSubZone" Desc="The id number of the subzone that the challenge is restricted to." Type="Integer" Id="15759"/>
                <Item Name="strLocationName" Desc="The name of the area that the challenge is restricted to." Type="String" Id="15760"/>
                <Item Name="strSubZoneName" Desc="The name of the subzone that the challenge is restricted to." Type="String" Id="15761"/>
            </ReturnValue>
        </Method>
        <Method Name="GetTimeStr" Id="3244" Desc="Gets the challenge&apos;s current timer and returns it in string form." Example="This timer is context sensitive.  If the challenge is active, it shows the amount of time the player has to complete it.  If the player has left the challenge area, it shows the amount of time before the player fails the challenge because they left the area.  If the challenge is on cooldown, it returns the amount of time until it is no longer on cooldown.">
            <ReturnValue Type="String" Desc="The amount of time left on the timer, in &quot;minute:second&quot; format." Id="15752"/>
        </Method>
        <Method Name="GetAllTierCounts" Id="3245" Desc="Returns the goal number for each tier of the Challenge">
            <ReturnValue Type="Table" Array="true" Id="10997" Desc="An array that contains the amount of progress that the player must reach for each of the Challenge&apos;s tiers.">
                <Item Name="nGoalCount" Type="Integer" Id="10998" Desc="The amount of progression required for the challenge.  If the challenge is percentage based, this value is 100.  Otherwise, it is an exact number of objectives that the player must reach."/>
            </ReturnValue>
        </Method>
        <Function Name="is" Id="3246" Desc="Determines if the variable is a Challenge or not.">
            <Param Name="oVariable" Desc="The variable that the function will check." Id="10995" Type="Variable"/>
            <ReturnValue Type="Boolean" Id="10996" Desc="Whether the variable is a Challenge or not."/>
        </Function>
        <Method Name="NeedsHintArrow" Id="3956" Desc="Determines whether the challenge has a set starting area or zone restrictions.">
            <ReturnValue Type="Boolean" Desc="Whether the challenge needs to have a hint arrow or not." Id="15769"/>
        </Method>
        <Method Name="GetMapStartLocation" Id="3957" Desc="Gets the coordinates where the Challenge can be started">
            <ReturnValue Type="Table" Id="11016" Desc="The coordinates where the challenge can be started.">
                <Item Name="x" Desc="The X coordinate" Type="Float" Id="11017"/>
                <Item Name="y" Desc="The Y coordinate" Type="Float" Id="11018"/>
                <Item Name="z" Desc="The Z coordinate" Type="Float" Id="11019"/>
            </ReturnValue>
        </Method>
        <Method Name="GetMapStartRegions" Id="3958" Desc="Returns the coordinates for the hexes where the Challenge takes place">
            <ReturnValue Type="Vector2" Array="true" Id="11020" Desc="An array of hex coordinates where the objectives for the challenge can be found."/>
        </Method>
        <Method Name="GetMapLocation" Id="3959" Desc="The location that the hint arrow points the player towards for the challenge.">
            <ReturnValue Type="Table" Id="11009" Desc="The X, Y, and Z coordinates that the hint arrow leads the player to.">
                <Item Name="x" Desc="The X coordinate" Type="Float" Id="11010"/>
                <Item Name="y" Desc="The Y coordinate" Type="Float" Id="11011"/>
                <Item Name="z" Desc="The Z coordinate" Type="Float" Id="11012"/>
            </ReturnValue>
        </Method>
        <Method Name="GetMapRegions" Id="3960" Desc="Gets the point that the helper arrow leads to and a list of all of the hexes that the challenge uses.">
            <ReturnValue Type="Table" Id="11013" Desc="A list that contains map info on the challenge.">
                <Item Type="Vector2" Name="tHexes" Desc="A list of x/y coordinates for the hexes where the Challenge takes place" Array="true" Id="11014"/>
                <Item Name="tIndicator" Desc="The x/y/z coordinates where the Challenge can be started" Type="Vector3" Id="11015"/>
            </ReturnValue>
        </Method>
        <Method Name="GetDisplayTier" Id="6632" Desc="Returns the current tier for the Challenge that the UI should display as active.">
            <ReturnValue Type="Integer" Id="11007" Desc="The tier that the UI should display as active."/>
        </Method>
        <Method Name="GetStartLocationRestrictionId" Id="8721" InternalNotes="This is a terrible and probably inaccurate description.  We need to find out what this is." Desc="Gets the id number for the challenge&apos;s start location." NeedProofread="true" NotStandard="true">
            <ReturnValue Type="Integer" Desc="The id number of the challenge&apos;s start location." Id="15751"/>
        </Method>
        <Method Name="ShouldDisplayPercentProgress" Id="8722" Desc="Determines whether the challenge displays its progress as a percent or as an exact number.">
            <ReturnValue Type="Boolean" Desc="Whether the player&apos;s progress should be shown as a percent or not." Id="15771"/>
        </Method>
        <Method Name="__eq" Id="13237" Deprecated="true" InternalNotes="Unsure if this is used or not.  Could not find any functionality for it."/>
        <Method Name="__gc" Id="13238" Desc="Challenge&apos;s garbage collection function.  This will delete the Challenge from memory."/>
        <Method Name="GetTimer" Incomplete="true" Id="17282"/>
        <Method Name="GetDuration" Incomplete="true" Id="17283"/>
    </Object>
    <WindowControl Name="WorldFixedWindow" Incomplete="true" Id="3247" Parent="Window"/>
    <Library Name="ActionSetLib" Id="3963" Desc="This library contains functions for validating and saving the player&apos;s Limited Action Set.">
        <EnumSet Name="CodeEnumLimitedActionSetResult" Id="6633" Desc="The possible results that the UI can receive when trying to save an Action Set or AMP loadout.">
            <Enum Name="PlayerIsDead" Id="10400"/>
            <Enum Name="MissingTag" Id="10401"/>
            <Enum Name="InCombat" Id="10402"/>
            <Enum Name="EldanAugmentation_NotEnoughPower" Id="12493"/>
            <Enum Name="EldanAugmentation_LockedInlaid" Id="12494"/>
            <Enum Name="EldanAugmentation_LockedCategoryTier" Id="12495"/>
            <Enum Name="EldanAugmentation_InvalidSeries" Id="12496"/>
            <Enum Name="EldanAugmentation_InvalidId" Id="12497"/>
            <Enum Name="EldanAugmentation_InvalidCategoryId" Id="12498"/>
            <Enum Name="EldanAugmentation_InvalidCategoryTier" Id="12499"/>
            <Enum Name="UpdateSpellInProgress" Id="12500"/>
            <Enum Name="InVoid" Id="12501"/>
            <Enum Name="InvalidSpecIndex" Id="12502"/>
            <Enum Name="InvalidSpellTier" Id="12503"/>
            <Enum Name="InsufficientAbilityPoints" Id="12504"/>
            <Enum Name="EldanAugmentation_VersionMismatch" Id="14862"/>
            <Enum Name="EldanAugmentation_SpecNotFound" Id="14863"/>
            <Enum Name="LASChangeSpellFailed" Id="16472"/>
            <Enum Name="SpecUnlockPrereqFalse" Id="17226"/>
        </EnumSet>
        <Function Name="IsSlotUnlocked" Id="3756" Desc="Determines if the specified slot is unlocked for the player.">
            <Param Name="nSlotIdx" Desc="The slot number that the function should check." Type="Integer" Id="15455"/>
            <ReturnValue Type="ActionSetLib.CodeEnumLimitedActionSetResult" Desc="This value will be Ok if the slot is unlocked or SlotUnlockPrereqFalse if it is locked." Id="15456"/>
        </Function>
        <Function Name="IsSpellCompatibleWithSlot" Id="3757" Desc="Checks to make sure that a spell is compatible with the specified slot in the action bar." Remarks="This function does not account for other spells in the current action set.  Because of this, it may return a result of Ok when passing in the id of a spell that the player already has on their action bar even though having multiple copies of the same spell on the action bar is not valid.">
            <Param Name="idSpell" Desc="The id number for the spell that the function is validating against the action bar slot." Type="Integer" Id="15469"/>
            <Param Name="nSlotIdx" Desc="The action bar slot that the function is checking the spell against." Type="Integer" Id="15470"/>
            <ReturnValue Type="ActionSetLib.CodeEnumLimitedActionSetResult" Desc="The result of the validation.  If the spell can be added to the slot, this value is Ok.  Otherwise, it contains the error that explains why the spell could not be added to the slot." Id="15471"/>
        </Function>
        <Function Name="IsSpellCompatibleWithActionSet" Id="3758" Desc="Checks to make sure that a spell is compatible with an action set.  " Example="-- Attempting to add the Stalker&apos;s &quot;Stagger&quot; ability to the current action set

local eCanAddToSpec = ActionSetLib.IsSpellCompatibleWithActionSet(23173, ActionSetLib.GetCurrentActionSet())

if eCanAddToSpec == ActionSetLib.CodeEnumLimitedActionSetResult.Ok then
    Print(&quot;Stagger can be added to the current action set&quot;)
else
    Print(&quot;Stagger can not be added to the current action set.  Error: &quot; .. eCanAddToSpec)
end">
            <Param Name="idSpell" Desc="The id number of the spell that the UI wants to place in the action set." Type="Integer" Id="15466"/>
            <Param Name="arActionSet" Desc="An array of spell ids in the current action set.  The array&apos;s index lines up with the slot with the same number." Type="Integer" Array="true" Id="15467"/>
            <ReturnValue Type="ActionSetLib.CodeEnumLimitedActionSetResult" Desc="The result of the check.  If the spell is valid in the action set, the return value will be Ok.  Otherwise, this value will contain the error that would prevent the spell from being added to the action set." Id="15468"/>
        </Function>
        <Function Name="RequestActionSetChanges" Id="3759" Desc="Attempts to make changes to the current action set." Remarks="If the result is Ok, then the server will fire the AbilityBookChange and CharacterEldanAugmentationUpdated events.">
            <ReturnValue Type="Table" Desc="A table that contains the result and other data that is relevant to the result." Id="15480">
                <Item Name="eResult" Desc="The result of the UI&apos;s attempt to change the action set.  If the change was successful, this value will be Ok.  Otherwise, it will list the error that prevented it from being set." Type="ActionSetLib.CodeEnumLimitedActionSetResult" Id="15481"/>
                <Item Name="tTags" Desc="An array that contains the name of every spell category that was required but was not found in the action set.  This table is only relevant if eResult is MissingTag." Type="strTag" Array="true" Id="15482"/>
            </ReturnValue>
            <Param Name="arActionSet" Desc="An array of spell ids that represent the proposed action set.  The array&apos;s index lines up with the slot number in the action bar." Type="Integer" Array="true" Id="15483"/>
        </Function>
        <Function Name="DoesActionSetMeetRequirements" Id="3760" InternalNotes="Not quite sure what this is... We&apos;re checking categories to make sure that the Action Set Lib doesn&apos;t require certain types of abilities." Deprecated="true" NotStandard="true">
            <ReturnValue Type="ActionSetLib.CodeEnumLimitedActionSetResult" Desc="Either the reason that the Action Set is invalid, or OK if it is valid." Id="15452"/>
        </Function>
        <Function Name="GetCurrentActionSet" Id="8723" Desc="Gets a list of the spell ids used in the player&apos;s current action set.">
            <ReturnValue Type="Integer" Desc="A list of spell ids for the player&apos;s current action set.  If a slot has no spell assigned to it, the id is 0." Array="true" Id="15454"/>
        </Function>
        <EnumSet Name="CodeEnumShortcutSet" Id="14864" Desc="These values represent what each Action Bar Shortcut is used for.">
            <Enum Name="VehicleBar" Id="14865"/>
            <Enum Name="PrimaryPetBar" Id="14866"/>
            <Enum Name="PetMiniBar0" Id="14867"/>
            <Enum Name="PetMiniBar1" Id="14868"/>
            <Enum Name="PetMiniBar2" Id="14869"/>
            <Enum Name="PetMiniBar3" Id="14870"/>
            <Enum Name="PetMiniBar4" Id="14871"/>
            <Enum Name="FloatingSpellBar" Id="14872"/>
            <Enum Name="FloatingDynamicSpellBar" Id="14873"/>
            <Enum Name="Count" Id="14874"/>
        </EnumSet>
    </Library>
    <Library Name="AttributeMilestonesLib" Id="3997" Desc="This library contains functions for viewing a character&apos;s Attribute Milestones.  These milestones are reached when the player&apos;s attribute reaches a specific threshold.">
        <EnumSet Name="CodeEnumAttributeMilestoneResult" Incomplete="true" Id="3761" Desc="The possible results when attempting to get an Attribute Milestone&apos;s info."/>
        <Function Name="GetAttributeMilestoneInfo" Id="6634" Desc="Gets information on all of the Attribute Milestones for the given class." InternalNotes="Do we still care about mini vs major milestones?" Remarks="Major milestones are an outdated concept.  Any milestones where bIsMini is false should be ignored for the time being.">
            <Param Name="eClass" Desc="The function will return the Attribute Milestones for this class." Type="GameLib.CodeEnumClass" Id="15693"/>
            <ReturnValue Type="Table" Desc="The Attribute Milestones and stat gains for the class." Id="15694">
                <Item Name="eResult" Desc="This value will contain any errors found when trying to get a class&apos; Milestone info.  If this value is not &quot;Ok&quot;, then no other values will be found in the table." Type="AttributeMilestonesLib.CodeEnumAttributeMilestoneResult" Id="15695"/>
                <Item Type="Table" Name="tMilestones" Desc="A table that contains all of the milestones for the class." Id="15696">
                    <Item Name="strength" Desc="The class&apos;s Brutality milestones." Type="Table" Id="15697">
                        <Item Name="tAttributeMilestones" Desc="The milestones for the attribute." Type="Table" Array="true" Id="15698">
                            <Item Name="bIsMini" Desc="Whether the milestone provides a secondary stat bonus or not." Type="Boolean" Id="15699"/>
                            <Item Name="nRequiredAmount" Desc="The amount of the attribute that a unit needs to reach the milestone." Type="Integer" Id="15700"/>
                            <Item Name="eUnitProperty" Desc="The property that is modified when the player reaches the milestone.  This value only exists if bIsMini is true." Type="Unit.CodeEnumProperties" Id="15701"/>
                            <Item Name="fModifier" Desc="The amount of the specified property that the unit gains when they reach the milestone.  This only exists if bIsMini is true." Type="Float" Id="15702"/>
                            <Item Name="nSpellId" Desc="The id number for the spell that is granted when the player reaches the milestone.  This value only exists if bIsMini is false." Type="Integer" Id="15703"/>
                            <Item Name="nTier" Desc="The tier of the spell that is granted by the milestone.  This only exists if bIsMini is false." Type="Integer" Id="15704"/>
                        </Item>
                        <Item Name="tSecondaryStats" Desc="The secondary stats that the class gains per attribute point." Type="Table" Array="true" Id="15705">
                            <Item Name="eUnitProperty" Desc="The stat that a player gains whenever they gain a point in this attribute." Type="Unit.CodeEnumProperties" Id="15706"/>
                            <Item Name="fBonus" Desc="The amount of the stat that is gained per attribute point." Type="Float" Id="15707"/>
                        </Item>
                    </Item>
                    <Item Name="dexterity" Desc="The class&apos;s Finesse milestones." Type="Table" Id="15708"/>
                    <Item Name="technology" Desc="The class&apos;s Tech milestones." Type="Table" Id="15709"/>
                    <Item Name="magic" Desc="The class&apos;s Insight milestones." Type="Table" Id="15710"/>
                    <Item Name="wisdom" Desc="The class&apos;s Moxie milestones." Type="Table" Id="15711"/>
                    <Item Name="stamina" Desc="The class&apos;s Grit milestones." Type="Table" Id="15712"/>
                </Item>
            </ReturnValue>
        </Function>
    </Library>
    <Object Name="Achievement" Id="4015" Prefix="ach" Desc="Achievements are tasks that can be completed to gain various rewards.  These include the standard Achievements that you find in the AchievementLog,
as well as the elements of the Tradeskill Tech Tree.">
        <Method Name="GetId" Id="6635" Desc="Returns the achievement&apos;s ID number." Example="function Example::GetAchievement(idSource)
    local tAchievements = AchievementsLib.GetAchievements()
    for idx = 1, #tAchievements do
        achCurrent = tAchievements[idx]
        if achCurrent:GetId() == idSource then
            return achCurrent
        end
    end"/>
        <Method Name="GetName" Id="6636" Desc="Returns the name of the achievement" Example="function Example::DisplayNames()
local tAchievements = AchievementsLib.GetAchievements()
for idx = 1, #tAchievements do
    local achCurrent = tAchievements[idx]
    Print(achCurrent:GetName()
end"/>
        <Method Name="GetDescription" Id="6637" Desc="Returns the description text for the achievement when it is completed.    This function is not to be confused with Achievement:GetProgressText(), which 
returns the description text for the achievement before it is complete" Example="function Example:PrintAchievementText(achSource)
    
    if achSource:IsComplete() then
       
        Print(achSource:GetDescription())
    
    else
        
        Print(achSource:GetProgressText())
    
    end

end"/>
        <Method Name="GetProgressText" Id="3769" Desc="Returns the description text that the achievement shows when it is not complete.  This function is not to be confused with Achievement:GetDescription(), 
which returns the text for the achievement when it is complete" Example="function Example:PrintAchievementText(achSource)
    if achSource:IsComplete() then
        Print(achSource:GetDescription())
    else
        Print(achSource:GetProgressText())
    end
end"/>
        <Method Name="GetCategory" Id="3770" Desc="Returns the name of the category that the achievement belongs to." Example="function Example:IsTradeskillAchievement(achSource)
    
    strCategoryName = achSource:GetCagetory() or &quot;&quot;
    
    if strCategoryName == &quot;Tradeskill&quot; or strCategoryName == &quot;Hobby&quot; then
       
        return true
    
    else
       
        return false
    
    end

end"/>
        <Method Name="GetCategoryFullName" Id="3771" Desc="Returns the long version of the name of the category that the achievement belongs to">
            <ReturnValue Type="String" Id="10960"/>
        </Method>
        <Method Name="GetCategoryId" Id="3772" Desc="Returns the id number for the category that the achievement belongs to"/>
        <Method Name="GetGroup" Id="3773" Desc="Gets the name of the tradeskill that the achievement belongs to, if any.">
            <ReturnValue Type="String" Id="10969"/>
        </Method>
        <Method Name="GetSubGroup" Id="3774" Desc="Returns the name of the subgroup that the achievement belongs to.">
            <ReturnValue Type="String" Id="8200"/>
        </Method>
        <Method Name="GetTradeskillLayout" Id="6638" Desc="Returns the position information for the achievement and its parents.">
            <ReturnValue Type="Table" Id="8205">
                <Item Name="nX" Desc="The X coordinate of the Achievement node" Type="Integer" Id="8206"/>
                <Item Name="nY" Desc="The Y coordinate of the Achievement node" Type="Integer" Id="8207"/>
                <Item Name="arParents" Desc="The position of the parent" Type="Table" Array="true" Id="8208">
                    <Item Name="x" Desc="The X coordinate of the parent" Type="Integer" Id="10976"/>
                    <Item Name="y" Desc="The Y coordinate of the parent" Type="Integer" Id="10977"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="IsComplete" Id="6639" Desc="Determines whether or not the Achievement has been completed.">
            <ReturnValue Type="Boolean" Id="10993"/>
        </Method>
        <Method Name="GetDateCompleted" Id="6640" Desc="Returns a string with the date that the achievement was completed.  The formatting for the date varies based on which language is being used on the 
client">
            <ReturnValue Type="String" Id="10968" Desc="The date that the achievement was completed.  This date is localized for different regions."/>
        </Method>
        <Method Name="GetPoints" Id="6641" Desc="Returns the number of achievement points granted when the achievement is completed">
            <ReturnValue Type="Integer" Id="15414"/>
        </Method>
        <Method Name="GetParentTier" Id="6642" Desc="Returns the parent achievement of a multi-tier achievement.">
            <ReturnValue Type="Achievement" Id="10973"/>
        </Method>
        <Method Name="GetChildTier" Id="6643" Desc="Returns the previous step of a multi-stage achievement." Remarks="Multi-stage achievements are ones that have multiple tiers of progression.  A good example of this is the PvP Achievement &quot;Cracked Your First Skull&quot;.">
            <ReturnValue Type="Achievement" Id="10965"/>
        </Method>
        <Method Name="GetWorldZoneId" Id="6644" Desc="Returns the zone id where this achievement can be completed.">
            <ReturnValue Type="Integer" Id="10991"/>
        </Method>
        <Method Name="GetNumCompleted" Id="6645" Desc="Returns the character&apos;s progress on this achievement.  ">
            <ReturnValue Type="Integer" Id="10970"/>
        </Method>
        <Method Name="GetNumNeeded" Id="6646" Desc="Returns the amount of progress that is required to complete this achievement">
            <ReturnValue Type="Integer" Id="10971"/>
        </Method>
        <Method Name="IsChecklist" Id="6647" Desc="Determines if the Achievement requires multiple different steps to complete it">
            <ReturnValue Type="Boolean" Id="10992" Desc="Whether the achievmemnt is a checklist or not."/>
        </Method>
        <Method Name="GetChecklistItems" Id="6648" Desc="Returns a list of things required to complete this achievement">
            <ReturnValue Type="Table" Array="true" Id="10961">
                <Item Name="strChecklistEntry" Desc="The name of this checklist item.  This can be a description of a step of
the achievement, the name of an item that must be crafted, or the name
of a schematic that must be learned." Type="String" Id="10962"/>
                <Item Name="bIsComplete" Desc="Whether or not this step of the achievement is complete" Type="Boolean" Id="10963"/>
                <Item Name="idSchematic" Desc="The id number of the schematic that must be learned or is the source
of the item required for this part of the achievement." Type="Integer" Id="10964"/>
            </ReturnValue>
        </Method>
        <Method Name="GetRewards" Id="6652" Desc="Returns any title that is granted when the achievement is completed.">
            <ReturnValue Type="CharacterTitle" Id="10974"/>
        </Method>
        <Method Name="GetTradeskillRewards" Id="6653" Desc="Returns a description of various rewards that a tradeskill achievement grants">
            <ReturnValue Type="Table" Id="10978">
                <Item Name="idFaction" Desc="The id for the faction that the achievement gives rep with" Type="Integer" Id="10979"/>
                <Item Name="nFactionAmount" Desc="The amount of reputation granted by the tradeskill" Type="Integer" Id="10980"/>
                <Item Name="nTalentPoints" Desc="The number of tradeskill talent points granted by the Achievement" Type="Integer" Id="10981"/>
                <Item Type="Table" Name="arSchematics" Array="true" Desc="A list of tradeskill schematics that are unlocked by this Achievement" Id="10983">
                    <Item Name="idSchematic" Desc="The id number for the schematic that the Achievement grants" Type="Integer" Id="10984"/>
                    <Item Name="itemCrafted" Desc="The item created by the schematic that is granted by the Achievement" Type="Item" Id="10985"/>
                </Item>
                <Item Type="Table" Name="arBonuses" Desc="A list of Tradeskill bonuses granted by this Achievement" Array="true" Id="10986">
                    <Item Name="strIcon" Desc="The name of the icon used for the bonus granted by this Achievement" Type="String" Id="10987"/>
                    <Item Name="strName" Desc="The name of the bonus granted by this Achievement" Type="String" Id="10988"/>
                    <Item Name="strTooltip" Desc="The tooltip string for the bonus granted by this Achievement" Type="String" Id="10989"/>
                </Item>
            </ReturnValue>
        </Method>
        <Method Name="GetTradeskillSchematicsRequired" Id="6654" Desc="Returns a list of schematic ids that the character must know before unlocking this Achievement.">
            <ReturnValue Type="Integer" Array="true" Id="10990" Desc="An array of schematic ids the character must know before the achievement is unlocked."/>
        </Method>
        <Function Name="is" Id="6655" Desc="Determines whether the given variable is an Achievement">
            <Param Name="oVariable" Desc="The variable that is being checked." Id="10958" Type="Any"/>
            <ReturnValue Type="Boolean" Id="10959"/>
        </Function>
        <Method Name="IsGuildAchievement" Id="7904" Desc="Determines if an Achievement is a Guild Achievement">
            <ReturnValue Type="Boolean" Id="10994"/>
        </Method>
        <Method Name="GetSubGroupId" Id="8733" Desc="Returns the id number of the subgroup that the achievement belongs to.">
            <ReturnValue Type="Integer" Id="10975"/>
        </Method>
        <Method Name="__eq" Id="13239" Desc="Determines if the Achievement that is passed in is the same as the achievement that called this function.">
            <Param Name="achCompare" Desc="The achievement that will be compared to the one that called this function." Type="Achievement" Id="17007"/>
            <ReturnValue Type="Boolean" Desc="Whether the two Achievements were the same or not." Id="17008"/>
        </Method>
        <Method Name="__gc" Id="13240" Desc="Manually calls the Achievement&apos;s garbage collector."/>
        <Method Name="IsCurrencyShown" Id="14875" Desc="Determines whether the achievent requires currency to be completed.">
            <ReturnValue Type="Boolean" Desc="If the achievement requires currency, this will return true." Id="15413"/>
        </Method>
        <Method Name="GetCurrencySystem" Id="14876" Desc="Gets the type of currency required to progress the spefied Achievement.">
            <ReturnValue Type="Money.CodeEnumCurrencyType" Desc="The type of money the player" Id="15412"/>
        </Method>
        <Method Name="IsTimed" Incomplete="true" Id="6649" Deleted="true"/>
        <Method Name="GetBestTime" Incomplete="true" Id="6650" Deleted="true"/>
        <Method Name="GetTimeNeeded" Incomplete="true" Id="6651" Deleted="true"/>
    </Object>
    <Object Name="HexGroups" Incomplete="true" Id="4043" Prefix="hex">
        <Method Name="__eq" Incomplete="true" Id="13241"/>
        <Method Name="__gc" Incomplete="true" Id="13242"/>
    </Object>
    <Object Name="MatchingGame" Incomplete="true" Id="4050" Prefix="match">
        <Function Name="GetSelectedRoles" Incomplete="true" Id="7932" Remarks="Known Issue: The values returned from this function carry over to characters with the same name on the same realm and same account.  Because of this, the selected roles may be different than the roles the new character is eligible for."/>
        <EnumSet Name="MatchType" Incomplete="true" Id="7945">
            <Enum Name="Event" Id="14877"/>
            <Enum Name="Shiphand" Id="17136"/>
        </EnumSet>
        <EnumSet Name="RatingType" Incomplete="true" Id="7976">
            <Enum Name="Warplot" Id="8734"/>
        </EnumSet>
        <Method Name="GetMinLevel" Incomplete="true" Id="8735"/>
        <Method Name="GetMaxLevel" Incomplete="true" Id="8736"/>
        <Method Name="GetTeamSize" Incomplete="true" Id="8737"/>
        <Method Name="GetMinGearScore" Incomplete="true" Id="8738"/>
        <Function Name="Queue" Incomplete="true" Id="8739"/>
        <Function Name="QueueAsGroup" Incomplete="true" Id="8740"/>
        <Function Name="IsQueuedForRealmOnly" Incomplete="true" Id="8741"/>
        <Function Name="IsMatchingGameFinished" Incomplete="true" Id="8742"/>
        <Function Name="IsVoteSurrenderActive" Incomplete="true" Id="8743"/>
        <Function Name="CastVoteSurrender" Incomplete="true" Id="8744"/>
        <Function Name="InitiateVoteToSurrender" Incomplete="true" Id="8745"/>
        <Function Name="GetWarPlotBattleState" Incomplete="true" Id="8746"/>
        <EnumSet Name="PvpDeathReason" Incomplete="true" Id="8747">
            <Enum Name="KilledByPlayer" Id="8748"/>
            <Enum Name="KilledByCreature" Id="8749"/>
            <Enum Name="Falling" Id="8750"/>
            <Enum Name="Drowning" Id="8751"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13243"/>
        <Function Name="GetMatchingGameType" Incomplete="true" Id="17137"/>
        <Method Name="GetReward" Incomplete="true" Id="17227"/>
        <Method Name="Queue" Incomplete="true" Id="7909" Deleted="true"/>
        <Method Name="QueueAsGroup" Incomplete="true" Id="7910" Deleted="true"/>
    </Object>
    <Object Name="PathEpisode" Incomplete="true" Id="4109" Prefix="pe">
        <Method Name="__eq" Incomplete="true" Id="13244"/>
        <Method Name="__gc" Incomplete="true" Id="13245"/>
    </Object>
    <Object Name="SettlerImprovement" Incomplete="true" Id="4199" Prefix="set">
        <Method Name="__eq" Incomplete="true" Id="13246"/>
        <Method Name="__gc" Incomplete="true" Id="13247"/>
    </Object>
    <Object Name="SoldierImprovement" Incomplete="true" Id="4289" Prefix="sol">
        <Method Name="__eq" Incomplete="true" Id="13248"/>
        <Method Name="__gc" Incomplete="true" Id="13249"/>
    </Object>
    <Object Name="SoldierEvent" Incomplete="true" Id="4379" Prefix="se">
        <Method Name="__eq" Incomplete="true" Id="13250"/>
        <Method Name="__gc" Incomplete="true" Id="13251"/>
    </Object>
    <Object Name="ScientistScanBotProfile" Incomplete="true" Id="4469" Prefix="sbp">
        <Method Name="GetCustomization" Incomplete="true" Id="8752"/>
        <Method Name="__eq" Incomplete="true" Id="13252"/>
        <Method Name="__gc" Incomplete="true" Id="13253"/>
    </Object>
    <Object Name="QuestCategory" Incomplete="true" Id="4559" Prefix="qc">
        <Method Name="__eq" Incomplete="true" Id="13254"/>
        <Method Name="__gc" Incomplete="true" Id="13255"/>
        <Method Name="GetCategoryType" Incomplete="true" Id="17138"/>
    </Object>
    <Object Name="ApolloColor" Id="4564" Desc="ApolloColors are the primary way that the UI uses colors.  There are a number predefined colors, which can be found under Virtual colors section of Houston&apos;s color chooser.  Addon developers can also create their own ApolloColors using a string with the color&apos;s ARGB values in hex format." Prefix="cr">
        <Function Name="new" Id="5491" Desc="Creates a new ApolloColor object." NeedProofread="true" InternalNotes="This is a pain to write simply because there are so many different options for what kinds of variables can be passed in." Remarks="This can be created using  a string with the ApolloColor&apos;s name, a string with the color&apos;s ARGB values in hex, a table with the color&apos;s ARGB values, or a set of integers using the ARGB values.  "/>
        <Function Name="is" Id="5492" Desc="Validates that the variable passed in is an ApolloColor.">
            <Param Name="oVariable" Desc="The variable that we are checking." Type="Variable" Id="15627"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is an ApolloColor or not." Id="15628"/>
        </Function>
        <Function Name="SetColor" Id="5493" Desc="Sets a named ApolloColor to the value of a CColor.">
            <Param Name="strColorName" Desc="The name of the ApolloColor that is being updated." Type="String" Id="15631"/>
            <Param Name="crUpdatedValues" Desc="The CColor that the ApolloColor is being updated to." Type="CColor" Id="15632"/>
            <ReturnValue Type="Boolean" Desc="Whether the ApolloColor was successfully updated or not." Id="15633"/>
        </Function>
        <Method Name="IsSameColorAs" Id="5494" Desc="Checks if two ApolloColors share the same color." Example="This function can compare virtual colors and hardcoded colors successfully.">
            <Param Name="crChecking" Desc="The ApolloColor that we are checking against." Type="ApolloColor" Id="15639"/>
            <ReturnValue Type="Boolean" Desc="Whether the ApolloColors share the same color." Id="15640"/>
        </Method>
        <Method Name="ToTable" Id="5495" Desc="Returns a table with the ApolloColor&apos;s RGBA values.">
            <ReturnValue Type="Table" Desc="The color&apos;s RGBA values." Id="15641">
                <Item Name="r" Type="Float" Desc="The color&apos;s red value." Id="15642"/>
                <Item Name="g" Desc="The color&apos;s green value." Type="Float" Id="15643"/>
                <Item Name="b" Desc="The color&apos;s blue value." Type="Float" Id="15644"/>
                <Item Name="a" Desc="The color&apos;s alpha value." Type="Float" Id="15645"/>
            </ReturnValue>
        </Method>
        <Method Name="IsLinked" Id="5496" Desc="Determines whether the ApolloColor is using a virtual color or not.">
            <ReturnValue Type="Boolean" Desc="Whether the ApolloColor is set to a virtual color or a hardcoded value." Id="15638"/>
        </Method>
        <Method Name="__eq" Id="13256" Desc="Checks if two ApolloColors are the same." NotStandard="true" InternalNotes="Is this necessary when we have the IsSameColorAs function?">
            <Param Name="crChecking" Desc="The ApolloColor that the function will check against." Type="ApolloColor" Id="15634"/>
            <ReturnValue Type="Boolean" Desc="Whether the two ApolloColors are equal or not." Id="15635"/>
        </Method>
        <Method Name="__gc" Id="13257" Desc="ApolloColor&apos;s garbage collection function.  This will delete the ApolloColor from memory." NotStandard="true" InternalNotes="Do we ever want to explicitly call a garbage collection function in Lua?"/>
        <Method Name="__index" Id="13258" NotStandard="true" InternalNotes="Is this necessary when we can convert it to a table?" Desc="Returns the ApolloColor&apos;s value at the specified index.">
            <Param Name="strIndex" Desc="The index of the value that should be returned.  This will either be &quot;r&quot; for the color&apos;s red value, &quot;b&quot; for the color&apos;s blue value, &quot;g&quot; for the color&apos;s green value, or &quot;a&quot; for the color&apos;s alpha value." Type="String" Id="15636"/>
            <ReturnValue Type="Float" Desc="The color value at the specified index." Id="15637"/>
        </Method>
    </Object>
    <WindowControl Name="TickerWnd" Incomplete="true" Id="4571" Parent="Window"/>
    <WindowControl Name="BuffContainerWindow" Incomplete="true" Id="4327" Parent="Window"/>
    <Library Name="MarketplaceLib" Incomplete="true" Id="4330">
        <EnumSet Name="AuctionPostResult" Incomplete="true" Id="8055">
            <Enum Name="NotEnoughToFillQuantity" Id="8753"/>
            <Enum Name="NotEnoughCash" Id="8754"/>
            <Enum Name="ItemAuctionDisabled" Id="10807"/>
            <Enum Name="CommodityDisabled" Id="10808"/>
        </EnumSet>
        <EnumSet Name="AuctionSort" Incomplete="true" Id="8068">
            <Enum Name="Property" Id="8755"/>
            <Enum Name="Property0" Id="8072" Deleted="true"/>
            <Enum Name="Property1" Id="8073" Deleted="true"/>
            <Enum Name="Property2" Id="8074" Deleted="true"/>
            <Enum Name="Property3" Id="8075" Deleted="true"/>
            <Enum Name="Property4" Id="8076" Deleted="true"/>
        </EnumSet>
        <Function Name="GetItemAuctionCost" Incomplete="true" Id="8756"/>
        <Function Name="GetItemProperties" Incomplete="true" Id="8757"/>
        <EnumSet Name="ItemAuctionFilterData" Incomplete="true" Id="8758">
            <Enum Name="ItemAuctionFilterPropertyMin" Id="8759"/>
            <Enum Name="ItemAuctionFilterPropertyMax" Id="8760"/>
            <Enum Name="ItemAuctionFilterLevel" Id="8761"/>
            <Enum Name="ItemAuctionFilterQuality" Id="8762"/>
            <Enum Name="ItemAuctionFilterGlyphSlot" Id="8763"/>
            <Enum Name="ItemAuctionFilterBuyoutMax" Id="8764"/>
            <Enum Name="ItemAuctionFilterEquippableBy" Id="8765"/>
            <Enum Name="ItemAuctionFilterRuneSlot" Id="16473"/>
        </EnumSet>
    </Library>
    <Object Name="CommodityOrder" Id="4349" Prefix="order" Desc="A buy or sell order on the commodities exchange.">
        <Method Name="GetItem" Id="8077" Desc="Gets the item that the CommodityOrder is trying to buy or sell.">
            <ReturnValue Type="Item" Desc="The item that the CommodityOrder is looking for or selling." Id="16012"/>
        </Method>
        <Method Name="GetCount" Id="8078" Desc="Gets the number of items left in the CommodityOrder">
            <ReturnValue Type="Integer" Desc="The number of items that the CommodityOrder will try to buy or sell before it ends." Id="16010"/>
        </Method>
        <Method Name="GetPricePerUnit" Incomplete="true" Id="8079" Desc="Gets the amount of money that the CommodityOrder is buying or selling its associated item for.">
            <ReturnValue Type="Money" Desc="How much the Commodity Order is trying to buy or sell its item for." Id="16014"/>
        </Method>
        <Method Name="GetReservePricePerUnit" Id="8080" Deprecated="true" InternalNotes="Unsure, but I don&apos;t think these have a reserve price."/>
        <Method Name="GetListTime" Id="8081" NotStandard="true" InternalNotes="Why are Time objects so bad!?!?!" Desc="Gets the amount of time between Jan 1st, 1970 and when the Commodity Order was posted, in seconds.">
            <ReturnValue Type="Time" Desc="The number of seconds between Jan 1st, 1970 and when the Commodity Order was posted" Id="16013"/>
        </Method>
        <Method Name="GetExpirationTime" Id="8082" NotStandard="true" InternalNotes="We should really be getting the exact number of seconds before passing this to Lua" Desc="Gets the number of seconds between Jan 1st, 1970 and when the commodity order will expire.">
            <ReturnValue Type="Integer" Desc="The number of seconds between Jan 1st, 1970 and when the commodity order will expire." Id="16011"/>
        </Method>
        <Method Name="IsBuy" Incomplete="true" Id="8083" Desc="Determines if a CommodityOrder is a buy order or sell order.">
            <ReturnValue Type="Boolean" Desc="If this is true, then the order is a buy order.  Otherwise, it&apos;s a sell order." Id="16017"/>
        </Method>
        <Method Name="IsForceImmediate" Id="8084" Desc="Determines if the buy or sell order is set up to find the CommodityOrder of the opposite type with the best price for the same item so it completes immediately.">
            <ReturnValue Type="Boolean" Desc="Whether the CommodityOrder is trying to buy or sell the item immediately." Id="16020"/>
        </Method>
        <Method Name="SetCount" Id="8085" Desc="Sets the number of items that the CommodityOrder is looking to buy or sell before it is completed.">
            <Param Name="nNewCount" Desc="The value that the function will try to change the CommodityOrder&apos;s count to." Type="Integer" Id="16022"/>
            <ReturnValue Type="Boolean" Desc="Whether the count was successfully updated or not." Id="16023"/>
        </Method>
        <Method Name="SetPrices" Id="8086" Desc="Sets the price that the CommodityOrder will try to buy or sell its items for.">
            <Param Name="monPrice" Desc="The amount that the commodity order will attempt to buy or sell its items for per unit." Type="Money" Id="16028"/>
            <ReturnValue Type="Boolean" Desc="Whether the price was successfully set or not." Id="16029"/>
        </Method>
        <Method Name="SetForceImmediate" Id="8087" Desc="Changes the CommodityOrder so it attempts to buy or sell its items for the best price when it is posted.">
            <ReturnValue Type="Boolean" Desc="Whether the CommodityOrder&apos;s &quot;force immediate&quot; flag was successfully set or not." Id="16025"/>
            <Param Name="bSellNow" Desc="The value that the CommodityOrder&apos;s &quot;force immediate&quot; flag will be changed to." Type="Boolean" Id="16026"/>
        </Method>
        <Method Name="IsPosted" Incomplete="true" Id="8088" Desc="Determines if the CommodityOrder is already posted or not.">
            <ReturnValue Type="Boolean" Desc="Whether the CommodityOrder was already posted or not." Id="16021"/>
        </Method>
        <Method Name="CanPost" Id="8089" Desc="Determines if the CommodityOrder can be posted." Remarks="A CommodityOrder cannot be posted if it is already posted, if the order is for less than 1 item, if the price per unit is less than 1 copper, or if the player is already at their maximum number of commodity orders.">
            <ReturnValue Type="Boolean" Desc="Whether the CommodityOrder can be posted or not." Id="16009"/>
        </Method>
        <Method Name="Post" Id="8090" Desc="Attempts to post the CommodityOrder on the Commodities Market." Remarks="The PostCommodityOrderResult event will fire in response to this function."/>
        <Method Name="Cancel" Id="8091" Desc="Cancels an active CommodityOrder" Remarks="Any items or money remaining in the order will be mailed to the player after it is canceled."/>
        <Function Name="is" Id="8092" Desc="Determines if a variable is a CommodityOrder or not.">
            <Param Name="oVariable" Desc="The variable that the function will check." Type="Variable" Id="16000"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is a CommodityOrder or not." Id="16001"/>
        </Function>
        <Function Name="newBuyOrder" Id="8093" Desc="Creates a new Buy order for the given item." Remarks="The new order will have a count, and price per unit of 1 after it is created.">
            <Param Name="itemTarget" Desc="The item that the buy order will try to purchase." Type="Item" Id="16002"/>
            <ReturnValue Type="CommodityOrder" Desc="The new buy order that was created." Id="16003"/>
        </Function>
        <Function Name="newSellOrder" Incomplete="true" Id="8094" Desc="Creates a new Sell order for the given item." Remarks="The new order will have a count, and price per unit of 1 after it is created.">
            <Param Name="itemSelling" Desc="The item that the sell order will attempt to sell." Type="Item" Id="16004"/>
            <ReturnValue Type="CommodityOrder" Desc="A new Sell order for the given item." Id="16005"/>
        </Function>
        <Method Name="__eq" Id="13259" Desc="Checks whether the given CommodityOrder is equal to the one that called this function.">
            <Param Name="orderCompare" Desc="The CommodityOrder that will be compared to the one that called this function." Type="CommodityOrder" Id="16006"/>
            <ReturnValue Type="Boolean" Desc="Whether the two CommodityOrders are the same." Id="16007"/>
        </Method>
        <Method Name="__gc" Id="13260" Desc="The garbage collection function for the CommodityOrder.  This should never have to be called from Lua."/>
        <Method Name="GetTax" Id="14878" Desc="Gets the amount of money that the player has to pay to post a Sell order.">
            <ReturnValue Type="Money" Desc="The amount of money that is required to post the sell order." Id="16016"/>
        </Method>
    </Object>
    <Library Name="GuildLib" Id="4764" Desc="This library contains functions and enumerations having to do with guilds and arena teams">
        <Function Name="Accept" Incomplete="true" Id="12505"/>
        <Function Name="Decline" Incomplete="true" Id="12506"/>
        <Function Name="Create" Incomplete="true" Id="12507"/>
        <Function Name="GetGuilds" Incomplete="true" Id="12508"/>
        <Function Name="IsLoading" Incomplete="true" Id="12509"/>
        <Function Name="GetDyes" Incomplete="true" Id="12510"/>
        <Function Name="GetBannerScanLines" Incomplete="true" Id="12511"/>
        <Function Name="GetBannerBackgroundIcons" Incomplete="true" Id="12512"/>
        <Function Name="GetBannerForegroundIcons" Incomplete="true" Id="12513"/>
        <Function Name="GetPermissions" Incomplete="true" Id="12514"/>
        <Function Name="GetBankWithdrawLimits" Incomplete="true" Id="12515"/>
        <Function Name="GetHolomarkModifyCost" Incomplete="true" Id="12516"/>
        <Function Name="GetCreateCost" Incomplete="true" Id="12517"/>
        <Function Name="GetMinimumLevel" Incomplete="true" Id="12518"/>
        <EnumSet Name="CodeEnumGuildEventType" Incomplete="true" Id="12519">
            <Enum Name="Achievement" Id="12520"/>
            <Enum Name="PerkUnlock" Id="12521"/>
            <Enum Name="PerkActivate" Id="12522"/>
            <Enum Name="MemberAdded" Id="12523"/>
            <Enum Name="MemberRemoved" Id="12524"/>
            <Enum Name="MemberRankChanged" Id="12525"/>
            <Enum Name="MessageOfTheDay" Id="12526"/>
            <Enum Name="BankMoney" Id="12527"/>
            <Enum Name="ItemRepair" Id="12528"/>
            <Enum Name="BankTab" Id="12529"/>
        </EnumSet>
        <EnumSet Name="Perk" Incomplete="true" Id="12530">
            <Enum Name="BankTab5" Id="13261"/>
            <Enum Name="BankTab2" Id="13262"/>
            <Enum Name="BankTab3" Id="13263"/>
            <Enum Name="BankTab4" Id="13264"/>
            <Enum Name="BankTab1" Id="13265"/>
            <Enum Name="Tier6Unlock" Id="13266"/>
            <Enum Name="Tier2Unlock" Id="13267"/>
            <Enum Name="Tier5Unlock" Id="13268"/>
            <Enum Name="Tier3Unlock" Id="13269"/>
            <Enum Name="Tier4Unlock" Id="13270"/>
        </EnumSet>
        <Function Name="PrepareInfractionReportInvite" Incomplete="true" Id="14879"/>
        <Function Name="RecruitmentGetActiveGuilds" Incomplete="true" Id="17139"/>
        <Function Name="RecruitmentSubscribe" Incomplete="true" Id="17140"/>
        <Function Name="RecruitmentUnsubscribe" Incomplete="true" Id="17141"/>
    </Library>
    <Library Name="PetCustomizationLib" Incomplete="true" Id="5570">
        <Function Name="GetCustomization" Incomplete="true" Id="8766"/>
        <Function Name="CanCustomize" Incomplete="true" Id="8767"/>
        <EnumSet Name="MountSlot" Incomplete="true" Id="8768">
            <Enum Name="Front" Id="8769"/>
            <Enum Name="Back" Id="8770"/>
            <Enum Name="Left" Id="8771"/>
            <Enum Name="Right" Id="8772"/>
        </EnumSet>
        <EnumSet Name="HoverboardSlot" Incomplete="true" Id="8773">
            <Enum Name="Front" Id="8774"/>
            <Enum Name="Back" Id="8775"/>
            <Enum Name="Sides" Id="8776"/>
        </EnumSet>
        <EnumSet Name="PetType" Incomplete="true" Id="8777">
            <Enum Name="Scanbot" Id="8778"/>
            <Enum Name="GroundMount" Id="8779"/>
            <Enum Name="HoverBoard" Id="8780"/>
        </EnumSet>
        <EnumSet Name="PetCustomizeResult" Incomplete="true" Id="13271">
            <Enum Name="PetTypeNotSupported" Id="13272"/>
            <Enum Name="InvalidName" Id="13273"/>
            <Enum Name="InvalidSlot" Id="13274"/>
            <Enum Name="UnknownFlairType" Id="13275"/>
            <Enum Name="InvalidFlair" Id="13276"/>
            <Enum Name="NotUnlocked" Id="13277"/>
            <Enum Name="InvalidObject" Id="13278"/>
        </EnumSet>
    </Library>
    <Object Name="ItemAuction" Incomplete="true" Id="5572" Prefix="auct">
        <Method Name="GetTimeRemainingEnum" Incomplete="true" Id="8781"/>
        <Method Name="IsTopBidder" Incomplete="true" Id="9111"/>
        <EnumSet Name="CodeEnumAuctionRemaining" Incomplete="true" Id="10830">
            <Enum Name="Expiring" Id="10831"/>
            <Enum Name="LessThanHour" Id="10832"/>
            <Enum Name="Short" Id="10833"/>
            <Enum Name="Long" Id="10834"/>
            <Enum Name="Very_Long" Id="10835"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="13279"/>
        <Method Name="__gc" Incomplete="true" Id="13280"/>
        <Method Name="GetItemModdableData" Incomplete="true" Id="8097" Deleted="true"/>
    </Object>
    <Object Name="PetFlair" Incomplete="true" Id="5584">
        <Method Name="GetId" Incomplete="true" Id="8782"/>
        <Method Name="GetTooltip" Incomplete="true" Id="8783"/>
        <Method Name="GetItemDisplay" Incomplete="true" Id="8784"/>
        <Method Name="__eq" Incomplete="true" Id="13281"/>
        <Method Name="__gc" Incomplete="true" Id="13282"/>
        <Method Name="GetUnlockCount" Incomplete="true" Id="14880"/>
    </Object>
    <Object Name="PetCustomization" Incomplete="true" Id="5596" Prefix="cust">
        <Method Name="ClearFlairInSlot" Incomplete="true" Id="8785"/>
        <Method Name="GetSlotsByFlairType" Incomplete="true" Id="8786"/>
        <Method Name="GetPreviewAttachSlot" Incomplete="true" Id="8787"/>
        <Method Name="__eq" Incomplete="true" Id="13283"/>
        <Method Name="__gc" Incomplete="true" Id="13284"/>
    </Object>
    <WindowControl Name="SendEmailButton" Incomplete="true" Id="5608" Parent="Window"/>
    <WindowControl Name="TradeCommitButton" Incomplete="true" Id="5612" Parent="Window"/>
    <Object Name="DialogSys" Id="2704" InternalNotes="Shouldn&apos;t this be a library?" Desc="Dialogs are the chat bubbles that appear when speaking with an NPC.  They can be used for accepting and turning in quests and other conversations with NPCs.  This library allows the player to get information on the currently displayed dialog.">
        <Function Name="GetState" Id="10024" Desc="Gets the dialog&apos;s current state." NotStandard="true" InternalNotes="Need to make DialogSys.DialogState an enum.">
            <ReturnValue Type="Integer" Desc="The dialog&apos;s current state.  This value lines up with the DialogSys_DialogState set of constants." Id="16940"/>
        </Function>
        <Function Name="GetResponses" Id="10025" Desc="Gets a list of possible responses that the player can send.">
            <Param Name="idQuest" Desc="The id number of the quest that is giving the player responses." Type="Integer" Id="16936"/>
            <ReturnValue Type="String" Desc="The list of responses the player can select for the dialog." Array="true" Id="16937"/>
        </Function>
        <Function Name="End" Id="10026" Desc="Cancels the current dialog."/>
        <Function Name="GetViewableQuest" Id="10027" Desc="Grabs the quest with the specified id if it is the one that the dialog is using." InternalNotes="This should be moved to the quest library or game library or somewhere other than dialogsys">
            <Param Name="idQuest" Desc="The id number of the quest that the function will try to match with any quest that the current dialog is displaying." Type="Integer" Id="16941"/>
            <ReturnValue Type="Quest" Desc="The quest with the specified id.  If the dialog was not showing a quest or was showing a quest with a different id, this will be nil." Id="16942"/>
        </Function>
        <Function Name="GetCommCreatureId" Id="10028" Desc="Gets the id number of the NPC associated with the current dialog.">
            <ReturnValue Type="Integer" Desc="The id number of the NPC that is tied to the dialog." Id="16928"/>
        </Function>
        <Function Name="GetNPC" Id="10029" Desc="Gets the unit associated with the dialog.">
            <ReturnValue Type="Unit" Desc="The unit associated with the dialog." Id="16929"/>
        </Function>
        <Function Name="GetNPCText" Id="10030" Desc="Gets the string that contains the NPC&apos;s text.  This will also play any VO associated with this dialog.">
            <Param Name="idQuest" Desc="The id number of the quest that the dialog is associated with." Type="Integer" Id="16930"/>
            <ReturnValue Type="string" Desc="The text that the dialog should show for the NPC." Id="16931"/>
        </Function>
        <Function Name="GetResponseText" Id="10031" Desc="Gets the text that the player is responding to.">
            <ReturnValue Type="String" Desc="The text that the player&apos;s responses o" Id="16938"/>
        </Function>
        <Function Name="IsItemQuestGiver" Id="10032" Desc="Checks if the dialog was triggered by an item that is granting a quest.">
            <ReturnValue Type="Boolean" Desc="Whether the quest is granted by an item or not." Id="16943"/>
        </Function>
    </Object>
    <WindowControl Name="ActionConfirmButton" Incomplete="true" Id="8788" Parent="Window">
        <Method Name="SetActionData" Incomplete="true" Id="8789"/>
        <Event Name="SalvageItemRequested" Incomplete="true" Id="8790"/>
        <Event Name="DeleteItemRequested" Incomplete="true" Id="8791"/>
        <Event Name="EmailSent" Incomplete="true" Id="8792"/>
        <Event Name="AccountPendingItemsClaimed" Id="13311" Incomplete="true"/>
        <Event Name="AccountPendingItemsGifted" Id="13312" Incomplete="true"/>
        <Event Name="AccountPendingItemsReturned" Id="13313" Incomplete="true"/>
        <Event Name="AccountPendingItemTook" Id="13314" Incomplete="true"/>
        <Event Name="CREDDExchangeOrderSubmitted" Id="13315" Incomplete="true"/>
        <Event Name="ItemAuctionSellOrderSubmitted" Id="13341" Incomplete="true"/>
        <Event Name="ItemAuctionBuyOrderSubmitted" Id="13343" Incomplete="true">
            <Param Name="bSuccess" Type="Boolean" Id="13347"/>
        </Event>
        <Event Name="MarketplaceCommoditiesSubmitted" Id="13344" Incomplete="true">
            <Param Name="bSuccess" Type="Boolean" Id="13346"/>
        </Event>
        <Event Name="AccountCREDDRedeemed" Id="13348" Incomplete="true"/>
        <Event Name="CraftingBotched" Id="13351" Incomplete="true"/>
        <Event Name="MatchingGameRespondedToPending" Id="13440" Incomplete="true">
            <Param Name="bResponse" Desc="Was the matching game accepted or declined" Type="Boolean" Id="13442"/>
        </Event>
        <Event Name="ItemConfirmSoulboundOnEquip" Incomplete="true" Id="13957"/>
        <Event Name="GenericMapNodeChosen" Id="14142"/>
        <Event Name="EquipItemRequested" Incomplete="true" Id="14881"/>
        <Event Name="StringCopiedToClipboard" Incomplete="true" Id="14882"/>
        <Event Name="ReportPlayerComplete" Incomplete="true" Id="14883"/>
        <Event Name="SupportTicketSubmitted" Incomplete="true" Id="14884"/>
        <Event Name="LootItemRequested" Incomplete="true" Id="16474"/>
        <Event Name="RuneSlotRerolled" Id="17005"/>
        <Event Name="RuneSlotRerollCompleted" Id="17006"/>
        <Event Name="EldanForgeRequested" Incomplete="true" Id="17142"/>
    </WindowControl>
    <Library Name="AccountItemLib" Incomplete="true" Id="8793" InternalNotes="Temporarily skipping this since idk much about how this works.">
        <Function Name="GetPendingAccountSingleItems" Incomplete="true" Id="8794"/>
        <Function Name="GetPendingAccountItemGroups" Incomplete="true" Id="8795"/>
        <Function Name="GetAccountItems" Incomplete="true" Id="8796"/>
        <Function Name="GetAccountEntitlements" Incomplete="true" Id="8797"/>
        <Function Name="GetCharacterEntitlements" Incomplete="true" Id="8798"/>
        <Function Name="ClaimPendingSingleItem" Incomplete="true" Id="8799"/>
        <Function Name="ClaimPendingItemGroup" Incomplete="true" Id="8800"/>
        <Function Name="ReturnPendingSingleItem" Incomplete="true" Id="8801"/>
        <Function Name="ReturnPendingItemGroup" Incomplete="true" Id="8802"/>
        <Function Name="TakeAccountItem" Incomplete="true" Id="8803"/>
        <Function Name="GiftPendingItemToCharacter" Incomplete="true" Id="8804"/>
        <Function Name="GiftPendingItemGroupToCharacter" Incomplete="true" Id="8805"/>
        <Function Name="GiftPendingItemToAccount" Incomplete="true" Id="8806"/>
        <Function Name="GiftPendingItemGroupToAccount" Incomplete="true" Id="8807"/>
        <Function Name="RedeemCoupon" Incomplete="true" Id="8808"/>
        <Function Name="GetInstantEventCount" Incomplete="true" Id="8809"/>
        <Function Name="GetAccountCurrency" Incomplete="true" Id="10852"/>
        <EnumSet Name="CodeEnumAccountCurrency" Incomplete="true" Id="10853">
            <Enum Name="None" Id="10854"/>
            <Enum Name="CREDD" Id="10855"/>
            <Enum Name="RealmTransfer" Id="10856"/>
            <Enum Name="NameChange" Id="12539"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountOperationResult" Incomplete="true" Id="10857">
            <Enum Name="Ok" Id="10858"/>
            <Enum Name="GenericFail" Id="10859"/>
            <Enum Name="DBError" Id="10860"/>
            <Enum Name="MTXError" Id="10861"/>
            <Enum Name="InvalidOffer" Id="10862"/>
            <Enum Name="InvalidPrice" Id="10863"/>
            <Enum Name="NotEnoughCurrency" Id="10864"/>
            <Enum Name="NeedTransaction" Id="10865"/>
            <Enum Name="InvalidAccountItem" Id="10866"/>
            <Enum Name="InvalidPendingItem" Id="10867"/>
            <Enum Name="InvalidInventoryItem" Id="10868"/>
            <Enum Name="NoConnection" Id="10869"/>
            <Enum Name="NoCharacter" Id="10870"/>
            <Enum Name="AlreadyClaimed" Id="10871"/>
            <Enum Name="MaxEntitlementCount" Id="10872"/>
            <Enum Name="NoRegift" Id="10873"/>
            <Enum Name="NoGifting" Id="10874"/>
            <Enum Name="InvalidFriend" Id="10875"/>
            <Enum Name="InvalidCoupon" Id="10876"/>
            <Enum Name="CannotReturn" Id="10877"/>
            <Enum Name="Prereq" Id="10878"/>
            <Enum Name="CREDDExchangeNotLoaded" Id="10879"/>
            <Enum Name="NoCREDD" Id="10880"/>
            <Enum Name="NoMatchingOrder" Id="10881"/>
            <Enum Name="InvalidCREDDOrder" Id="10882"/>
            <Enum Name="Cooldown" Id="12540"/>
            <Enum Name="MissingEntitlement" Id="12541"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountOperation" Incomplete="true" Id="10883">
            <Enum Name="MTXPurchase" Id="10884"/>
            <Enum Name="ClaimPending" Id="10885"/>
            <Enum Name="ReturnPending" Id="10886"/>
            <Enum Name="TakeItem" Id="10887"/>
            <Enum Name="GiftItem" Id="10888"/>
            <Enum Name="RedeemCoupon" Id="10889"/>
            <Enum Name="GetCREDDExchangeInfo" Id="10890"/>
            <Enum Name="SellCREDD" Id="10891"/>
            <Enum Name="BuyCREDD" Id="10892"/>
            <Enum Name="CancelCREDDOrder" Id="10893"/>
            <Enum Name="ExpireCREDDOrder" Id="10894"/>
            <Enum Name="SellCREDDComplete" Id="10895"/>
            <Enum Name="BuyCREDDComplete" Id="10896"/>
            <Enum Name="CREDDRedeem" Id="14885"/>
        </EnumSet>
        <Function Name="GetEntitlementCount" Incomplete="true" Id="14886"/>
        <EnumSet Name="CodeEnumEntitlement" Incomplete="true" Id="14887">
            <Enum Name="BaseCharacterProgressionCaps" Id="14888"/>
            <Enum Name="BaseCharacterSlots" Id="14889"/>
            <Enum Name="BaseCurrencyCaps" Id="14890"/>
            <Enum Name="EconomyParticipation" Id="14891"/>
            <Enum Name="GuildsAccess" Id="14892"/>
            <Enum Name="FullSocialParticipation" Id="14893"/>
            <Enum Name="CREDDUsage" Id="14894"/>
            <Enum Name="InGameCSAccess" Id="14895"/>
        </EnumSet>
    </Library>
    <Library Name="PublicEventsLib" Incomplete="true" Id="8810">
        <Function Name="GetActivePublicEventList" Incomplete="true" Id="8811"/>
    </Library>
    <Library Name="QuestLib" Incomplete="true" Id="8812">
        <Function Name="GetEpisode" Incomplete="true" Id="8813"/>
        <Function Name="GetAllEpisodes" Incomplete="true" Id="8814"/>
        <Function Name="GetTrackedEpisodes" Incomplete="true" Id="8815"/>
        <Function Name="GetCount" Incomplete="true" Id="8816"/>
        <Function Name="GetMaxCount" Incomplete="true" Id="8817"/>
        <Function Name="GetQuest" Incomplete="true" Id="8818"/>
        <Function Name="GetKnownCategories" Incomplete="true" Id="8819"/>
    </Library>
    <Library Name="StorefrontLib" Incomplete="true" Id="8820" DevOnly="true">
        <Function Name="GetCategoryTree" Incomplete="true" Id="8821"/>
        <Function Name="GetOffersForCategory" Incomplete="true" Id="8822"/>
        <Function Name="GetCampaigns" Incomplete="true" Id="8823"/>
        <Function Name="GetOfferInfo" Incomplete="true" Id="8824"/>
        <Function Name="GetBalance" Incomplete="true" Id="8825"/>
        <Function Name="PurchaseOffer" Incomplete="true" Id="8826"/>
        <Function Name="PurchaseInstantEvent" Incomplete="true" Id="8827"/>
        <Function Name="UseInstantEvent" Incomplete="true" Id="8828"/>
    </Library>
    <WindowControl Name="MannequinSlotWindow" Incomplete="true" Id="8829" Parent="Window">
        <Method Name="GetItem" Incomplete="true" Id="8830"/>
        <Method Name="SetContentId" Incomplete="true" Id="8831"/>
    </WindowControl>
    <Object Name="ApolloTimer" Incomplete="true" Id="8832">
        <Function Name="is" Incomplete="true" Id="8833"/>
        <Function Name="Create" Incomplete="true" Id="8834"/>
        <Method Name="Start" Incomplete="true" Id="8835"/>
        <Method Name="Stop" Incomplete="true" Id="8836"/>
        <Method Name="Set" Incomplete="true" Id="8837"/>
        <Method Name="__eq" Incomplete="true" Id="16537"/>
        <Method Name="__gc" Incomplete="true" Id="16538"/>
    </Object>
    <Library Name="CREDDExchangeLib" Id="10897" Desc="This library is one of the primary ways that the player interacts with the CREDD Exchange.  This does not include creating and fulfilling orders, which is handled by the ActionConfirmButton.">
        <Function Name="RequestExchangeInfo" Id="10898" Desc="Requests a list for the CREDD Exchange&apos;s stats and CREDDExchangeOrders." Example="The server will fire the CREDDExchangeInfoResults event in response"/>
        <Function Name="CancelOrder" Id="10903" Desc="Removes a CREDD Exchange Order from the Exchange." Example="The CREDDExchangeInfoResults event is fired in response to this, informing the UI of the status of the operation.">
            <Param Name="crdOrder" Desc="The order that the player wishes to cancel." Type="CREDDExchangeOrder" Id="16755"/>
        </Function>
        <EnumSet Name="CodeEnumAccountOperationResult" Id="10905" Desc="Results of various account operations.  This includes reasons the operation might have failed, as well as &quot;Ok&quot; for successful operations.">
            <Enum Name="Ok" Id="10906"/>
            <Enum Name="GenericFail" Id="10907"/>
            <Enum Name="DBError" Id="10908"/>
            <Enum Name="MTXError" Id="10909"/>
            <Enum Name="InvalidOffer" Id="10910"/>
            <Enum Name="InvalidPrice" Id="10911"/>
            <Enum Name="NotEnoughCurrency" Id="10912"/>
            <Enum Name="NeedTransaction" Id="10913"/>
            <Enum Name="InvalidAccountItem" Id="10914"/>
            <Enum Name="InvalidPendingItem" Id="10915"/>
            <Enum Name="InvalidInventoryItem" Id="10916"/>
            <Enum Name="NoConnection" Id="10917"/>
            <Enum Name="NoCharacter" Id="10918"/>
            <Enum Name="AlreadyClaimed" Id="10919"/>
            <Enum Name="MaxEntitlementCount" Id="10920"/>
            <Enum Name="NoRegift" Id="10921"/>
            <Enum Name="NoGifting" Id="10922"/>
            <Enum Name="InvalidFriend" Id="10923"/>
            <Enum Name="InvalidCoupon" Id="10924"/>
            <Enum Name="CannotReturn" Id="10925"/>
            <Enum Name="Prereq" Id="10926"/>
            <Enum Name="CREDDExchangeNotLoaded" Id="10927"/>
            <Enum Name="NoCREDD" Id="10928"/>
            <Enum Name="NoMatchingOrder" Id="10929"/>
            <Enum Name="InvalidCREDDOrder" Id="10930"/>
            <Enum Name="Cooldown" Id="12542"/>
            <Enum Name="MissingEntitlement" Id="12543"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountOperation" Id="10931" Desc="The different types of account operations that the player can perform.">
            <Enum Name="MTXPurchase" Id="10932"/>
            <Enum Name="ClaimPending" Id="10933"/>
            <Enum Name="ReturnPending" Id="10934"/>
            <Enum Name="TakeItem" Id="10935"/>
            <Enum Name="GiftItem" Id="10936"/>
            <Enum Name="RedeemCoupon" Id="10937"/>
            <Enum Name="GetCREDDExchangeInfo" Id="10938"/>
            <Enum Name="SellCREDD" Id="10939"/>
            <Enum Name="BuyCREDD" Id="10940"/>
            <Enum Name="CancelCREDDOrder" Id="10941"/>
            <Enum Name="ExpireCREDDOrder" Id="10942"/>
            <Enum Name="SellCREDDComplete" Id="10943"/>
            <Enum Name="BuyCREDDComplete" Id="10944"/>
            <Enum Name="CREDDRedeem" Id="14896"/>
        </EnumSet>
        <Function Name="GetCREDDHistory" Id="12544" Desc="Requests player&apos;s buy and sell history from the server." Example="The server will send the results in the CREDDOperationHistoryResults event."/>
    </Library>
    <Object Name="CREDDExchangeOrder" Id="10945" Desc="Individual orders on the CREDD Exchange." Prefix="crd">
        <Method Name="GetPrice" Id="10946" Desc="Gets the price that the order was set for.">
            <ReturnValue Type="Money" Desc="The amount and type of money that the order is requesting or offering for a CREDD." Id="16764"/>
        </Method>
        <Method Name="GetListTime" Id="10947" Desc="Gets the time that the order was posted." Example="The full date/time can be converted to a string using the Time object&apos;s _tostring function:

local crdNewOrder = CCExchangeOrder.newBuyOrder()
local monPrice = Money.new()
monPrice:SetAmount(1)

crdNewOrder:SetPrice(monPrice)
crdNewOrder:Post()

local timeExpiration = crdNewOrder:GetListTime()
Print(timeExpiration:_tostring())">
            <ReturnValue Type="Time" Desc="A time object for when the order was posted." Id="16763"/>
        </Method>
        <Method Name="GetExpirationTime" Id="10948" Desc="Gets the amount of time that the order will remain on the CREDD Exchange." Example="The full date/time can be converted to a string using the Time object&apos;s _tostring function:

local crdNewOrder = CCExchangeOrder.newBuyOrder()
local monPrice = Money.new()
monPrice:SetAmount(1)

crdNewOrder:SetPrice(monPrice)
crdNewOrder:Post()

local timeExpiration = crdNewOrder:GetExpirationTime()
Print(timeExpiration:_tostring())">
            <ReturnValue Type="Time" Desc="A Time object that states when the order will expire." Id="16762"/>
        </Method>
        <Method Name="IsBuy" Id="10949" Desc="Determines if the order is a buy order.">
            <ReturnValue Type="Boolean" Desc="Whether the order is a buy order or not." Id="16765"/>
        </Method>
        <Method Name="SetPrice" Id="10950" Desc="Sets the price that the order asks for once it is posted on the CREDD Exchange." Example="Note that the Money has to be in credits and the amount has to be greater than 0.">
            <Param Name="monPrice" Desc="The amount of money that the order will pay for / accept for CREDD." Type="Money" Id="16768"/>
            <ReturnValue Type="Boolean" Desc="Whether the price was set successfully or not." Id="16769"/>
        </Method>
        <Method Name="IsPosted" Id="10951" Desc="Checks if the order is posted on the CREDD Exchange.">
            <ReturnValue Type="Boolean" Desc="Whether the order is posted on the CREDD Exchange or not." Id="16767"/>
        </Method>
        <Method Name="CanPost" Id="10952" Desc="Validates that the order is set for a valid number ( &gt; 0 ) of credits and is not currently posted on the CREDD Exchange.">
            <ReturnValue Type="Boolean" Desc="Whether the order can be posted on the CREDD Exchange or not." Id="16760"/>
        </Method>
        <Method Name="Post" Id="10953" Desc="Posts the order on the CREDD Exchange."/>
        <Method Name="Cancel" Id="10954" Desc="Removes the order from the CREDD Exchange."/>
        <Function Name="is" Id="10955" Desc="Checks if the variable that was passed in is a CREDDExchangeOrder.">
            <Param Name="oVariable" Desc="The variable that this function will check." Type="Variable" Id="16756"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable that was passed in is a CREDDExchangeOrder or not." Id="16757"/>
        </Function>
        <Function Name="newBuyOrder" Id="10956" Desc="Creates a new CREDDExchangeOrder that is a buy order." Example="This is largely unused since CREDDExchangeOrders are created using the ActionConfirmButton.">
            <ReturnValue Type="CREDDExchangeOrder" Desc="A new CREDD Exchange buy order." Id="16758"/>
        </Function>
        <Function Name="newSellOrder" Id="10957" Desc="Creates a new CREDDExchangeOrder that is a sell order." Example="This is largely unused since CREDDExchangeOrders are created using the ActionConfirmButton.">
            <ReturnValue Type="CREDDExchangeOrder" Desc="A new sell order for the CREDD Exchange." Id="16759"/>
        </Function>
        <Method Name="__eq" Id="13285" Desc="Determines if another CREDDExchangeOrder is the same as this one.">
            <Param Name="crdCompare" Desc="The CREDDExchangeOrder that is being compared to the one calling this function." Type="CREDDExchangeOrder" Id="16773"/>
            <ReturnValue Type="Boolean" Desc="Whether the two CREDDExchangeOrders are the same order or not." Id="16774"/>
        </Method>
        <Method Name="__gc" Id="13286" Desc="Forces the garbage collector to be called on the CREDDExchangeOrder that called the function."/>
    </Object>
    <Library Name="DemoSummary" Incomplete="true" Id="12545" DevOnly="true" InternalNotes="Temporarily skipping since it&apos;s Dev Only and possibly depricated.">
        <Function Name="LogPositionChange" Incomplete="true" Id="12546"/>
        <Function Name="LogKill" Incomplete="true" Id="12547"/>
        <Function Name="LogDeath" Incomplete="true" Id="12548"/>
        <Function Name="LogDamageTaken" Incomplete="true" Id="12549"/>
        <Function Name="LogDamageGiven" Incomplete="true" Id="12550"/>
        <Function Name="LogQuestTaken" Incomplete="true" Id="12551"/>
        <Function Name="LogQuestCompleted" Incomplete="true" Id="12552"/>
        <Function Name="LogPathMissionTaken" Incomplete="true" Id="12553"/>
        <Function Name="LogPathMissionCompleted" Incomplete="true" Id="12554"/>
        <Function Name="LogPathMissionFailed" Incomplete="true" Id="12555"/>
        <Function Name="LogChallengeGiven" Incomplete="true" Id="12556"/>
        <Function Name="LogChallengeCompleted" Incomplete="true" Id="12557"/>
        <Function Name="LogChallengeFailed" Incomplete="true" Id="12558"/>
        <Function Name="GetEventList" Incomplete="true" Id="12559"/>
        <Function Name="GetQuestList" Incomplete="true" Id="12560"/>
        <Function Name="GetPathMissionList" Incomplete="true" Id="12561"/>
        <Function Name="GetChallengeList" Incomplete="true" Id="12562"/>
        <Function Name="GetStats" Incomplete="true" Id="12563"/>
    </Library>
    <Library Name="CustomerSurveyLib" Id="12564" Desc="A library that allows the player to interact with queued customer surveys.">
        <Function Name="GetPending" Id="12565" Desc="Gets a pending customer survey that the player has not filled out.">
            <Param Name="nIndex" Desc="The index of the survey that will be returned.  If no value is provided, the function will get the first pending survey." Type="Integer" Id="16770"/>
            <ReturnValue Type="CustomerSurveyTypeLib" Desc="The pending survey." Id="16771"/>
        </Function>
        <Function Name="GetPendingCount" Incomplete="true" Id="12566" Desc="Gets the number of surveys that are waiting to be filled out by the player.">
            <ReturnValue Type="Integer" Desc="The number of surveys that are waiting to be filled out by the player." Id="16772"/>
        </Function>
        <EnumSet Name="CodeEnumSurveyType" Id="12567" Desc="The different types of surveys that the player can receive.">
            <Enum Name="General" Id="12568"/>
            <Enum Name="Quest" Id="12569"/>
            <Enum Name="PathMission" Id="12570"/>
            <Enum Name="Challenge" Id="12571"/>
        </EnumSet>
    </Library>
    <Object Name="ChatChannel" Id="12613" Desc="One of the channels that chat messages can be sent to." Prefix="chan">
        <Method Name="GetName" Incomplete="true" Id="12614" Desc="Gets the ChatChannel&apos;s name.">
            <ReturnValue Type="String" Desc="The name of the ChatChannel." Id="15857"/>
        </Method>
        <Method Name="GetCommand" Id="12615" Desc="Gets the slash command used to select the ChatChannel.">
            <ReturnValue Type="String" Desc="The command used to select the ChatChannel." Id="15850"/>
        </Method>
        <Method Name="GetAbbreviation" Id="12616" Desc="Gets an abbreviation for the ChatChannel that can be used in slash commands to quickly select the channel.">
            <ReturnValue Type="String" Desc="The ChatChannel&apos;s abbreviation." Id="15842"/>
        </Method>
        <Method Name="GetAlternate" Id="12617" Desc="Checks for alternate abbreviations for the ChatChannel.">
            <Param Name="nIndex" Desc="The index of the alternate abbreviation for the ChatChannel." Type="Integer" Id="15843"/>
            <ReturnValue Type="String" Desc="The alternate abbreviation for the ChatChannel." Id="15844"/>
        </Method>
        <Method Name="GetType" Id="12618" Desc="Gets the ChatChannel&apos;s id number.">
            <ReturnValue Type="Integer" Desc="The channel&apos;s id number." Id="15859"/>
        </Method>
        <Method Name="IsCustom" Id="12619" Desc="Determines if the ChatChannel is a player made channel.">
            <ReturnValue Type="Boolean" Desc="Whether the ChatChannel is a player made channel or not." Id="15860"/>
        </Method>
        <Method Name="IsOwner" Id="12620" Desc="Determines if the player owns the ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the player owns the ChatChannel." Id="15863"/>
        </Method>
        <Method Name="IsModerator" Id="12621" Desc="Checks if the player is a moderator of the ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the player is a moderator of the ChatChannel." Id="15861"/>
        </Method>
        <Method Name="IsMuted" Incomplete="true" Id="12622" Desc="Determines if the player is muted in the ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the player is muted or not." Id="15862"/>
        </Method>
        <Method Name="CanSend" Id="12623" Desc="Determines if the player is able to send messages on this ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the player is able to send chat messages on this ChatChannel or not." Id="15840"/>
        </Method>
        <Method Name="Send" Id="12624" Desc="Sends a message over the ChatChannel." Example="Players in the ChatChannel will receive the ChatMessage event after this function has finished.">
            <Param Name="strMessage" Desc="The message that will be sent over the ChatChannel." Type="String" Id="15870"/>
        </Method>
        <Method Name="SetData" Id="12625" Desc="Saves data in the ChatChannel.  This data can be accessed again by calling the GetData function.">
            <Param Name="oVariable" Desc="The data that will be tied to the ChatChannel." Type="Variable" Id="15871"/>
        </Method>
        <Method Name="GetData" Id="12626" Desc="Gets the data that was added to the channel with SetData()">
            <ReturnValue Type="Variable" Desc="The data that was added to the ChatChannel with SetData." Id="15851"/>
        </Method>
        <Method Name="SetProfanity" Id="12627" Desc="Attempts to change the ChatChannel&apos;s Profanity Filter status.">
            <Param Name="bProfanityFilterOn" Desc="Whether the Profanity Filter should be turned on or off for the channel." Type="Boolean" Id="15878"/>
        </Method>
        <Method Name="GetProfanity" Id="12628" Desc="Checks whether the Profanity Filter is turned on for the ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the Profanity Filter is turned on for the ChatChannel." Id="15858"/>
        </Method>
        <Method Name="GetMembers" Id="12629" Desc="Gets a list of players that are in the ChatChannel.">
            <ReturnValue Type="Table" Desc="An array that contains information on all of the players that are in the ChatChannel." Array="true" Id="15852">
                <Item Name="strMemberName" Desc="The name of the player." Type="String" Id="15853"/>
                <Item Name="bIsChannelOwner" Desc="Whether the player owns the channel." Type="Boolean" Id="15854"/>
                <Item Name="bIsModerator" Desc="Whether the player is a moderator of the channel." Type="Boolean" Id="15855"/>
                <Item Name="bIsMuted" Desc="Whether the character has been muted." Type="Boolean" Id="15856"/>
            </ReturnValue>
        </Method>
        <Method Name="GetBans" Id="12630" Desc="Gets a list of players who are banned in this ChatChannel.">
            <ReturnValue Type="Table" Desc="An array of information about the players that have been banned from the channel." Array="true" Id="15845">
                <Item Name="strMemberName" Desc="The player&apos;s name." Type="String" Id="15846"/>
                <Item Name="bIsChannelOwner" Desc="Whether the player owns the channel or not." Type="Boolean" Id="15847"/>
                <Item Name="bIsModerator" Desc="Whether the player is a moderator of the channel or not." Type="Boolean" Id="15848"/>
                <Item Name="bIsMuted" Desc="Whether the player is muted in the channel or not." Type="Boolean" Id="15849"/>
            </ReturnValue>
        </Method>
        <Method Name="RequestMembers" Id="12631" Desc="Requests a list of the players in the ChatChannel." Example="If this is successful, the player will receive the ChatList event."/>
        <Method Name="SetModerator" Id="12632" Desc="Attempts to set a player&apos;s Moderator status in the ChatChannel." Example="If the player&apos;s Moderator status was successfully changed, the ChatAction event will be fired.">
            <Param Name="strPlayerName" Desc="The name of the player whose Moderator status will be updated by this function." Type="String" Id="15872"/>
            <Param Name="bMakeModerator" Desc="Whether the player&apos;s Moderator flag should be granted (true) or removed (false).  This defaults to false if no value is passed in." Type="Boolean" Id="15873"/>
        </Method>
        <Method Name="SetMute" Id="12633" Desc="Attempts to set a player&apos;s Mute status for the ChatChannel." Example="If this function is successful, the ChatAction event will be fired.">
            <Param Name="strPlayerName" Desc="The player whose Mute flag should be changed by the function." Type="String" Id="15874"/>
            <Param Name="bMuted" Desc="Whether the Mute flag should be added to the player (true) or removed (false).  This defaults to false if no value is passed in." Type="Boolean" Id="15875"/>
        </Method>
        <Method Name="PassOwner" Id="12634" Desc="Attempts to make another player the owner of the ChatChannel." Example="If ownership was successfully passed, the ChatAction event will fire.">
            <Param Name="strPlayerName" Desc="The name of the player that the function will attempt to transfer ownership to." Type="String" Id="15865"/>
        </Method>
        <Method Name="Leave" Id="12635" Desc="Attempts to remove the player from the ChatChannel." Example="If the attempt was successful, the player will receive the ChatLeave event."/>
        <Method Name="CanLeave" Id="12636" Desc="Checks if the player is able to leave the ChatChannel.">
            <ReturnValue Type="Boolean" Desc="Whether the player is able to leave the ChatChannel or not." Id="15838"/>
        </Method>
        <Method Name="Kick" Id="12637" Desc="Attempts to remove a player from the ChatChannel." Example="If this call is successful, players will receive the ChatAction event.">
            <Param Name="strPlayerName" Desc="The name of the player that the function will attempt to remove from the ChatChannel." Type="String" Id="15864"/>
        </Method>
        <Method Name="SetPassword" Incomplete="true" Id="12638" Desc="Attempts to add a password to the ChatChannel or modify an existing one." Example="If this is successful, the ChatAction event will be fired.">
            <Param Name="strPassword" Desc="The ChatChannel&apos;s new password." Type="String" Id="15876"/>
        </Method>
        <Method Name="Post" Id="12639" Desc="Attempts to send a string to all members of the ChatChannel." Example="If this function is successful, then players in the channel will receive the ChatMessage event.">
            <Param Name="strMessage" Desc="The message that will be sent through the ChatChannel." Type="String" Id="15866"/>
            <Param Name="strSenderName" Desc="The name of the player that sent the message.  This value defaults to an empty string." Type="String" Id="15867"/>
            <Param Name="unitSpeaker" Desc="The unit that entered the message." Type="Unit" Id="15868"/>
            <Param Name="bTextBubble" Desc="Whether a text bubble should be shown for this piece of text." Type="Boolean" Id="15869"/>
        </Method>
        <Function Name="is" Id="12640" Desc="Checks whether a variable is a ChatChannel or not.">
            <Param Name="oVariable" Desc="The function will verify that this variable is a ChatChannel." Type="Variable" Id="15833"/>
            <ReturnValue Type="Boolean" Desc="Whether the variable is a ChatChannel or not." Id="15834"/>
        </Function>
        <Method Name="__eq" Id="13287" Desc="Checks whether a ChatChannel is equal to the ChatChannel that called this function.">
            <Param Name="chanComparison" Desc="The ChatChannel that will be compared to the one that called this function." Type="ChatChannel" Id="15835"/>
            <ReturnValue Type="Boolean" Desc="Whether the two ChatChannels are equal or not." Id="15836"/>
        </Method>
        <Method Name="__gc" Id="13288" Desc="ChatChannel&apos;s garbage collection function.  This will delete the ChatChannel from memory."/>
    </Object>
    <Object Name="CustomerSurveyTypeLib" Id="12641" NotStandard="true" InternalNotes="This really needs to be renamed" Desc="Surveys that are sent out to players during betas and on the PTR.  These are disabled in the live game." Prefix="svy">
        <Method Name="isCustomerSurvey" Id="12642" InternalNotes="This is a method.  If it wasn&apos;t a CustomerSurvey, it wouldn&apos;t be able to call this." Desc="Checks if this variable is a CustomerSurvey." NotStandard="true">
            <ReturnValue Type="Boolean" Desc="Whether this is a CustomerSurvey or not." Id="16786"/>
        </Method>
        <Method Name="GetTitle" Id="12643" Desc="Gets the survey&apos;s title.">
            <ReturnValue Type="String" Desc="The survey&apos;s title." Id="16785"/>
        </Method>
        <Method Name="GetSurveyType" Id="12644" Desc="Gets the survey&apos;s type." Remarks="The survey&apos;s type corresponds with what triggered it.">
            <ReturnValue Type="CustomerSurveyLib.CodeEnumSurveyType" Desc="The survey&apos;s type." Id="16783"/>
        </Method>
        <Method Name="GetQuestions" Id="12645" Desc="Gets the text for the questions on the survey.">
            <Param Name="nIndex" Desc="If this is passed in, the function will return a single string for the question at this index." Type="Integer" Id="16778"/>
            <ReturnValue Type="String" Desc="An array of all of the survey&apos;s questions.  If nIndex was set, this will be a single string and not an array." Array="true" Id="16779"/>
        </Method>
        <Method Name="GetResults" Id="12646" Desc="Gets a list of the player&apos;s responses to the survey.">
            <Param Name="nIndex" Desc="If this is passed in, the function will only return the result for the question at this index." Type="Integer" Id="16780"/>
            <ReturnValue Type="Integer" Desc="An array of integers with the player&apos;s responses to the survey.  If nIndex was set, then this will be a single integer instead of an array." Array="true" Id="16781"/>
        </Method>
        <Method Name="GetComment" Incomplete="true" Id="12647" Desc="Gets the text from the Comment section of the survey.">
            <ReturnValue Type="String" Desc="The text that is in the Comment section of the survey." Id="16777"/>
        </Method>
        <Method Name="SetResults" Id="12648" InternalNotes="This is returning 1 for some reason.  It probably shouldn&apos;t be." Desc="Sets a result for each question in the survey.">
            <Param Name="arResponses" Desc="An array that contains responses for each of the survey&apos;s questions." Type="Integer" Array="true" Id="16790"/>
        </Method>
        <Method Name="SetComment" Id="12649" InternalNotes="This is returning 1 when it probably shouldn&apos;t be." Desc="Sets the survey&apos;s comment section.">
            <Param Name="strComment" Desc="The text that will become the survey&apos;s comment." Type="String" Id="16789"/>
        </Method>
        <Method Name="SendResult" Id="12650" Desc="Attempts to send the CustomerSurvey to Carbine.">
            <ReturnValue Type="Boolean" Desc="Whether the CustomerSurvey was successfully sent or not." Id="16788"/>
        </Method>
        <Method Name="Cancel" Id="12651" Desc="Cancels the current survey.  If the survey stopped the player from leaving the game, they will now be able to leave."/>
        <Method Name="__eq" Id="13289" Desc="Determines if two CustomerSurveys are the same.">
            <Param Name="svyCompare" Desc="The CustomerSurvey that is being compared to the one that called this function." Type="CustomerSurveyTypeLib" Id="16775"/>
            <ReturnValue Type="Boolean" Desc="Whether the two CustomerSurveys are the same or not." Id="16776"/>
        </Method>
        <Method Name="SetResults" Id="16792" InternalNotes="This returns 1 and it probably shouldn&apos;t." Desc="Sets the result for a specific question in the survey.">
            <Param Name="nQuestion" Desc="The index for the question that the response belongs to." Type="Integer" Id="16793"/>
            <Param Name="nResponse" Desc="The index of the response." Type="Integer" Id="16794"/>
        </Method>
    </Object>
    <Object Name="GenericMapNode" Incomplete="true" Id="12652" DevOnly="true">
        <Method Name="GetId" Incomplete="true" Id="12653"/>
        <Method Name="GetMapId" Incomplete="true" Id="12654"/>
        <Method Name="GetPosition" Incomplete="true" Id="12655"/>
        <Method Name="GetName" Incomplete="true" Id="12656"/>
        <Method Name="GetDescription" Incomplete="true" Id="12657"/>
        <Method Name="GetSprite" Incomplete="true" Id="12658"/>
        <Method Name="ChooseNode" Incomplete="true" Id="12659"/>
        <Function Name="is" Incomplete="true" Id="12660"/>
        <Method Name="GetType" Incomplete="true" Id="14897"/>
    </Object>
    <Object Name="Guild" Incomplete="true" Id="12661">
        <Method Name="GetType" Incomplete="true" Id="12662"/>
        <Method Name="GetName" Incomplete="true" Id="12663"/>
        <Method Name="Modify" Incomplete="true" Id="12664"/>
        <Method Name="Kick" Incomplete="true" Id="12665"/>
        <Method Name="Invite" Incomplete="true" Id="12666"/>
        <Method Name="Leave" Incomplete="true" Id="12667"/>
        <Method Name="Promote" Incomplete="true" Id="12668"/>
        <Method Name="PromoteMaster" Incomplete="true" Id="12669"/>
        <Method Name="Demote" Incomplete="true" Id="12670"/>
        <Method Name="AddRank" Incomplete="true" Id="12671"/>
        <Method Name="ModifyRank" Incomplete="true" Id="12672"/>
        <Method Name="RenameRank" Incomplete="true" Id="12673"/>
        <Method Name="RemoveRank" Incomplete="true" Id="12674"/>
        <Method Name="Vote" Incomplete="true" Id="12675"/>
        <Method Name="Nominate" Incomplete="true" Id="12676"/>
        <Method Name="Disband" Incomplete="true" Id="12677"/>
        <Method Name="GetRanks" Incomplete="true" Id="12678"/>
        <Method Name="GetFlags" Incomplete="true" Id="12679"/>
        <Method Name="SetFlags" Incomplete="true" Id="12680"/>
        <Method Name="GetChannel" Incomplete="true" Id="12681"/>
        <Method Name="RequestMembers" Incomplete="true" Id="12682"/>
        <Method Name="GetMyRank" Incomplete="true" Id="12683"/>
        <Method Name="SetAsNameplate" Incomplete="true" Id="12684"/>
        <Method Name="IsNameplate" Incomplete="true" Id="12685"/>
        <Method Name="GetMemberCount" Incomplete="true" Id="12686"/>
        <Method Name="GetOnlineMemberCount" Incomplete="true" Id="12687"/>
        <Method Name="GetStandard" Incomplete="true" Id="12688"/>
        <Method Name="SetStandard" Incomplete="true" Id="12689"/>
        <Method Name="GetInfluence" Incomplete="true" Id="12690"/>
        <Method Name="GetBonusInfluenceRemaining" Incomplete="true" Id="12691"/>
        <Method Name="BeginBankItemTransfer" Incomplete="true" Id="12692"/>
        <Method Name="EndBankItemTransfer" Incomplete="true" Id="12693"/>
        <Method Name="MoveBankItemToInventory" Incomplete="true" Id="12694"/>
        <Method Name="OpenBankTab" Incomplete="true" Id="12695"/>
        <Method Name="CloseBankTab" Incomplete="true" Id="12696"/>
        <Method Name="GetBankTab" Incomplete="true" Id="12697"/>
        <Method Name="RenameBankTab" Incomplete="true" Id="12698"/>
        <Method Name="GetBankTabName" Incomplete="true" Id="12699"/>
        <Method Name="GetBankTabCount" Incomplete="true" Id="12700"/>
        <Method Name="GetBankTabSlots" Incomplete="true" Id="12701"/>
        <Method Name="ListBossTokens" Incomplete="true" Id="12702"/>
        <Method Name="GetBossTokens" Incomplete="true" Id="12703"/>
        <Method Name="UseBossToken" Incomplete="true" Id="12704"/>
        <Method Name="IsArenaTeam" Incomplete="true" Id="12705"/>
        <Method Name="GetMoney" Incomplete="true" Id="12706"/>
        <Method Name="GetBankMoneyWithdrawnToday" Incomplete="true" Id="12707"/>
        <Method Name="GetBankMoneyRepairToday" Incomplete="true" Id="12708"/>
        <Method Name="GetBankTabItemWithdrawnToday" Incomplete="true" Id="12709"/>
        <Method Name="DepositMoney" Incomplete="true" Id="12710"/>
        <Method Name="WithdrawMoney" Incomplete="true" Id="12711"/>
        <Method Name="GetWarCoins" Incomplete="true" Id="12712"/>
        <Method Name="SetBankTabPermissions" Incomplete="true" Id="12713"/>
        <Method Name="SetRankBankMoneyLimit" Incomplete="true" Id="12714"/>
        <Method Name="SetRankBankRepairLimit" Incomplete="true" Id="12715"/>
        <Method Name="IsUnitMember" Incomplete="true" Id="12716"/>
        <Method Name="GetPvpRatings" Incomplete="true" Id="12717"/>
        <Method Name="GetQueueState" Incomplete="true" Id="12718"/>
        <Method Name="GetPerks" Incomplete="true" Id="12719"/>
        <Method Name="GetPerk" Incomplete="true" Id="12720"/>
        <Method Name="PurchasePerk" Incomplete="true" Id="12721"/>
        <Method Name="ActivatePerk" Incomplete="true" Id="12722"/>
        <Method Name="GetMessageOfTheDay" Incomplete="true" Id="12723"/>
        <Method Name="SetMessageOfTheDay" Incomplete="true" Id="12724"/>
        <Method Name="GetInfoMessage" Incomplete="true" Id="12725"/>
        <Method Name="SetInfoMessage" Incomplete="true" Id="12726"/>
        <Method Name="SetMemberNoteSelf" Incomplete="true" Id="12727"/>
        <Method Name="RepairItemVendor" Incomplete="true" Id="12728"/>
        <Method Name="RepairAllItemsVendor" Incomplete="true" Id="12729"/>
        <Method Name="GetCreationDate" Incomplete="true" Id="12730"/>
        <Method Name="RequestEventLogList" Incomplete="true" Id="12731"/>
        <Method Name="GetEventLogs" Incomplete="true" Id="12732"/>
        <Method Name="RequestRepairLogs" Incomplete="true" Id="12733"/>
        <Method Name="RequestMoneyLogs" Incomplete="true" Id="12734"/>
        <Method Name="RequestBankLogs" Incomplete="true" Id="12735"/>
        <Function Name="is" Incomplete="true" Id="12736"/>
        <Method Name="__eq" Incomplete="true" Id="13290"/>
        <Method Name="__gc" Incomplete="true" Id="13291"/>
    </Object>
    <Library Name="Tooltip" Incomplete="true" Id="12737">
        <Function Name="GetItemTooltipForm" Incomplete="true" Id="12738"/>
        <Function Name="GenerateSpellTooltipForm" Incomplete="true" Id="12739"/>
        <Function Name="GenerateUnitTooltipForm" Incomplete="true" Id="12740"/>
        <Function Name="GetBuffTooltipForm" Incomplete="true" Id="13292" DevOnly="true"/>
        <Function Name="GetHousingBuffTooltipForm" Incomplete="true" Id="13293" DevOnly="true"/>
        <Function Name="GetSpellTooltipForm" Incomplete="true" Id="13294" DevOnly="true"/>
    </Library>
    <Library Name="CharacterScreenLib" Id="12741" DevOnly="true" Desc="A library that is used during the character creation and character select.  This library is not publicly available.">
        <Function Name="ExitToRealmSelect" Incomplete="true" Id="12742" DevOnly="true"/>
        <Function Name="ExitToLogin" Incomplete="true" Id="12743" DevOnly="true"/>
        <Function Name="WasDisconnectedForLag" Incomplete="true" Id="12744" DevOnly="true"/>
        <Function Name="CreateCharacter" Incomplete="true" Id="12745" DevOnly="true"/>
        <Function Name="DeleteCharacter" Incomplete="true" Id="12746" DevOnly="true"/>
        <Function Name="SelectCharacter" Incomplete="true" Id="12747" DevOnly="true"/>
        <Function Name="RenameCharacter" Incomplete="true" Id="12748" DevOnly="true"/>
        <Function Name="GetCharacterCreation" Incomplete="true" Id="12749" DevOnly="true"/>
        <Function Name="GetRaceName" Incomplete="true" Id="12750" DevOnly="true"/>
        <Function Name="GetClassName" Incomplete="true" Id="12751" DevOnly="true"/>
        <Function Name="GetPlayerPaths" Incomplete="true" Id="12752" DevOnly="true"/>
        <Function Name="IsCharacterNameValid" Incomplete="true" Id="12753" DevOnly="true"/>
        <Function Name="GetCharacterCreationIdsByValues" Incomplete="true" Id="12754" DevOnly="true"/>
        <Function Name="ApplyCharacterToActor" Incomplete="true" Id="12755" DevOnly="true"/>
        <Function Name="ApplyCharacterToCostumeWindow" Incomplete="true" Id="12756" DevOnly="true"/>
        <Function Name="GetRealmInfo" Incomplete="true" Id="12757" DevOnly="true"/>
        <Function Name="GetRealmTransferDestinations" Incomplete="true" Id="12758" DevOnly="true"/>
        <Function Name="GetNumCharacterReservations" Incomplete="true" Id="12759" DevOnly="true"/>
        <Event Name="CharacterList" Incomplete="true" Id="8304" DevOnly="true"/>
        <Event Name="CharacterCreateFailed" Incomplete="true" Id="8305" Desc="Fires whenever the server rejected the player&apos;s attempt at character creation." DevOnly="true"/>
        <Event Name="CharacterDelete" Incomplete="true" Id="8306" DevOnly="true"/>
        <Event Name="CharacterRename" Incomplete="true" Id="9464" DevOnly="true"/>
        <Event Name="CharacterSelectFail" Incomplete="true" Id="9465" DevOnly="true"/>
        <Event Name="QueueStatus" Incomplete="true" Id="8307" DevOnly="true"/>
        <Event Name="RealmTransferFlags" Incomplete="true" Id="12760" DevOnly="true"/>
        <Event Name="TransferDestinationRealmList" Incomplete="true" Id="12761" DevOnly="true"/>
        <Event Name="RealmTrasnferResult" Incomplete="true" Id="12762" DevOnly="true"/>
        <Function Name="RealmTransfer" Incomplete="true" Id="14898" DevOnly="true"/>
        <Function Name="GetSubscriptionExpired" Incomplete="true" Id="14899" DevOnly="true"/>
        <Function Name="GetGameTimeHoursRemaining" Incomplete="true" Id="14900" DevOnly="true"/>
        <Event Name="QueueFinished" Incomplete="true" Id="14901" DevOnly="true"/>
        <Event Name="SubscriptionExpired" Incomplete="true" Id="14902" DevOnly="true"/>
        <Event Name="GameTimeHoursRemaining" Incomplete="true" Id="14903" DevOnly="true"/>
        <Event Name="RealmTransferResult" Incomplete="true" Id="14904" DevOnly="true"/>
        <Event Name="RealmBroadcast" Incomplete="true" Id="14905" DevOnly="true"/>
        <Event Name="CharacterDisabled" Incomplete="true" Id="14906" DevOnly="true"/>
        <Event Name="CharacterBack" Incomplete="true" Id="16475"/>
        <Function Name="IsCharacterNamePartValid" Incomplete="true" Id="17143"/>
    </Library>
    <Library Name="OptionsScreen" Incomplete="true" Id="12763" DevOnly="true">
        <Event Name="TriggerDemoOptions" Incomplete="true" Id="7012"/>
        <Event Name="EnteredCombat" Incomplete="true" Id="7013"/>
        <Event Name="RefreshOptionsDialog" Incomplete="true" Id="8309"/>
        <EnumSet Name="CodeEnumLoadType" Incomplete="true" Id="12764">
            <Enum Name="Default" Id="12765"/>
            <Enum Name="Yes" Id="12766"/>
            <Enum Name="No" Id="12767"/>
        </EnumSet>
        <EnumSet Name="CodeEnumLoadLevel" Incomplete="true" Id="12768">
            <Enum Name="Machine" Id="12769"/>
            <Enum Name="Account" Id="12770"/>
            <Enum Name="Realm" Id="12771"/>
            <Enum Name="Character" Id="12772"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAddonStatus" Incomplete="true" Id="12773">
            <Enum Name="Invalid" Id="12774"/>
            <Enum Name="NotLoaded" Id="12775"/>
            <Enum Name="ParsingError" Id="12776"/>
            <Enum Name="Loaded" Id="12777"/>
            <Enum Name="Suspended" Id="12778"/>
            <Enum Name="RunningWithError" Id="12779"/>
            <Enum Name="RunningOk" Id="12780"/>
        </EnumSet>
        <EnumSet Name="CodeEnumConfirmButtonType" Incomplete="true" Id="14907">
            <Enum Name="CopyToClipboard" Id="14908"/>
        </EnumSet>
    </Library>
    <Library Name="PreGameLib" Incomplete="true" Id="12781" DevOnly="true">
        <Function Name="IsDemo" Incomplete="true" Id="12782"/>
        <Function Name="GetDemoType" Incomplete="true" Id="12783"/>
        <Function Name="SetMusic" Incomplete="true" Id="12784"/>
        <Function Name="GetTimeBasedSeed" Incomplete="true" Id="12785"/>
        <Function Name="InvokeOptions" Incomplete="true" Id="12786"/>
        <Function Name="GetVersionString" Incomplete="true" Id="12787"/>
        <Function Name="Event_FireGenericEvent" Incomplete="true" Id="12788"/>
        <Function Name="String_GetWeaselString" Incomplete="true" Id="12789"/>
        <Function Name="GetLastRealmMessages" Incomplete="true" Id="12790"/>
        <Function Name="GetCredits" Incomplete="true" Id="12791"/>
        <Event Name="NetworkStatus" Incomplete="true" Id="8310"/>
        <EnumSet Name="CodeEnumMusic" Incomplete="true" Id="12792">
            <Enum Name="Auth" Id="12793"/>
            <Enum Name="CharacterCreate" Id="12794"/>
            <Enum Name="CharacterDelete" Id="12795"/>
            <Enum Name="CharacterSelect" Id="12796"/>
            <Enum Name="Login" Id="12797"/>
            <Enum Name="Realm" Id="12798"/>
            <Enum Name="Default" Id="12799"/>
        </EnumSet>
        <EnumSet Name="CodeEnumGender" Incomplete="true" Id="12800">
            <Enum Name="Male" Id="12801"/>
            <Enum Name="Female" Id="12802"/>
            <Enum Name="Unisex" Id="12803"/>
        </EnumSet>
        <EnumSet Name="CodeEnumFaction" Incomplete="true" Id="12804">
            <Enum Name="Dominion" Id="12805"/>
            <Enum Name="Exile" Id="12806"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRace" Incomplete="true" Id="12807">
            <Enum Name="Human" Id="12808"/>
            <Enum Name="Granok" Id="12809"/>
            <Enum Name="Aurin" Id="12810"/>
            <Enum Name="Draken" Id="12811"/>
            <Enum Name="Mechari" Id="12812"/>
            <Enum Name="Mordesh" Id="12813"/>
            <Enum Name="Chua" Id="12814"/>
        </EnumSet>
        <EnumSet Name="CodeEnumClass" Incomplete="true" Id="12815">
            <Enum Name="Warrior" Id="12816"/>
            <Enum Name="Engineer" Id="12817"/>
            <Enum Name="Esper" Id="12818"/>
            <Enum Name="Medic" Id="12819"/>
            <Enum Name="Stalker" Id="12820"/>
            <Enum Name="Spellslinger" Id="12821"/>
        </EnumSet>
        <EnumSet Name="CodeEnumPlayerPathType" Incomplete="true" Id="12822">
            <Enum Name="Explorer" Id="12823"/>
            <Enum Name="Scientist" Id="12824"/>
            <Enum Name="Settler" Id="12825"/>
            <Enum Name="Soldier" Id="12826"/>
        </EnumSet>
        <EnumSet Name="CodeEnumCreationGearSet" Incomplete="true" Id="12827">
            <Enum Name="Low" Id="12828"/>
            <Enum Name="Mid" Id="12829"/>
            <Enum Name="High" Id="12830"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRealmPopulation" Incomplete="true" Id="12831">
            <Enum Name="Low" Id="12832"/>
            <Enum Name="Medium" Id="12833"/>
            <Enum Name="High" Id="12834"/>
            <Enum Name="Full" Id="12835"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRealmPVPType" Incomplete="true" Id="12836">
            <Enum Name="PVE" Id="12837"/>
            <Enum Name="PVP" Id="12838"/>
        </EnumSet>
        <EnumSet Name="CodeEnumRealmStatus" Incomplete="true" Id="12839">
            <Enum Name="Unknown" Id="12840"/>
            <Enum Name="Offline" Id="12841"/>
            <Enum Name="Down" Id="12842"/>
            <Enum Name="Standby" Id="12843"/>
            <Enum Name="Up" Id="12844"/>
        </EnumSet>
        <EnumSet Name="CodeEnumCharacterModifyResults" Incomplete="true" Id="12845">
            <Enum Name="DeleteOk" Id="12846"/>
            <Enum Name="DeleteFailed" Id="12847"/>
            <Enum Name="DeleteFailed_GuildMaster" Id="12848"/>
            <Enum Name="CreateOk" Id="12849"/>
            <Enum Name="CreateFailed" Id="12850"/>
            <Enum Name="CreateFailed_Items" Id="12851"/>
            <Enum Name="CreateFailed_UniqueName" Id="12852"/>
            <Enum Name="CreateFailed_ActionBar" Id="12853"/>
            <Enum Name="CreateFailed_Quests" Id="12854"/>
            <Enum Name="CreateFailed_AccountFull" Id="12855"/>
            <Enum Name="CreateFailed_InvalidName" Id="12856"/>
            <Enum Name="CreateFailed_Faction" Id="12857"/>
            <Enum Name="CreateFailed_Internal" Id="12858"/>
            <Enum Name="RenameFailed" Id="12859"/>
            <Enum Name="RenameFailed_Internal" Id="12860"/>
            <Enum Name="RenameFailed_InvalidName" Id="12861"/>
            <Enum Name="RenameFailed_UniqueName" Id="12862"/>
            <Enum Name="RenameFailed_NoRename" Id="12863"/>
            <Enum Name="RenameOk" Id="12864"/>
            <Enum Name="RenameFailed_NoCurrency" Id="12865"/>
            <Enum Name="RealmTransferFailed_InvalidRealm" Id="12866"/>
            <Enum Name="RealmTransferOk" Id="12867"/>
            <Enum Name="RealmTransferFailed_ServerDown" Id="12868"/>
            <Enum Name="RealmTransferFailed_CharacterOnline" Id="12869"/>
            <Enum Name="RealmTransferFailed_InvalidCharacter" Id="12870"/>
            <Enum Name="RealmTransferFailed_CharacterLocked" Id="12871"/>
            <Enum Name="RealmTransferFailed_NoCurrency" Id="12872"/>
            <Enum Name="RealmTransferFailed_DbError" Id="12873"/>
            <Enum Name="RealmTransferFailed_HasAuction" Id="12874"/>
            <Enum Name="RealmTransferFailed_InGuild" Id="12875"/>
            <Enum Name="RealmTransferFailed_HasCREDDExchange" Id="12876"/>
            <Enum Name="RealmTransferFailed_CharacterBusy" Id="12877"/>
            <Enum Name="RealmTransferFailed_HasMail" Id="12878"/>
            <Enum Name="RealmTransferFailed_ServerFull" Id="12879"/>
            <Enum Name="RedeemCREDDFailed_NoCREDD" Id="14909"/>
            <Enum Name="RedeemCREDDFailed_NoEntitlement" Id="14910"/>
            <Enum Name="RedeemCREDDFailed_Internal" Id="14911"/>
            <Enum Name="RedeemCREDDOk" Id="14912"/>
            <Enum Name="RedeemCREDDFailed_InvalidCREDD" Id="14913"/>
            <Enum Name="RedeemCREDDFailed_PlatformError" Id="14914"/>
            <Enum Name="RedeemCREDDFailed_PlatformPermaFail" Id="14915"/>
            <Enum Name="RedeemCREDDFailed_PlatformTempFail" Id="14916"/>
            <Enum Name="DeleteFailed_CharacterOnline" Id="14917"/>
            <Enum Name="RenameFailed_CharacterOnline" Id="14918"/>
            <Enum Name="CreateFailed_CharacterOnline" Id="14919"/>
            <Enum Name="RealmTransferFailed_NoSubscription" Id="14920"/>
            <Enum Name="RealmTransferFailed_Internal" Id="14921"/>
            <Enum Name="RealmTransferFailed_Money" Id="14922"/>
            <Enum Name="RealmTransferFailed_CharacterCooldown" Id="14923"/>
            <Enum Name="RenameFailed_GameSessionMissing" Id="14924"/>
            <Enum Name="RealmTransferFailed_HasSavedInstance" Id="17228"/>
            <Enum Name="UndeleteOk" Id="17284"/>
            <Enum Name="UndeleteFailed" Id="17285"/>
        </EnumSet>
        <EnumSet Name="CodeEnumCharacterSelectResults" Incomplete="true" Id="12880">
            <Enum Name="FailedRename" Id="12881"/>
            <Enum Name="Failed" Id="12882"/>
            <Enum Name="FailedDisabled" Id="12883"/>
            <Enum Name="FailedCharacterInWorld" Id="12884"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountCurrency" Incomplete="true" Id="12885">
            <Enum Name="None" Id="12886"/>
            <Enum Name="CREDD" Id="12887"/>
            <Enum Name="RealmTransfer" Id="12888"/>
            <Enum Name="NameChange" Id="12889"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountOperationResult" Incomplete="true" Id="12890">
            <Enum Name="Ok" Id="12891"/>
            <Enum Name="GenericFail" Id="12892"/>
            <Enum Name="DBError" Id="12893"/>
            <Enum Name="MTXError" Id="12894"/>
            <Enum Name="InvalidOffer" Id="12895"/>
            <Enum Name="InvalidPrice" Id="12896"/>
            <Enum Name="NotEnoughCurrency" Id="12897"/>
            <Enum Name="NeedTransaction" Id="12898"/>
            <Enum Name="InvalidAccountItem" Id="12899"/>
            <Enum Name="InvalidPendingItem" Id="12900"/>
            <Enum Name="InvalidInventoryItem" Id="12901"/>
            <Enum Name="NoConnection" Id="12902"/>
            <Enum Name="NoCharacter" Id="12903"/>
            <Enum Name="AlreadyClaimed" Id="12904"/>
            <Enum Name="MaxEntitlementCount" Id="12905"/>
            <Enum Name="NoRegift" Id="12906"/>
            <Enum Name="NoGifting" Id="12907"/>
            <Enum Name="InvalidFriend" Id="12908"/>
            <Enum Name="InvalidCoupon" Id="12909"/>
            <Enum Name="CannotReturn" Id="12910"/>
            <Enum Name="Prereq" Id="12911"/>
            <Enum Name="CREDDExchangeNotLoaded" Id="12912"/>
            <Enum Name="NoCREDD" Id="12913"/>
            <Enum Name="NoMatchingOrder" Id="12914"/>
            <Enum Name="InvalidCREDDOrder" Id="12915"/>
            <Enum Name="Cooldown" Id="12916"/>
            <Enum Name="MissingEntitlement" Id="12917"/>
        </EnumSet>
        <EnumSet Name="CodeEnumAccountOperation" Incomplete="true" Id="12918">
            <Enum Name="MTXPurchase" Id="12919"/>
            <Enum Name="ClaimPending" Id="12920"/>
            <Enum Name="ReturnPending" Id="12921"/>
            <Enum Name="TakeItem" Id="12922"/>
            <Enum Name="GiftItem" Id="12923"/>
            <Enum Name="RedeemCoupon" Id="12924"/>
            <Enum Name="GetCREDDExchangeInfo" Id="12925"/>
            <Enum Name="SellCREDD" Id="12926"/>
            <Enum Name="BuyCREDD" Id="12927"/>
            <Enum Name="CancelCREDDOrder" Id="12928"/>
            <Enum Name="ExpireCREDDOrder" Id="12929"/>
            <Enum Name="SellCREDDComplete" Id="12930"/>
            <Enum Name="BuyCREDDComplete" Id="12931"/>
            <Enum Name="CREDDRedeem" Id="14925"/>
        </EnumSet>
    </Library>
    <Library Name="RealmSelectScreenLib" Incomplete="true" Id="12932" DevOnly="true">
        <Function Name="GetRealmList" Incomplete="true" Id="12933"/>
        <Function Name="GetRealmMessages" Incomplete="true" Id="12934"/>
        <Function Name="SetCurrentRealm" Incomplete="true" Id="12935"/>
        <Function Name="SelectRealm" Incomplete="true" Id="12936"/>
        <Function Name="ExitToLogin" Incomplete="true" Id="12937"/>
        <Event Name="RealmListChanged" Incomplete="true" Id="7014"/>
        <Function Name="ExitToCharacter" Incomplete="true" Id="14926"/>
        <Event Name="RealmBroadcast" Incomplete="true" Id="14927"/>
        <Event Name="RealmBack" Incomplete="true" Id="16476"/>
    </Library>
    <Library Name="CombatFloaters" DevOnly="true" Id="13302" NotStandard="true" InternalNotes="Why is this a thing?  CombatFloaters vs. CombatFloater is retarded naming convention.
This isn&apos;t used in our current Lua and may be depricated." Deprecated="true">
        <Function Name="GetNodes" Incomplete="true" Id="13303" Deprecated="true" DevOnly="true"/>
        <Function Name="SaveNode" Incomplete="true" Id="13304" Deprecated="true" DevOnly="true"/>
        <Function Name="FormatDisplayName" Incomplete="true" Id="13305" Deprecated="true" DevOnly="true"/>
        <Function Name="GetFormats" Incomplete="true" Id="13306" Deprecated="true" DevOnly="true"/>
        <Function Name="GetLocations" Incomplete="true" Id="13307" Deprecated="true" DevOnly="true"/>
        <Function Name="GetAttachments" Incomplete="true" Id="13308" Deprecated="true" DevOnly="true"/>
        <Function Name="CombatMessageStringCount" Incomplete="true" Id="13309" Deprecated="true" DevOnly="true"/>
        <Function Name="CombatMessageString_None" Incomplete="true" Id="13310" Deprecated="true" DevOnly="true"/>
    </Library>
    <Object Name="FriendshipLib" Id="14928" Desc="A library that contains functions for interacting with the game&apos;s Friend and Account Friend systems.  ">
        <Function Name="RespondToInvite" Incomplete="true" Id="14929"/>
        <Function Name="AddByName" Id="14930" Desc="Changes the friendship type with the  player with the specified name." Example="If the Friendship Type is Friend or Account Friend, an invite will be sent to the player.  Other changes in Friend status do not need confirmation from the other player.">
            <Param Name="eFriendshipType" Desc="The friendship type that the player will change to.  This value lines up with FriendshipLib.CharacterFriendshipType set of constants." Type="Integer" Id="17001"/>
            <Param Name="strName" Desc="The name of the player whose friendship type will be updated." Type="String" Id="17002"/>
            <Param Name="strRealmName" Desc="The name of the realm that the player is on.  This is only necessary for players that are not on the same realm." Type="String" Id="17003"/>
            <Param Name="strNote" Desc="A note that will be sent to the specified player if the friendship type is either Friend or Account Friend.  This note will be visible in the invite that the player receives." Type="String" Id="17004"/>
        </Function>
        <Function Name="AddByUnit" Incomplete="true" Id="14931"/>
        <Function Name="AddByGroupIndex" Id="14932" Desc="Attempts to change the friendship status of a player in your current group." Example="This will send an invite if the type sent is Friend or Account friend.">
            <Param Name="eType" Desc="The friendship status that the player wants to add to the specified group member.  This value lines up with the FriendshipLib.CharacterFriendshipType set of constants." Type="Integer" Id="16995"/>
            <Param Name="nMemberIdx" Desc="The index of the player within the group." Type="Integer" Id="16996"/>
        </Function>
        <Function Name="AddBySuggested" Incomplete="true" Id="14933"/>
        <Function Name="GetInviteList" Incomplete="true" Id="14934"/>
        <Function Name="GetInviteById" Incomplete="true" Id="14935"/>
        <Function Name="InviteMarkSeen" Incomplete="true" Id="14936"/>
        <Function Name="Remove" Incomplete="true" Id="14937"/>
        <Function Name="SetNote" Incomplete="true" Id="14938"/>
        <Function Name="SetType" Incomplete="true" Id="14939"/>
        <Function Name="GetById" Incomplete="true" Id="14940"/>
        <Function Name="GetList" Incomplete="true" Id="14941"/>
        <Function Name="IsLoaded" Incomplete="true" Id="14942"/>
        <Function Name="IsLocked" Incomplete="true" Id="14943"/>
        <Function Name="SetLock" Incomplete="true" Id="14944"/>
        <Function Name="GetLocations" Incomplete="true" Id="14945"/>
        <Function Name="SetAutoResponseMessages" Incomplete="true" Id="14946"/>
        <Function Name="SetAwayFromKeyboardMessage" Incomplete="true" Id="14947"/>
        <Function Name="SetDoNotDisturbMessage" Incomplete="true" Id="14948"/>
        <Function Name="GetPersonalStatus" Incomplete="true" Id="14949"/>
        <Function Name="SetPersonalPresenceState" Incomplete="true" Id="14950"/>
        <Function Name="SetPersonalIgnoreStrangersState" Incomplete="true" Id="14951"/>
        <Function Name="GetAccountInviteList" Incomplete="true" Id="14952"/>
        <Function Name="GetAccountList" Incomplete="true" Id="14953"/>
        <Function Name="AccountAddByEmail" Id="14954" Desc="Attempts to send an account friend invite to the account that is registered to the specified email address.">
            <Param Name="strAddress" Desc="The email address associated with the account that the player wants to send the invite to." Type="String" Id="16985"/>
            <Param Name="strNote" Desc="A note that will be sent to the player that receives the account friend invite." Type="String" Id="16986"/>
        </Function>
        <Function Name="AccountAddByUpgrade" Id="14955" Desc="Attempts to send an invitation to upgrade a Friend to an Account Friend.">
            <Param Name="idFriend" Desc="The Friend id of the player that will receive the Account Friend Invite." Type="Integer" Id="16989"/>
            <Param Name="strNote" Desc="A note that the person who receives the Account Friend invite will see in the invite." Type="String" Id="16990"/>
        </Function>
        <Function Name="AccountInviteMarkSeen" Id="14956" Desc="Marks an account invite as &quot;Seen&quot; by the system." Remarks="This flag has no set use, however the UI tends to use it to inform the player that they have pending invites."/>
        <Function Name="AccountInviteRespond" Id="14957" Desc="Sends a response to an Account Invite that the player has received.">
            <Param Name="idFriend" Desc="The id of the friend invite that the player is responding to." Type="Integer" Id="16991"/>
            <Param Name="bAccepted" Desc="Whether the player accepted the invite or not." Type="Boolean" Id="16992"/>
        </Function>
        <Function Name="AccountRemove" Id="14958" Desc="Removes the specified Account Friend from the player&apos;s friends&apos; list">
            <Param Name="idFriend" Desc="The Friend id of the Account Friend that the player wants to remove." Type="Integer" Id="16994"/>
        </Function>
        <Function Name="GetAccountById" Incomplete="true" Id="14959"/>
        <Function Name="GetAccountInviteById" Incomplete="true" Id="14960"/>
        <Function Name="SetPublicNote" Incomplete="true" Id="14961"/>
        <Function Name="SetPublicDisplayName" Incomplete="true" Id="14962"/>
        <Function Name="SetFriendPrivateData" Incomplete="true" Id="14963"/>
        <Function Name="GetUnitById" Incomplete="true" Id="14964"/>
        <Function Name="GetSuggestedList" Incomplete="true" Id="14965"/>
        <Function Name="GetSuggestedById" Incomplete="true" Id="14966"/>
        <Function Name="VisitResidence" Incomplete="true" Id="14967"/>
        <Function Name="NeighborInvite" Incomplete="true" Id="14968"/>
        <Function Name="PrepareInfractionReportInvite" Incomplete="true" Id="14969"/>
    </Object>
    <Library Name="LiveEventsLib" Incomplete="true" Id="14970">
        <Function Name="GetVisibleLiveEventList" Incomplete="true" Id="14971"/>
        <Function Name="GetLiveEvent" Incomplete="true" Id="14972"/>
    </Library>
    <Object Name="ChatChannelLib" Id="14973" Deprecated="true" InternalNotes="This is the exact same as ChatChannel.  We aren&apos;t using this library and should probably remove it.">
        <Method Name="GetName" Id="14974" Deprecated="true"/>
        <Method Name="GetCommand" Id="14975" Deprecated="true"/>
        <Method Name="GetAbbreviation" Id="14976" Deprecated="true"/>
        <Method Name="GetAlternate" Id="14977" Deprecated="true"/>
        <Method Name="GetType" Id="14978" Deprecated="true"/>
        <Method Name="IsCustom" Id="14979" Deprecated="true"/>
        <Method Name="IsOwner" Id="14980" Deprecated="true"/>
        <Method Name="IsModerator" Id="14981" Deprecated="true"/>
        <Method Name="IsMuted" Id="14982" Deprecated="true"/>
        <Method Name="CanSend" Id="14983" Deprecated="true"/>
        <Method Name="Send" Id="14984" Deprecated="true"/>
        <Method Name="SetData" Id="14985" Deprecated="true"/>
        <Method Name="GetData" Id="14986" Deprecated="true"/>
        <Method Name="SetProfanity" Id="14987" Deprecated="true"/>
        <Method Name="GetProfanity" Id="14988" Deprecated="true"/>
        <Method Name="GetMembers" Id="14989" Deprecated="true"/>
        <Method Name="GetBans" Id="14990" Deprecated="true"/>
        <Method Name="RequestMembers" Id="14991" Deprecated="true"/>
        <Method Name="SetModerator" Id="14992" Deprecated="true"/>
        <Method Name="SetMute" Id="14993" Deprecated="true"/>
        <Method Name="PassOwner" Id="14994" Deprecated="true"/>
        <Method Name="Leave" Id="14995" Deprecated="true"/>
        <Method Name="CanLeave" Id="14996" Deprecated="true"/>
        <Method Name="Kick" Id="14997" Deprecated="true"/>
        <Method Name="SetPassword" Id="14998" Deprecated="true"/>
        <Method Name="Post" Id="14999" Deprecated="true"/>
        <Function Name="is" Incomplete="true" Id="15000" Deprecated="true"/>
        <Method Name="__eq" Incomplete="true" Id="16539"/>
        <Method Name="__gc" Incomplete="true" Id="16540"/>
        <Method Name="GetUniqueId" Incomplete="true" Id="17144"/>
    </Object>
    <Object Name="GuildTypeLib" Incomplete="true" Id="15001">
        <Method Name="GetType" Incomplete="true" Id="15002"/>
        <Method Name="GetName" Incomplete="true" Id="15003"/>
        <Method Name="Modify" Incomplete="true" Id="15004"/>
        <Method Name="Kick" Incomplete="true" Id="15005"/>
        <Method Name="Invite" Incomplete="true" Id="15006"/>
        <Method Name="Leave" Incomplete="true" Id="15007"/>
        <Method Name="Promote" Incomplete="true" Id="15008"/>
        <Method Name="PromoteMaster" Incomplete="true" Id="15009"/>
        <Method Name="Demote" Incomplete="true" Id="15010"/>
        <Method Name="AddRank" Incomplete="true" Id="15011"/>
        <Method Name="ModifyRank" Incomplete="true" Id="15012"/>
        <Method Name="RenameRank" Incomplete="true" Id="15013"/>
        <Method Name="RemoveRank" Incomplete="true" Id="15014"/>
        <Method Name="Vote" Incomplete="true" Id="15015"/>
        <Method Name="Nominate" Incomplete="true" Id="15016"/>
        <Method Name="Disband" Incomplete="true" Id="15017"/>
        <Method Name="GetRanks" Incomplete="true" Id="15018"/>
        <Method Name="GetFlags" Incomplete="true" Id="15019"/>
        <Method Name="SetFlags" Incomplete="true" Id="15020"/>
        <Method Name="GetChannel" Incomplete="true" Id="15021"/>
        <Method Name="RequestMembers" Incomplete="true" Id="15022"/>
        <Method Name="GetMyRank" Incomplete="true" Id="15023"/>
        <Method Name="SetAsNameplate" Incomplete="true" Id="15024"/>
        <Method Name="IsNameplate" Incomplete="true" Id="15025"/>
        <Method Name="GetMemberCount" Incomplete="true" Id="15026"/>
        <Method Name="GetOnlineMemberCount" Incomplete="true" Id="15027"/>
        <Method Name="GetStandard" Incomplete="true" Id="15028"/>
        <Method Name="SetStandard" Incomplete="true" Id="15029"/>
        <Method Name="GetInfluence" Incomplete="true" Id="15030"/>
        <Method Name="GetBonusInfluenceRemaining" Incomplete="true" Id="15031"/>
        <Method Name="BeginBankItemTransfer" Incomplete="true" Id="15032"/>
        <Method Name="EndBankItemTransfer" Incomplete="true" Id="15033"/>
        <Method Name="MoveBankItemToInventory" Incomplete="true" Id="15034"/>
        <Method Name="OpenBankTab" Incomplete="true" Id="15035"/>
        <Method Name="CloseBankTab" Incomplete="true" Id="15036"/>
        <Method Name="GetBankTab" Incomplete="true" Id="15037"/>
        <Method Name="RenameBankTab" Incomplete="true" Id="15038"/>
        <Method Name="GetBankTabName" Incomplete="true" Id="15039"/>
        <Method Name="GetBankTabCount" Incomplete="true" Id="15040"/>
        <Method Name="GetBankTabSlots" Incomplete="true" Id="15041"/>
        <Method Name="ListBossTokens" Incomplete="true" Id="15042"/>
        <Method Name="GetBossTokens" Incomplete="true" Id="15043"/>
        <Method Name="UseBossToken" Incomplete="true" Id="15044"/>
        <Method Name="IsArenaTeam" Incomplete="true" Id="15045"/>
        <Method Name="GetMoney" Incomplete="true" Id="15046"/>
        <Method Name="GetBankMoneyWithdrawnToday" Incomplete="true" Id="15047"/>
        <Method Name="GetBankMoneyRepairToday" Incomplete="true" Id="15048"/>
        <Method Name="GetBankTabItemWithdrawnToday" Incomplete="true" Id="15049"/>
        <Method Name="DepositMoney" Incomplete="true" Id="15050"/>
        <Method Name="WithdrawMoney" Incomplete="true" Id="15051"/>
        <Method Name="GetWarCoins" Incomplete="true" Id="15052"/>
        <Method Name="SetBankTabPermissions" Incomplete="true" Id="15053"/>
        <Method Name="SetRankBankMoneyLimit" Incomplete="true" Id="15054"/>
        <Method Name="SetRankBankRepairLimit" Incomplete="true" Id="15055"/>
        <Method Name="IsUnitMember" Incomplete="true" Id="15056"/>
        <Method Name="GetPvpRatings" Incomplete="true" Id="15057"/>
        <Method Name="GetQueueState" Incomplete="true" Id="15058"/>
        <Method Name="GetPerks" Incomplete="true" Id="15059"/>
        <Method Name="GetPerk" Incomplete="true" Id="15060"/>
        <Method Name="PurchasePerk" Incomplete="true" Id="15061"/>
        <Method Name="ActivatePerk" Incomplete="true" Id="15062"/>
        <Method Name="GetMessageOfTheDay" Incomplete="true" Id="15063"/>
        <Method Name="SetMessageOfTheDay" Incomplete="true" Id="15064"/>
        <Method Name="GetInfoMessage" Incomplete="true" Id="15065"/>
        <Method Name="SetInfoMessage" Incomplete="true" Id="15066"/>
        <Method Name="SetMemberNoteSelf" Incomplete="true" Id="15067"/>
        <Method Name="RepairItemVendor" Incomplete="true" Id="15068"/>
        <Method Name="RepairAllItemsVendor" Incomplete="true" Id="15069"/>
        <Method Name="GetCreationDate" Incomplete="true" Id="15070"/>
        <Method Name="RequestEventLogList" Incomplete="true" Id="15071"/>
        <Method Name="GetEventLogs" Incomplete="true" Id="15072"/>
        <Method Name="RequestRepairLogs" Incomplete="true" Id="15073"/>
        <Method Name="RequestMoneyLogs" Incomplete="true" Id="15074"/>
        <Method Name="RequestBankLogs" Incomplete="true" Id="15075"/>
        <Function Name="is" Incomplete="true" Id="15076"/>
        <Method Name="SetRankBankMoneyLimitToAll" Incomplete="true" Id="16477"/>
        <Method Name="__eq" Incomplete="true" Id="16541"/>
        <Method Name="__gc" Incomplete="true" Id="16542"/>
        <Method Name="GetBankMoneyRepairRemaining" Incomplete="true" Id="17145"/>
        <Method Name="Rename" Incomplete="true" Id="17146"/>
        <Method Name="SetRecruitmentDescription" Incomplete="true" Id="17147"/>
        <Method Name="GetRecruitmentDescription" Incomplete="true" Id="17148"/>
        <Method Name="SetRecruitmentDemand" Incomplete="true" Id="17149"/>
        <Method Name="GetRecruitmentDemands" Incomplete="true" Id="17150"/>
        <Method Name="SetGuildClassification" Incomplete="true" Id="17151"/>
        <Method Name="GetGuildClassification" Incomplete="true" Id="17152"/>
        <Method Name="SetRecruitmentMinLevel" Incomplete="true" Id="17153"/>
        <Method Name="GetRecruitmentMinLevel" Incomplete="true" Id="17154"/>
        <Method Name="SetMyRecruitmentAvailability" Incomplete="true" Id="17155"/>
        <Method Name="GetMyRecruitmentAvailability" Incomplete="true" Id="17156"/>
    </Object>
    <Object Name="IncidentReportLib" Incomplete="true" Id="15077">
        <Method Name="GetDescription" Incomplete="true" Id="15078"/>
        <Method Name="GetReason" Incomplete="true" Id="15079"/>
        <Method Name="GetSource" Incomplete="true" Id="15080"/>
        <Method Name="GetName" Incomplete="true" Id="15081"/>
        <Method Name="SetName" Incomplete="true" Id="15082"/>
        <Method Name="GetAvailableReasons" Incomplete="true" Id="15083"/>
        <Method Name="SetReason" Incomplete="true" Id="15084"/>
        <Method Name="SetPermanentIgnore" Incomplete="true" Id="15085"/>
        <Method Name="GetPermanentIgnore" Incomplete="true" Id="15086"/>
        <Function Name="is" Incomplete="true" Id="15087"/>
        <EnumSet Name="CodeEnumReportPlayerReason" Incomplete="true" Id="15088">
            <Enum Name="Spam" Id="15089"/>
            <Enum Name="Bot" Id="15090"/>
            <Enum Name="Cheat" Id="15091"/>
            <Enum Name="AFK" Id="15092"/>
        </EnumSet>
        <EnumSet Name="CodeEnumReportPlayerSource" Incomplete="true" Id="15093">
            <Enum Name="Default" Id="15094"/>
            <Enum Name="Mail" Id="15095"/>
            <Enum Name="FriendRequest" Id="15096"/>
            <Enum Name="PartyRequest" Id="15097"/>
            <Enum Name="InWorld" Id="15098"/>
            <Enum Name="Chat" Id="15099"/>
            <Enum Name="GuildRequest" Id="15100"/>
            <Enum Name="PvpMatch" Id="15101"/>
            <Enum Name="TradeRequest" Id="15102"/>
            <Enum Name="AccountFriendRequest" Id="15103"/>
            <Enum Name="NeighborRequest" Id="15104"/>
            <Enum Name="Overturn" Id="17157"/>
        </EnumSet>
        <Method Name="__gc" Incomplete="true" Id="16543"/>
        <Method Name="__eq" Incomplete="true" Id="16544"/>
    </Object>
    <Object Name="LiveEvent" Incomplete="true" Id="15105">
        <Method Name="GetId" Incomplete="true" Id="15106"/>
        <Method Name="GetEventType" Incomplete="true" Id="15107"/>
        <Method Name="GetMaxValue" Incomplete="true" Id="15108"/>
        <Method Name="ShouldSucceedOnExpire" Incomplete="true" Id="15109"/>
        <Method Name="GetEventCategory" Incomplete="true" Id="15110"/>
        <Method Name="GetParent" Incomplete="true" Id="15111"/>
        <Method Name="GetSummary" Incomplete="true" Id="15112"/>
        <Function Name="is" Incomplete="true" Id="15113"/>
        <EnumSet Name="LiveEventCategory" Incomplete="true" Id="16545">
            <Enum Name="RealmFlag" Id="16546"/>
            <Enum Name="Generic" Id="16547"/>
            <Enum Name="WorldStory" Id="16548"/>
            <Enum Name="Holiday" Id="16549"/>
            <Enum Name="OneTime" Id="16550"/>
        </EnumSet>
        <EnumSet Name="LiveEventFlags" Incomplete="true" Id="16551">
            <Enum Name="ShowCompletedObjectives" Id="16552"/>
            <Enum Name="Hidden" Id="16553"/>
            <Enum Name="CompleteOnMaxCountReached" Id="16554"/>
            <Enum Name="SuccessOnExpire" Id="16555"/>
            <Enum Name="CompleteOnExpire" Id="16556"/>
        </EnumSet>
        <EnumSet Name="LiveEventType" Incomplete="true" Id="16557">
            <Enum Name="Count" Id="16558"/>
            <Enum Name="Bitfield" Id="16559"/>
        </EnumSet>
        <Method Name="__eq" Incomplete="true" Id="16560"/>
        <Method Name="__gc" Incomplete="true" Id="16561"/>
    </Object>
    <Library Name="ContractsLib" Incomplete="true" Id="17158">
        <Function Name="GetPeriodicContracts" Incomplete="true" Id="17159"/>
        <Function Name="GetActiveContracts" Incomplete="true" Id="17160"/>
        <Function Name="IsAtContractBoard" Incomplete="true" Id="17161"/>
    </Library>
    <Object Name="Contract" Incomplete="true" Id="17162">
        <Method Name="GetId" Incomplete="true" Id="17163"/>
        <Method Name="GetQuest" Incomplete="true" Id="17164"/>
        <Method Name="GetQuality" Incomplete="true" Id="17165"/>
        <Method Name="GetType" Incomplete="true" Id="17166"/>
        <Method Name="IsAvailable" Incomplete="true" Id="17167"/>
        <Method Name="IsAccepted" Incomplete="true" Id="17168"/>
        <Method Name="IsAchieved" Incomplete="true" Id="17169"/>
        <Method Name="IsCompleted" Incomplete="true" Id="17170"/>
        <Method Name="Accept" Incomplete="true" Id="17171"/>
        <Method Name="Complete" Incomplete="true" Id="17172"/>
        <Function Name="is" Incomplete="true" Id="17173"/>
        <Method Name="GetRewardTrackType" Incomplete="true" Id="17229"/>
        <Method Name="GetRewardTrackValue" Incomplete="true" Id="17230"/>
    </Object>
    <Object Name="RecruitmentGuildTypeLib" Incomplete="true" Id="17174">
        <Method Name="RecruitmentRequestDetailedGuildInfo" Incomplete="true" Id="17175"/>
        <Method Name="RecruitmentGetDetailedGuildInfo" Incomplete="true" Id="17176"/>
        <Function Name="is" Incomplete="true" Id="17177"/>
    </Object>
    <WindowControl Name="ColorPicker" Incomplete="true" Id="17178">
        <Method Name="SetColor" Incomplete="true" Id="17179"/>
        <Method Name="GetColor" Incomplete="true" Id="17180"/>
        <Event Name="ColorChanged" Id="7008" NotTested="true" Desc="Fired whent he player selects a color from the ColorPicker window" NotStandard="true" InternalNotes="Uses CColor instead of ApolloColor">
            <Param Name="crNewColor" Desc="The color that was selected when this event was fired." Type="CColor" Id="13507"/>
        </Event>
    </WindowControl>
    <Library Name="RewardTrackLib" Incomplete="true" Id="17231">
        <Function Name="GetAllRewardTracks" Incomplete="true" Id="17232"/>
        <Function Name="GetActiveRewardTracks" Incomplete="true" Id="17233"/>
        <Function Name="GetActiveRewardTrackByType" Incomplete="true" Id="17234"/>
        <Function Name="ChooseRewardTrack" Incomplete="true" Id="17235"/>
    </Library>
    <Object Name="RewardTrack" Incomplete="true" Id="17236">
        <Method Name="GetId" Incomplete="true" Id="17237"/>
        <Method Name="GetType" Incomplete="true" Id="17238"/>
        <Method Name="GetName" Incomplete="true" Id="17239"/>
        <Method Name="GetSummary" Incomplete="true" Id="17240"/>
        <Method Name="GetImageAssetPath" Incomplete="true" Id="17241"/>
        <Method Name="GetNumRewards" Incomplete="true" Id="17242"/>
        <Method Name="GetRewardCost" Incomplete="true" Id="17243"/>
        <Method Name="IsActive" Incomplete="true" Id="17244"/>
        <Method Name="GetAllRewards" Incomplete="true" Id="17245"/>
        <Method Name="GetRewardPointsEarned" Incomplete="true" Id="17246"/>
        <Method Name="ClaimRewardPoint" Incomplete="true" Id="17247"/>
        <Function Name="is" Incomplete="true" Id="17248"/>
    </Object>
    <Library Name="CostumesLib" Incomplete="true" Id="17286">
        <Function Name="GetCostumeCount" Incomplete="true" Id="17287"/>
        <Function Name="GetCostumeUnlockLevel" Incomplete="true" Id="17288"/>
        <Function Name="GetCostumeIndex" Incomplete="true" Id="17289"/>
        <Function Name="SetCostumeIndex" Incomplete="true" Id="17290"/>
        <Function Name="GetCostume" Incomplete="true" Id="17291"/>
        <Function Name="GetUnlockedSlotItems" Incomplete="true" Id="17292"/>
        <Function Name="GetUnlockItemCount" Incomplete="true" Id="17293"/>
        <Function Name="GetActiveMannequinCostume" Incomplete="true" Id="17294"/>
    </Library>
    <Object Name="Costume" Incomplete="true" Id="17295">
        <Method Name="GetId" Incomplete="true" Id="17296"/>
        <Method Name="GetSlotItem" Incomplete="true" Id="17297"/>
        <Method Name="GetSlotItemIcon" Incomplete="true" Id="17298"/>
        <Method Name="IsSlotVisible" Incomplete="true" Id="17299"/>
        <Method Name="GetSlotDyes" Incomplete="true" Id="17300"/>
        <Method Name="SetSlotItem" Incomplete="true" Id="17301"/>
        <Method Name="SetSlotVisible" Incomplete="true" Id="17302"/>
        <Method Name="SetSlotDyes" Incomplete="true" Id="17303"/>
        <Method Name="HasChanges" Incomplete="true" Id="17304"/>
        <Method Name="DiscardChanges" Incomplete="true" Id="17305"/>
        <Method Name="SaveChanges" Incomplete="true" Id="17306"/>
        <Method Name="GetCostOfChanges" Incomplete="true" Id="17307"/>
        <Function Name="is" Incomplete="true" Id="17308"/>
    </Object>
    <Object Name="Talent" Incomplete="true" Id="1028" Prefix="tal" Deleted="true"/>
    <Object Name="TalentPool" Incomplete="true" Id="1049" Prefix="pool" Deleted="true"/>
    <WindowControl Name="CooldownWindow" Incomplete="true" Id="1908" Deleted="true"/>
    <WindowControl Name="LootWindow" Incomplete="true" Id="2634" Deleted="true"/>
    <Object Name="Guild" Prefix="guild" Id="8169" Deleted="true"/>
</Documentation>
