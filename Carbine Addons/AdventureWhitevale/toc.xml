<Addon Name="AdventureWhitevale" Version="1" APIVersion="2">
    <Script Name="AdventureWhitevale.lua" />
    <Form Name="WhitevaleAdventure.xml" />
</Addon>
oft. All rights reserved
-----------------------------------------------------------------------------------------------
 
require "Window"
 
-----------------------------------------------------------------------------------------------
-- AdventureWhitevale Module Definition
-----------------------------------------------------------------------------------------------
local AdventureWhitevale = {} 

local knSaveVersion = 1
 
-----------------------------------------------------------------------------------------------
-- Constants
-----------------------------------------------------------------------------------------------
-- e.g. local kiExampleVariableMax = 999
 
-----------------------------------------------------------------------------------------------
-- Initialization
-----------------------------------------------------------------------------------------------
function AdventureWhitevale:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self 

    -- initialize variables here

    return o
end

function AdventureWhitevale:Init()
    Apollo.RegisterAddon(self)
end

function AdventureWhitevale:OnSave(eType)
	if eType ~= GameLib.CodeEnumAddonSaveLevel.Character then
		return
	end
	
	local tSaveData = self.tAdventureInfo
	tSaveData.nSaveVersion = knSaveVersion
		
	return tSaveData
end

function AdventureWhitevale:OnRestore(eType, tSavedData)
	if not tSavedData or tSavedData.nSaveVersion ~= knSaveVersion then
		return
	end
	
	local bIsWhitevaleAdventure = false
	local tActiveEvents = PublicEvent.GetActiveEvents()

	for idx, peEvent in pairs(tActiveEvents) do
		if peEvent:GetEventType() == PublicEvent.PublicEventType_Adventure_Whitevale then
			bIsWhitevaleAdventure = true
		end
	end
	
	self.tAdventureInfo = {}
	
	if bIsWhitevaleAdventure then
		self.bShow = tSavedData.bIsShown
		self.tAdventureInfo.nRep = tSavedData.nRep or 0
		self.tAdventureInfo.nSons = tSavedData.nSons or 0
		self.tAdventureInfo.nRollers = tSavedData.nRollers or 0
		self.tAdventureInfo.nGrinders = tSavedData.nGrinders or 0
	end
end 

-----------------------------------------------------------------------------------------------
-- AdventureWhitevale OnLoad
-----------------------------------------------------------------------------------------------\
function AdventureWhitevale:OnLoad()
	self.xmlDoc = XmlDoc.CreateFromFile("WhitevaleAdventure.xml")
	self.xmlDoc:RegisterCallback("OnDocumentReady", self) 
end

function AdventureWhitevale:OnDocumentReady()
	Apollo.RegisterEventHandler("WindowManagementReady", 	"OnWindowManagementReady", self)
	
    -- Register handlers for events, slash commands and timer, etc.
    -- e.g. Apollo.RegisterEventHandler("KeyDown", "OnKeyDown", self)
    Apollo.RegisterSlashCommand("whitevaleadv", "OnWhitevaleAdventureOn", self)
    Apollo.RegisterEventHandler("WhitevaleAdvResource", "OnUpdateResource", self)
	Apollo.RegisterEventHandler("WhitevaleAdvShow", "OnShow", self)
	Apollo.RegisterEventHandler("ChangeWorld", "OnHide", self)
	
	self.tSons = {}
	self.tRollers = {}
	self.tGrinders = {}
	
    -- load our forms
    self.wnd = Apollo.LoadForm(self.xmlDoc, "WhitevaleAdventureForm", nil, self)
	self.xmlDoc = nil
	self.wndMain = self.wnd:FindChild("Main")
	self.wndRepBar = self.wndMain:FindChild("Rep")
	self.wndSonsLoyalty = self.wndMain:FindChild("SonsLoyalty")
	self.wndRollersLoyalty = self.wndMain:FindChild("RollersLoyalty")
	self.wndGrindersLoyalty = self.wndMain:FindChild("GrindersLoyalty")
	self.wndSonsLoyalty:FindChild("TitleSons"):SetText(Apollo.GetString("WhitevaleAdv_SonsOfRavok"))
	self.wndRollersLoyalty:FindChild("TitleRollers"):SetText(Apollo.GetString("WhitevaleAdv_RocktownRollers"))
	self.wndGrindersLoyalty:FindChild("TitleGrinders"):SetText(Apollo.GetString("WhitevaleAdv_Geargrinders"))
	self.wndSonsLoyalty:Show(false)