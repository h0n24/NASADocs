<?xml version="1.0" ?>
<Forms>
    <Form Class="Window" Name="ActionBarShortcut" LAnchorPoint="0.5" LAnchorOffset="-330" TAnchorPoint="1" TAnchorOffset="-187" RAnchorPoint="0.5" RAnchorOffset="330" BAnchorPoint="1" BAnchorOffset="-78" Border="0" Picture="0" BGColor="white" Sprite="ActionBarShortcut:spr_ActionBarShortcut_Float" Scale="1.0" NoClip="0" TextColor="white" Moveable="0" Overlapped="0" SwallowMouseClicks="1" IgnoreMouse="1" Visible="0" TransitionShowHide="1" RelativeToClient="1" TooltipColor="" Font="Default" Tooltip="">
        <Control Class="Window" LAnchorPoint="0" LAnchorOffset="80" TAnchorPoint="0" TAnchorOffset="27" RAnchorPoint="1" RAnchorOffset="-80" BAnchorPoint="1" BAnchorOffset="-20" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="ActionBarContainer" BGColor="white" TextColor="white" Sprite="" Picture="0" IgnoreMouse="1" Overlapped="0" NewControlDepth="1" TooltipColor="" Tooltip=""/>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Dock" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="0" LAnchorOffset="26" TAnchorPoint="0" TAnchorOffset="24" RAnchorPoint="0" RAnchorOffset="79" BAnchorPoint="0" BAnchorOffset="66" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="DockBtn" TooltipColor="" TestAlpha="1">
            <Event Name="ButtonCheck" Function="OnDockBtn"/>
            <Event Name="ButtonUncheck" Function="OnDockBtn"/>
        </Control>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Orientation" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="1" LAnchorOffset="-79" TAnchorPoint="0" TAnchorOffset="24" RAnchorPoint="1" RAnchorOffset="-26" BAnchorPoint="0" BAnchorOffset="66" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="OrientationBtn" TooltipColor="" TestAlpha="1">
            <Event Name="ButtonCheck" Function="OnOrientationBtn"/>
            <Event Name="ButtonUncheck" Function="OnOrientationBtn"/>
        </Control>
    </Form>
    <Form Class="Window" Name="ActionBarShortcutHorz" LAnchorPoint="0.5" LAnchorOffset="-248" TAnchorPoint="0" TAnchorOffset="100" RAnchorPoint="0.5" RAnchorOffset="247" BAnchorPoint="0" BAnchorOffset="209" Border="0" Picture="1" BGColor="white" Sprite="ActionBarShortcut:spr_ActionBarShortcut_Float" Scale="1.0" NoClip="0" TextColor="white" Moveable="1" Overlapped="1" SwallowMouseClicks="1" IgnoreMouse="1" Visible="0" TransitionShowHide="1" RelativeToClient="1" TooltipColor="" Font="Default" Tooltip="" RequireMetaKeyToMove="1">
        <Control Class="Window" LAnchorPoint="0" LAnchorOffset="72" TAnchorPoint="0" TAnchorOffset="27" RAnchorPoint="1" RAnchorOffset="-72" BAnchorPoint="1" BAnchorOffset="-20" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="ActionBarContainer" BGColor="white" TextColor="white" Sprite="" Picture="0" IgnoreMouse="1" Overlapped="0" NewControlDepth="1" TooltipColor=""/>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Dock" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="0" LAnchorOffset="16" TAnchorPoint="0" TAnchorOffset="24" RAnchorPoint="0" RAnchorOffset="69" BAnchorPoint="0" BAnchorOffset="66" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="DockBtn" TooltipColor="" TestAlpha="1" DrawAsCheckbox="0">
            <Event Name="ButtonCheck" Function="OnDockBtn"/>
            <Event Name="ButtonUncheck" Function="OnDockBtn"/>
        </Control>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Orientation" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="1" LAnchorOffset="-69" TAnchorPoint="0" TAnchorOffset="24" RAnchorPoint="1" RAnchorOffset="-16" BAnchorPoint="0" BAnchorOffset="66" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="OrientationBtn" TooltipColor="" TestAlpha="1">
            <Event Name="ButtonCheck" Function="OnOrientationBtn"/>
            <Event Name="ButtonUncheck" Function="OnOrientationBtn"/>
        </Control>
    </Form>
    <Form Class="Window" Name="ActionBarShortcutVert" LAnchorPoint="0" LAnchorOffset="0" TAnchorPoint="0" TAnchorOffset="0" RAnchorPoint="0" RAnchorOffset="108" BAnchorPoint="0" BAnchorOffset="572" Border="0" Picture="1" BGColor="white" Sprite="ActionBarShortcut:spr_ActionBarShortcut_FloatVert" Scale="1.0" NoClip="0" TextColor="white" Moveable="1" Overlapped="1" SwallowMouseClicks="1" IgnoreMouse="1" Visible="0" TransitionShowHide="1" RelativeToClient="1" TooltipColor="" Font="Default" Tooltip="" RequireMetaKeyToMove="1">
        <Control Class="Window" LAnchorPoint="0.5" LAnchorOffset="-21" TAnchorPoint="0" TAnchorOffset="56" RAnchorPoint="0.5" RAnchorOffset="21" BAnchorPoint="1" BAnchorOffset="-56" RelativeToClient="1" Font="Default" Text="" Template="Default" Name="ActionBarContainer" BGColor="white" TextColor="white" Sprite="" Picture="0" IgnoreMouse="1" Overlapped="0" NewControlDepth="1" TooltipColor=""/>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Dock" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="0.5" LAnchorOffset="-27" TAnchorPoint="0" TAnchorOffset="12" RAnchorPoint="0.5" RAnchorOffset="26" BAnchorPoint="0" BAnchorOffset="54" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="DockBtn" TooltipColor="" TestAlpha="1">
            <Event Name="ButtonCheck" Function="OnDockBtn"/>
            <Event Name="ButtonUncheck" Function="OnDockBtn"/>
        </Control>
        <Control Class="Button" Base="ActionBarShortcut:btn_ActionBarShortcut_Orientation" Font="DefaultButton" ButtonType="Check" RadioGroup="" LAnchorPoint="0.5" LAnchorOffset="-27" TAnchorPoint="1" TAnchorOffset="-56" RAnchorPoint="0.5" RAnchorOffset="26" BAnchorPoint="1" BAnchorOffset="-14" DT_VCENTER="1" DT_CENTER="1" BGColor="UI_BtnBGDefault" TextColor="UI_BtnTextDefault" NormalTextColor="UI_BtnTextDefault" PressedTextColor="UI_BtnTextDefault" FlybyTextColor="UI_BtnTextDefault" PressedFlybyTextColor="UI_BtnTextDefault" DisabledTextColor="UI_BtnTextDefault" TooltipType="OnCursor" Name="OrientationBtn" TooltipColor="" TestAlpha="1">
            <Event Name="ButtonCheck" Function="OnOrientationBtn"/>
            <Event Name="ButtonUncheck" Function="OnOrientationBtn"/>
        </Control>
    </Form>
    <Form Class="Window" LAnchorPoint="0" LAnchorOffset="0" TAnchorPoint="0" TAnchorOffset="0" RAnchorPoint="0" RAnchorOffset="48" BAnchorPoint="0" BAnchorOffset="62" RelativeToClient="1" Font="Default" Text="" Template="Default" TooltipType="OnCursor" Name="ActionBarShortcutItem" Border="0" Picture="1" SwallowMouseClicks="1" Moveable="0" Escapable="0" Overlapped="0" BGColor="white" TextColor="white" TooltipColor="" IgnoreMouse="1" Sprite="ActionBarShortcut:spr_ActionBarShortcut_Slot">
        <Control Class="ActionBarButton" Name="ActionBarShortcutBtn" ContentType="SBar" ContentId="0" Base="CRB_DEMO_WrapperSprites:btnDemo_CharInvisible" RelativeToClient="1" IfHoldNoSignal="1" DT_VCENTER="1" DT_CENTER="1" LAnchorPoint="0.5" LAnchorOffset="-21" TAnchorPoint="0.5" TAnchorOffset="-28" RAnchorPoint="0.5" RAnchorOffset="15" BAnchorPoint="0.5" BAnchorOffset="20" NeverBringToFront="1" Picture="0" WindowSoundTemplate="ActionBarButton" BGColor="white" TextColor="white" IgnoreMouse="0" TooltipType="OnCursor" IgnoreTooltipDelay="1" TooltipColor="" DrawShortcutBottom="1">
            <Event Name="GenerateTooltip" Function="OnGenerateTooltip"/>
        </Control>
    </Form>
</Forms>
tion.tCenter.nX) / (#arRow + 1)
				arRow[#arRow + 1] = self.tActionBarsHorz[nOtherBar]
			end
		end
	end

	-- if there were any overlapping then rearrange all of them
	if #arRow > 1 then
		local kOverlap = 4

		local nLeft = nRowX - nRowWidth / 2
		local tDisplay = Apollo.GetDisplaySize()
		if tDisplay and tDisplay.nWidth then
			if nLeft + nRowWidth > tDisplay.nWidth / 2 then
				nLeft = nRowWidth / -2
			end
		end
		nLeft = nLeft + kOverlap * #arRow

		for nIdx, nTmpBar in pairs(arRow) do
			local tTmpPosition = self:GetBarPosition(nTmpBar)
			self:SetBarPosition(nTmpBar, nil, { nX = nLeft + tTmpPosition.tSize.nWidth / 2 } )
			nLeft = nLeft + tTmpPosition.tSize.nWidth - kOverlap
		end
	end
end

function ActionBarShortcut:ShowBarFloatVert(nBar, bIsVisible, nShortcuts)
	-- set the position of this action bar ignoring overlapping
	self:SetBarPosition( self.tActionBarsVert[nBar], { nHeight = (nShortcuts * 60) + 116 } )

	local tPosition = self:GetBarPosition(self.tActionBarsVert[nBar])

	-- collect all overlapping bars
	local arRow = { nBar }
	local nRowHeight = tPosition.tSize.nHeight
	local nRowY = tPosition.tCenter.nY
	for nOtherBar,tActionBar in pairs(self.tActionBarsVert) do
		if nOtherBar ~= nBar and tActionBar:IsShown() then
			local tOtherPosition = self:GetBarPosition(nOtherBar)

			if tOtherPosition and tOtherPosition.tCenter and tOtherPosition.tCenter.nX == tPosition.tCenter.nX then
				nRowHeight = nRowHeight + tOtherPosition.tSize.nHeight
				nRowY = (nRowY * #arRow + tOtherPosition.tCenter.nY) / (#arRow + 1)
				arRow[#arRow + 1] = self.tActionBarsVert[nOtherBar]
			end
		end
	end

	-- if there were any overlapping then rearrange all of them
	if #arRow > 1 then
		local kOverlap = 4

		local nTop = nRowY - nRowHeight / 2
		local tDisplay = Apollo.GetDisplaySize()
		if tDisplay and tDisplay.nWidth then
			if nTop + nRowHeight > tDisplay.nWidth / 2 then
				nTop = nRowHeight / -2
			end
		end
		nTop = nTop + kOverlap * #arRow

		for nIdx, nTmpBar in pairs(arRow) do
			local tTmpPosition = self:GetBarPosition(nTmpBar)
			self:SetBarPosition(nTmpBar, nil, { nY = nTop + tTmpPosition.tSize.nHeight / 2 } )
			nTop = nTop + tTmpPosition.tSize.nHeight - kOverlap
		end
	end
end

function ActionBarShortcut:ShowWindow(nBar, bIsVisible, nShortcuts)
    if self.tActionBarsHorz[nBar] == nil then
		return
	end
	
	self.tActionBarSettings[nBar] = {}
	self.tActionBarSettings[nBar].bIsVisible = bIsVisible
	self.tActionBarSettings[nBar].nShortcuts = nShortcuts

	if nShortcuts and bIsVisible then
		--self:ShowBarDocked(nBar, bIsVisible, nShortcuts)
		self:ShowBarFloatHorz(nBar, bIsVisible, nShortcuts)
		self:ShowBarFloatVert(nBar, bIsVisible, nShortcuts)
	end
	
	if not self.bTimerRunning then
		self.timerShorcutArt:Start()
		self.bTimerRunning = true
	end

	self.tActionBars[nBar]:Show(bIsVisible and self.bDocked, not bIsVisible)
	self.tActionBarsHorz[nBar]:Show(bIsVisible and not self.bDocked and self.bHorz, not bIsVisible)
	self.tActionBarsVert[nBar]:Show(bIsVisible and not self.bDocked and not self.bHorz, not bIsVisible)
end

function ActionBarShortcut:OnActionBarShortcutArtTimer()
	self.bTimerRunning = false
	local bBarVisible = false

	for nbar, tSettings in pairs(self.tActionBarSettings) do
		bBarVisible = bBarVisible or (tSettings.bIsVisible and self.bDocked)
	end
	
	Event_FireGenericEvent("ShowActionBarShortcutDocked", bBarVisible)
end

function 